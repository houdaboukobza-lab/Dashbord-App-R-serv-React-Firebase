{"ast":null,"code":"/**\n * Cartesian chart renderer for financial chart\n */\nimport { Chart } from '../../chart/chart';\nimport { Size } from '@syncfusion/ej2-svg-base';\nimport { remove, extend } from '@syncfusion/ej2-base';\nimport { onZooming } from '../../common/model/constants';\nimport { getElement } from '../../common/utils/helper';\n/** @private */\n\nvar CartesianChart =\n/** @class */\nfunction () {\n  function CartesianChart(chart) {\n    this.stockChart = chart;\n  }\n\n  CartesianChart.prototype.initializeChart = function (chartArgsData) {\n    var _this = this;\n\n    var stockChart = this.stockChart;\n    var isProtect = 'isProtectedOnChange';\n    stockChart[isProtect] = true;\n\n    if (!stockChart.chartObject) {\n      stockChart.chartObject = stockChart.renderer.createGroup({\n        id: stockChart.element.id + '_stockChart_chart'\n      });\n      stockChart.mainObject.appendChild(stockChart.chartObject);\n    } else {\n      var chartElement = document.getElementById(stockChart.chartObject.id);\n\n      while (chartElement.firstChild) {\n        chartElement.removeChild(chartElement.firstChild);\n      }\n\n      if (getElement(stockChart.chartObject + '_tooltip')) {\n        remove(getElement(stockChart.chartObject + '_tooltip'));\n      }\n    }\n\n    this.cartesianChartSize = this.calculateChartSize();\n    stockChart.chart = new Chart({\n      chartArea: stockChart.chartArea,\n      margin: this.findMargin(stockChart),\n      primaryXAxis: this.copyObject(stockChart.primaryXAxis),\n      primaryYAxis: this.copyObject(stockChart.primaryYAxis),\n      rows: stockChart.rows,\n      indicators: stockChart.indicators,\n      axes: stockChart.axes,\n      tooltipRender: function (args) {\n        _this.stockChart.trigger('tooltipRender', args);\n      },\n      axisLabelRender: function (args) {\n        _this.stockChart.trigger('axisLabelRender', args);\n      },\n      seriesRender: function (args) {\n        if (args.data && _this.stockChart.startValue && _this.stockChart.endValue) {\n          args.data = args.data.filter(function (data) {\n            return new Date(Date.parse(data[args.series.xName])).getTime() >= _this.stockChart.startValue && new Date(Date.parse(data[args.series.xName])).getTime() <= _this.stockChart.endValue;\n          });\n        }\n\n        args.data = chartArgsData ? chartArgsData : args.data; //args.data = this.stockChart.findCurrentData(args.data ,args.series.xName);\n\n        _this.stockChart.trigger('seriesRender', args);\n      },\n      onZooming: function (args) {\n        _this.stockChart.trigger(onZooming, args);\n      },\n      pointClick: function (args) {\n        _this.stockChart.trigger('pointClick', args);\n      },\n      pointMove: function (args) {\n        _this.stockChart.trigger('pointMove', args);\n      },\n      dataSource: stockChart.dataSource,\n      series: this.findSeriesCollection(stockChart.series),\n      zoomSettings: this.copyObject(stockChart.zoomSettings),\n      tooltip: stockChart.tooltip,\n      crosshair: stockChart.crosshair,\n      height: this.cartesianChartSize.height.toString(),\n      selectedDataIndexes: stockChart.selectedDataIndexes,\n      selectionMode: stockChart.selectionMode,\n      isMultiSelect: stockChart.isMultiSelect,\n      annotations: stockChart.annotations,\n      theme: stockChart.theme,\n      legendSettings: {\n        visible: false\n      },\n      zoomComplete: function (args) {\n        if (args.axis.valueType === 'DateTime' && stockChart.rangeNavigator) {\n          _this.stockChart.zoomChange = true;\n\n          var newRange = _this.calculateUpdatedRange(args.currentZoomFactor, args.currentZoomPosition, args.axis);\n\n          stockChart.rangeSelector.sliderChange(newRange.start, newRange.end);\n        }\n      }\n    });\n\n    if (stockChart.indicators.length !== 0) {\n      if (stockChart.isSelect) {\n        for (var i = 0; i < stockChart.indicators.length; i++) {\n          stockChart.chart.indicators[i].animation.enable = false;\n          stockChart.chart.indicators[i].dataSource = extend([], stockChart.chart.series[0].dataSource, null, true);\n        }\n      }\n\n      stockChart.isSelect = true;\n    }\n\n    stockChart.chart.stockChart = stockChart;\n    stockChart.chart.appendTo(stockChart.chartObject);\n    stockChart[isProtect] = false;\n  };\n\n  CartesianChart.prototype.findMargin = function (stockChart) {\n    var margin = {};\n    margin.top = stockChart.margin.top * 2;\n    margin.left = stockChart.margin.left;\n    margin.right = stockChart.margin.right;\n    margin.bottom = stockChart.margin.bottom;\n    return margin;\n  };\n\n  CartesianChart.prototype.findSeriesCollection = function (series) {\n    var chartSeries = [];\n\n    for (var i = 0, len = series.length; i < len; i++) {\n      chartSeries.push(series[i]);\n      chartSeries[i].high = series[i].high;\n      chartSeries[i].low = series[i].low;\n      chartSeries[i].open = series[i].open;\n      chartSeries[i].close = series[i].close;\n      chartSeries[i].xName = series[i].xName;\n      chartSeries[i].volume = series[i].volume;\n      chartSeries[i].animation = series[i].animation;\n\n      if (series[i].localData) {\n        chartSeries[i].dataSource = series[i].localData;\n      }\n\n      if (chartSeries[i].type !== 'HiloOpenClose' && chartSeries[i].type !== 'Candle' && chartSeries[i].yName === 'volume') {\n        chartSeries[i].enableTooltip = false;\n      }\n    }\n\n    return chartSeries;\n  };\n\n  CartesianChart.prototype.calculateChartSize = function () {\n    var stockChart = this.stockChart;\n    return new Size(stockChart.availableSize.width, stockChart.enablePeriodSelector && stockChart.enableSelector ? stockChart.availableSize.height - stockChart.toolbarHeight - 80 : stockChart.enableSelector && !stockChart.enablePeriodSelector ? stockChart.availableSize.height - 80 : stockChart.enablePeriodSelector && !stockChart.enableSelector ? stockChart.availableSize.height - stockChart.toolbarHeight : stockChart.availableSize.height);\n  };\n\n  CartesianChart.prototype.calculateUpdatedRange = function (zoomFactor, zoomPosition, axis) {\n    var start;\n    var end; //if (zoomFactor < 1 || zoomPosition > 0) {\n\n    var chartRange = axis.actualRange;\n    var inversed = false;\n\n    if (!inversed) {\n      start = chartRange.min + zoomPosition * chartRange.delta;\n      end = start + zoomFactor * chartRange.delta;\n    } else {\n      start = chartRange.max - zoomPosition * chartRange.delta;\n      end = start - zoomFactor * chartRange.delta;\n    } //}\n\n\n    var result = {\n      start: start,\n      end: end\n    };\n    return result;\n  };\n  /**\n   * Cartesian chart refreshes based on start and end value\n   * @param stockChart\n   * @param start\n   * @param end\n   */\n\n\n  CartesianChart.prototype.cartesianChartRefresh = function (stockChart, start, end, data) {\n    stockChart.cartesianChart.initializeChart(data);\n  };\n\n  CartesianChart.prototype.copyObject = function (originalObject) {\n    return extend({}, originalObject, {}, true);\n  };\n\n  return CartesianChart;\n}();\n\nexport { CartesianChart };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/stock-chart/renderer/cartesian-chart.js"],"names":["Chart","Size","remove","extend","onZooming","getElement","CartesianChart","chart","stockChart","prototype","initializeChart","chartArgsData","_this","isProtect","chartObject","renderer","createGroup","id","element","mainObject","appendChild","chartElement","document","getElementById","firstChild","removeChild","cartesianChartSize","calculateChartSize","chartArea","margin","findMargin","primaryXAxis","copyObject","primaryYAxis","rows","indicators","axes","tooltipRender","args","trigger","axisLabelRender","seriesRender","data","startValue","endValue","filter","Date","parse","series","xName","getTime","pointClick","pointMove","dataSource","findSeriesCollection","zoomSettings","tooltip","crosshair","height","toString","selectedDataIndexes","selectionMode","isMultiSelect","annotations","theme","legendSettings","visible","zoomComplete","axis","valueType","rangeNavigator","zoomChange","newRange","calculateUpdatedRange","currentZoomFactor","currentZoomPosition","rangeSelector","sliderChange","start","end","length","isSelect","i","animation","enable","appendTo","top","left","right","bottom","chartSeries","len","push","high","low","open","close","volume","localData","type","yName","enableTooltip","availableSize","width","enablePeriodSelector","enableSelector","toolbarHeight","zoomFactor","zoomPosition","chartRange","actualRange","inversed","min","delta","max","result","cartesianChartRefresh","cartesianChart","originalObject"],"mappings":"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","sourcesContent":["/**\n * Cartesian chart renderer for financial chart\n */\nimport { Chart } from '../../chart/chart';\nimport { Size } from '@syncfusion/ej2-svg-base';\nimport { remove, extend } from '@syncfusion/ej2-base';\nimport { onZooming } from '../../common/model/constants';\nimport { getElement } from '../../common/utils/helper';\n/** @private */\nvar CartesianChart = /** @class */ (function () {\n    function CartesianChart(chart) {\n        this.stockChart = chart;\n    }\n    CartesianChart.prototype.initializeChart = function (chartArgsData) {\n        var _this = this;\n        var stockChart = this.stockChart;\n        var isProtect = 'isProtectedOnChange';\n        stockChart[isProtect] = true;\n        if (!stockChart.chartObject) {\n            stockChart.chartObject = stockChart.renderer.createGroup({\n                id: stockChart.element.id + '_stockChart_chart'\n            });\n            stockChart.mainObject.appendChild(stockChart.chartObject);\n        }\n        else {\n            var chartElement = document.getElementById(stockChart.chartObject.id);\n            while (chartElement.firstChild) {\n                chartElement.removeChild(chartElement.firstChild);\n            }\n            if (getElement(stockChart.chartObject + '_tooltip')) {\n                remove(getElement(stockChart.chartObject + '_tooltip'));\n            }\n        }\n        this.cartesianChartSize = this.calculateChartSize();\n        stockChart.chart = new Chart({\n            chartArea: stockChart.chartArea,\n            margin: this.findMargin(stockChart),\n            primaryXAxis: this.copyObject(stockChart.primaryXAxis),\n            primaryYAxis: this.copyObject(stockChart.primaryYAxis),\n            rows: stockChart.rows,\n            indicators: stockChart.indicators,\n            axes: stockChart.axes,\n            tooltipRender: function (args) {\n                _this.stockChart.trigger('tooltipRender', args);\n            },\n            axisLabelRender: function (args) {\n                _this.stockChart.trigger('axisLabelRender', args);\n            },\n            seriesRender: function (args) {\n                if (args.data && _this.stockChart.startValue && _this.stockChart.endValue) {\n                    args.data = args.data\n                        .filter(function (data) {\n                        return (new Date(Date.parse(data[args.series.xName])).getTime() >= _this.stockChart.startValue &&\n                            new Date(Date.parse(data[args.series.xName])).getTime() <= _this.stockChart.endValue);\n                    });\n                }\n                args.data = chartArgsData ? chartArgsData : args.data;\n                //args.data = this.stockChart.findCurrentData(args.data ,args.series.xName);\n                _this.stockChart.trigger('seriesRender', args);\n            },\n            onZooming: function (args) { _this.stockChart.trigger(onZooming, args); },\n            pointClick: function (args) {\n                _this.stockChart.trigger('pointClick', args);\n            },\n            pointMove: function (args) {\n                _this.stockChart.trigger('pointMove', args);\n            },\n            dataSource: stockChart.dataSource,\n            series: this.findSeriesCollection(stockChart.series),\n            zoomSettings: this.copyObject(stockChart.zoomSettings),\n            tooltip: stockChart.tooltip,\n            crosshair: stockChart.crosshair,\n            height: this.cartesianChartSize.height.toString(),\n            selectedDataIndexes: stockChart.selectedDataIndexes,\n            selectionMode: stockChart.selectionMode,\n            isMultiSelect: stockChart.isMultiSelect,\n            annotations: stockChart.annotations,\n            theme: stockChart.theme,\n            legendSettings: { visible: false },\n            zoomComplete: function (args) {\n                if (args.axis.valueType === 'DateTime' && stockChart.rangeNavigator) {\n                    _this.stockChart.zoomChange = true;\n                    var newRange = _this.calculateUpdatedRange(args.currentZoomFactor, args.currentZoomPosition, args.axis);\n                    stockChart.rangeSelector.sliderChange(newRange.start, newRange.end);\n                }\n            },\n        });\n        if (stockChart.indicators.length !== 0) {\n            if (stockChart.isSelect) {\n                for (var i = 0; i < stockChart.indicators.length; i++) {\n                    stockChart.chart.indicators[i].animation.enable = false;\n                    stockChart.chart.indicators[i].dataSource = extend([], stockChart.chart.series[0].dataSource, null, true);\n                }\n            }\n            stockChart.isSelect = true;\n        }\n        stockChart.chart.stockChart = stockChart;\n        stockChart.chart.appendTo(stockChart.chartObject);\n        stockChart[isProtect] = false;\n    };\n    CartesianChart.prototype.findMargin = function (stockChart) {\n        var margin = {};\n        margin.top = stockChart.margin.top * 2;\n        margin.left = stockChart.margin.left;\n        margin.right = stockChart.margin.right;\n        margin.bottom = stockChart.margin.bottom;\n        return margin;\n    };\n    CartesianChart.prototype.findSeriesCollection = function (series) {\n        var chartSeries = [];\n        for (var i = 0, len = series.length; i < len; i++) {\n            chartSeries.push(series[i]);\n            chartSeries[i].high = series[i].high;\n            chartSeries[i].low = series[i].low;\n            chartSeries[i].open = series[i].open;\n            chartSeries[i].close = series[i].close;\n            chartSeries[i].xName = series[i].xName;\n            chartSeries[i].volume = series[i].volume;\n            chartSeries[i].animation = series[i].animation;\n            if (series[i].localData) {\n                chartSeries[i].dataSource = series[i].localData;\n            }\n            if (chartSeries[i].type !== 'HiloOpenClose' && chartSeries[i].type !== 'Candle' && chartSeries[i].yName === 'volume') {\n                chartSeries[i].enableTooltip = false;\n            }\n        }\n        return chartSeries;\n    };\n    CartesianChart.prototype.calculateChartSize = function () {\n        var stockChart = this.stockChart;\n        return (new Size(stockChart.availableSize.width, (stockChart.enablePeriodSelector && stockChart.enableSelector) ?\n            ((stockChart.availableSize.height - stockChart.toolbarHeight - 80)) :\n            (stockChart.enableSelector && !stockChart.enablePeriodSelector) ? (stockChart.availableSize.height - 80) :\n                (stockChart.enablePeriodSelector && !stockChart.enableSelector) ?\n                    stockChart.availableSize.height - stockChart.toolbarHeight : stockChart.availableSize.height));\n    };\n    CartesianChart.prototype.calculateUpdatedRange = function (zoomFactor, zoomPosition, axis) {\n        var start;\n        var end;\n        //if (zoomFactor < 1 || zoomPosition > 0) {\n        var chartRange = axis.actualRange;\n        var inversed = false;\n        if (!inversed) {\n            start = chartRange.min + zoomPosition * chartRange.delta;\n            end = start + zoomFactor * chartRange.delta;\n        }\n        else {\n            start = chartRange.max - (zoomPosition * chartRange.delta);\n            end = start - (zoomFactor * chartRange.delta);\n        }\n        //}\n        var result = { start: start, end: end };\n        return result;\n    };\n    /**\n     * Cartesian chart refreshes based on start and end value\n     * @param stockChart\n     * @param start\n     * @param end\n     */\n    CartesianChart.prototype.cartesianChartRefresh = function (stockChart, start, end, data) {\n        stockChart.cartesianChart.initializeChart(data);\n    };\n    CartesianChart.prototype.copyObject = function (originalObject) {\n        return (extend({}, originalObject, {}, true));\n    };\n    return CartesianChart;\n}());\nexport { CartesianChart };\n"]},"metadata":{},"sourceType":"module"}