{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StackingAreaSeries` module used to render the Stacking Area series.\n */\n\nvar StackingAreaSeries =\n/** @class */\nfunction (_super) {\n  __extends(StackingAreaSeries, _super);\n\n  function StackingAreaSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render the Stacking area series.\n   * @return {void}\n   * @private\n   */\n\n\n  StackingAreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var polarAreaType = series.chart.chartAreaType === 'PolarRadar';\n    var getCoordinate = polarAreaType ? TransformToVisible : getPoint;\n    var lineDirection = '';\n    var visiblePoints = this.enableComplexProperty(series);\n    var pointsLength = visiblePoints.length;\n    var stackedvalue = series.stackedValues;\n    var origin = polarAreaType ? Math.max(series.yAxis.visibleRange.min, stackedvalue.endValues[0]) : Math.max(series.yAxis.visibleRange.min, stackedvalue.startValues[0]);\n    var border = series.border;\n    var options;\n    var startPoint = 0;\n    var point1;\n    var point2;\n\n    if (pointsLength > 0) {\n      point1 = getCoordinate(visiblePoints[0].xValue, origin, xAxis, yAxis, isInverted, series);\n      lineDirection = lineDirection.concat('M' + ' ' + point1.x + ' ' + point1.y + ' ');\n    }\n\n    var isPolar = series.chart && series.chart.chartAreaType === 'PolarRadar';\n\n    for (var i = 0; i < pointsLength; i++) {\n      visiblePoints[i].symbolLocations = [];\n      visiblePoints[i].regions = [];\n\n      if (visiblePoints[i].visible && withInRange(visiblePoints[i - 1], visiblePoints[i], visiblePoints[i + 1], series)) {\n        point1 = getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n        lineDirection = lineDirection.concat('L' + ' ' + point1.x + ' ' + point1.y + ' ');\n        visiblePoints[i].symbolLocations.push(getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n        visiblePoints[i].regions.push(new Rect(visiblePoints[i].symbolLocations[0].x - series.marker.width, visiblePoints[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n      } else {\n        if (!isPolar && series.emptyPointSettings.mode !== 'Drop') {\n          for (var j = i - 1; j >= startPoint; j--) {\n            point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n            lineDirection = lineDirection.concat('L' + ' ' + point2.x + ' ' + point2.y + ' ');\n          }\n\n          if (visiblePoints[i + 1] && visiblePoints[i + 1].visible && (!isPolar || isPolar && this.withinYRange(visiblePoints[i + 1], yAxis))) {\n            point1 = getCoordinate(visiblePoints[i + 1].xValue, stackedvalue.startValues[i + 1], xAxis, yAxis, isInverted, series);\n            lineDirection = lineDirection.concat('M' + ' ' + point1.x + ' ' + point1.y + ' ');\n          }\n\n          startPoint = i + 1;\n        }\n      }\n    }\n\n    if (series.chart.chartAreaType === 'PolarRadar' && visiblePoints.length > 1) {\n      var connectPoints = this.getFirstLastVisiblePoint(series.points);\n      var chart = this.chart;\n      point1 = {\n        'x': connectPoints.first.xValue,\n        'y': stackedvalue.endValues[connectPoints.first.index]\n      };\n      point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n      lineDirection += 'L' + ' ' + point2.x + ' ' + point2.y + ' ';\n\n      if (this.chart.visible === 1 && (xAxis.isInversed || yAxis.isInversed)) {\n        this.chart.enableAnimation = false;\n        lineDirection = series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, lineDirection) : chart.radarSeriesModule.getRadarIsInversedPath(xAxis, lineDirection);\n      }\n    }\n\n    if (!isPolar || isPolar && series.index !== this.getFirstSeriesIndex(series.chart.visibleSeries)) {\n      for (var j = pointsLength - 1; j >= startPoint; j--) {\n        if (isPolar && !visiblePoints[j].visible) {\n          continue;\n        }\n\n        var previousSeries = this.getPreviousSeries(series);\n\n        if (previousSeries.emptyPointSettings.mode !== 'Drop' || !previousSeries.points[j].isEmpty) {\n          point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n          lineDirection = lineDirection.concat((j === pointsLength - 1 && polarAreaType ? 'M' : 'L') + ' ' + point2.x + ' ' + point2.y + ' ');\n        }\n      }\n    }\n\n    options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, lineDirection);\n    this.appendLinePath(options, series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  StackingAreaSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n  /**\n   * To destroy the stacking area.\n   * @return {void}\n   * @private\n   */\n\n\n  StackingAreaSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StackingAreaSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'StackingAreaSeries';\n  };\n  /**\n   * To find previous visible series\n   */\n\n\n  StackingAreaSeries.prototype.getPreviousSeries = function (series) {\n    var seriesCollection = series.chart.visibleSeries;\n\n    for (var i = 0, length_1 = seriesCollection.length; i < length_1; i++) {\n      if (series.index === seriesCollection[i].index && i !== 0) {\n        return seriesCollection[i - 1];\n      }\n    }\n\n    return seriesCollection[0];\n  };\n  /**\n   * To find the first visible series index\n   * @param seriesCollection\n   */\n\n\n  StackingAreaSeries.prototype.getFirstSeriesIndex = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n\n      if (series.visible) {\n        return series.index;\n      }\n    }\n\n    return 0;\n  };\n\n  return StackingAreaSeries;\n}(LineBase);\n\nexport { StackingAreaSeries };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/stacking-area-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","TransformToVisible","PathOption","Rect","LineBase","StackingAreaSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","polarAreaType","chart","chartAreaType","getCoordinate","lineDirection","visiblePoints","enableComplexProperty","pointsLength","length","stackedvalue","stackedValues","origin","Math","max","visibleRange","min","endValues","startValues","border","options","startPoint","point1","point2","xValue","concat","x","y","isPolar","i","symbolLocations","regions","visible","push","marker","width","height","emptyPointSettings","mode","j","withinYRange","connectPoints","getFirstLastVisiblePoint","points","first","index","isInversed","enableAnimation","type","polarSeriesModule","getPolarIsInversedPath","radarSeriesModule","getRadarIsInversedPath","getFirstSeriesIndex","visibleSeries","previousSeries","getPreviousSeries","isEmpty","element","id","interior","color","opacity","dashArray","appendLinePath","renderMarker","doAnimation","option","animation","doLinearAnimation","destroy","getModuleName","seriesCollection","length_1","_i","seriesCollection_1"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,QAAT,EAAmBC,WAAnB,EAAgCC,kBAAhC,QAA0D,2BAA1D;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,0BAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACtDrB,EAAAA,SAAS,CAACoB,kBAAD,EAAqBC,MAArB,CAAT;;AACA,WAASD,kBAAT,GAA8B;AAC1B,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIH,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BY,MAA7B,GAAsC,UAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,UAAhC,EAA4C;AAC9E,QAAIC,aAAa,GAAGJ,MAAM,CAACK,KAAP,CAAaC,aAAb,KAA+B,YAAnD;AACA,QAAIC,aAAa,GAAGH,aAAa,GAAGb,kBAAH,GAAwBF,QAAzD;AACA,QAAImB,aAAa,GAAG,EAApB;AACA,QAAIC,aAAa,GAAG,KAAKC,qBAAL,CAA2BV,MAA3B,CAApB;AACA,QAAIW,YAAY,GAAGF,aAAa,CAACG,MAAjC;AACA,QAAIC,YAAY,GAAGb,MAAM,CAACc,aAA1B;AACA,QAAIC,MAAM,GAAGX,aAAa,GACtBY,IAAI,CAACC,GAAL,CAASjB,MAAM,CAACE,KAAP,CAAagB,YAAb,CAA0BC,GAAnC,EAAwCN,YAAY,CAACO,SAAb,CAAuB,CAAvB,CAAxC,CADsB,GAEtBJ,IAAI,CAACC,GAAL,CAASjB,MAAM,CAACE,KAAP,CAAagB,YAAb,CAA0BC,GAAnC,EAAwCN,YAAY,CAACQ,WAAb,CAAyB,CAAzB,CAAxC,CAFJ;AAGA,QAAIC,MAAM,GAAGtB,MAAM,CAACsB,MAApB;AACA,QAAIC,OAAJ;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,MAAJ;AACA,QAAIC,MAAJ;;AACA,QAAIf,YAAY,GAAG,CAAnB,EAAsB;AAClBc,MAAAA,MAAM,GAAGlB,aAAa,CAACE,aAAa,CAAC,CAAD,CAAb,CAAiBkB,MAAlB,EAA0BZ,MAA1B,EAAkCd,KAAlC,EAAyCC,KAAzC,EAAgDC,UAAhD,EAA4DH,MAA5D,CAAtB;AACAQ,MAAAA,aAAa,GAAGA,aAAa,CAACoB,MAAd,CAAqB,MAAM,GAAN,GAAaH,MAAM,CAACI,CAApB,GAAyB,GAAzB,GAAgCJ,MAAM,CAACK,CAAvC,GAA4C,GAAjE,CAAhB;AACH;;AACD,QAAIC,OAAO,GAAI/B,MAAM,CAACK,KAAP,IAAgBL,MAAM,CAACK,KAAP,CAAaC,aAAb,KAA+B,YAA9D;;AACA,SAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,YAApB,EAAkCqB,CAAC,EAAnC,EAAuC;AACnCvB,MAAAA,aAAa,CAACuB,CAAD,CAAb,CAAiBC,eAAjB,GAAmC,EAAnC;AACAxB,MAAAA,aAAa,CAACuB,CAAD,CAAb,CAAiBE,OAAjB,GAA2B,EAA3B;;AACA,UAAIzB,aAAa,CAACuB,CAAD,CAAb,CAAiBG,OAAjB,IAA4B7C,WAAW,CAACmB,aAAa,CAACuB,CAAC,GAAG,CAAL,CAAd,EAAuBvB,aAAa,CAACuB,CAAD,CAApC,EAAyCvB,aAAa,CAACuB,CAAC,GAAG,CAAL,CAAtD,EAA+DhC,MAA/D,CAA3C,EAAmH;AAC/GyB,QAAAA,MAAM,GAAGlB,aAAa,CAACE,aAAa,CAACuB,CAAD,CAAb,CAAiBL,MAAlB,EAA0Bd,YAAY,CAACO,SAAb,CAAuBY,CAAvB,CAA1B,EAAqD/B,KAArD,EAA4DC,KAA5D,EAAmEC,UAAnE,EAA+EH,MAA/E,CAAtB;AACAQ,QAAAA,aAAa,GAAGA,aAAa,CAACoB,MAAd,CAAqB,MAAM,GAAN,GAAaH,MAAM,CAACI,CAApB,GAAyB,GAAzB,GAAgCJ,MAAM,CAACK,CAAvC,GAA4C,GAAjE,CAAhB;AACArB,QAAAA,aAAa,CAACuB,CAAD,CAAb,CAAiBC,eAAjB,CAAiCG,IAAjC,CAAsC7B,aAAa,CAACE,aAAa,CAACuB,CAAD,CAAb,CAAiBL,MAAlB,EAA0Bd,YAAY,CAACO,SAAb,CAAuBY,CAAvB,CAA1B,EAAqD/B,KAArD,EAA4DC,KAA5D,EAAmEC,UAAnE,EAA+EH,MAA/E,CAAnD;AACAS,QAAAA,aAAa,CAACuB,CAAD,CAAb,CAAiBE,OAAjB,CAAyBE,IAAzB,CAA8B,IAAI3C,IAAJ,CAASgB,aAAa,CAACuB,CAAD,CAAb,CAAiBC,eAAjB,CAAiC,CAAjC,EAAoCJ,CAApC,GAAwC7B,MAAM,CAACqC,MAAP,CAAcC,KAA/D,EAAsE7B,aAAa,CAACuB,CAAD,CAAb,CAAiBC,eAAjB,CAAiC,CAAjC,EAAoCH,CAApC,GAAwC9B,MAAM,CAACqC,MAAP,CAAcE,MAA5H,EAAoI,IAAIvC,MAAM,CAACqC,MAAP,CAAcC,KAAtJ,EAA6J,IAAItC,MAAM,CAACqC,MAAP,CAAcE,MAA/K,CAA9B;AACH,OALD,MAMK;AACD,YAAI,CAACR,OAAD,IAAY/B,MAAM,CAACwC,kBAAP,CAA0BC,IAA1B,KAAmC,MAAnD,EAA2D;AACvD,eAAK,IAAIC,CAAC,GAAGV,CAAC,GAAG,CAAjB,EAAoBU,CAAC,IAAIlB,UAAzB,EAAqCkB,CAAC,EAAtC,EAA0C;AACtChB,YAAAA,MAAM,GAAGnB,aAAa,CAACE,aAAa,CAACiC,CAAD,CAAb,CAAiBf,MAAlB,EAA0Bd,YAAY,CAACQ,WAAb,CAAyBqB,CAAzB,CAA1B,EAAuDzC,KAAvD,EAA8DC,KAA9D,EAAqEC,UAArE,EAAiFH,MAAjF,CAAtB;AACAQ,YAAAA,aAAa,GAAGA,aAAa,CAACoB,MAAd,CAAqB,MAAM,GAAN,GAAaF,MAAM,CAACG,CAApB,GAAyB,GAAzB,GAAgCH,MAAM,CAACI,CAAvC,GAA4C,GAAjE,CAAhB;AACH;;AACD,cAAIrB,aAAa,CAACuB,CAAC,GAAG,CAAL,CAAb,IAAyBvB,aAAa,CAACuB,CAAC,GAAG,CAAL,CAAb,CAAqBG,OAArB,KACxB,CAACJ,OAAD,IAAaA,OAAO,IAAI,KAAKY,YAAL,CAAkBlC,aAAa,CAACuB,CAAC,GAAG,CAAL,CAA/B,EAAwC9B,KAAxC,CADA,CAA7B,EACgF;AAC5EuB,YAAAA,MAAM,GAAGlB,aAAa,CAACE,aAAa,CAACuB,CAAC,GAAG,CAAL,CAAb,CAAqBL,MAAtB,EAA8Bd,YAAY,CAACQ,WAAb,CAAyBW,CAAC,GAAG,CAA7B,CAA9B,EAA+D/B,KAA/D,EAAsEC,KAAtE,EAA6EC,UAA7E,EAAyFH,MAAzF,CAAtB;AACAQ,YAAAA,aAAa,GAAGA,aAAa,CAACoB,MAAd,CAAqB,MAAM,GAAN,GAAaH,MAAM,CAACI,CAApB,GAAyB,GAAzB,GAAgCJ,MAAM,CAACK,CAAvC,GAA4C,GAAjE,CAAhB;AACH;;AACDN,UAAAA,UAAU,GAAGQ,CAAC,GAAG,CAAjB;AACH;AACJ;AACJ;;AACD,QAAIhC,MAAM,CAACK,KAAP,CAAaC,aAAb,KAA+B,YAA/B,IAA+CG,aAAa,CAACG,MAAd,GAAuB,CAA1E,EAA6E;AACzE,UAAIgC,aAAa,GAAG,KAAKC,wBAAL,CAA8B7C,MAAM,CAAC8C,MAArC,CAApB;AACA,UAAIzC,KAAK,GAAG,KAAKA,KAAjB;AACAoB,MAAAA,MAAM,GAAG;AAAE,aAAKmB,aAAa,CAACG,KAAd,CAAoBpB,MAA3B;AAAmC,aAAKd,YAAY,CAACO,SAAb,CAAuBwB,aAAa,CAACG,KAAd,CAAoBC,KAA3C;AAAxC,OAAT;AACAtB,MAAAA,MAAM,GAAGnB,aAAa,CAACkB,MAAM,CAACI,CAAR,EAAWJ,MAAM,CAACK,CAAlB,EAAqB7B,KAArB,EAA4BC,KAA5B,EAAmCC,UAAnC,EAA+CH,MAA/C,CAAtB;AACAQ,MAAAA,aAAa,IAAK,MAAM,GAAN,GAAakB,MAAM,CAACG,CAApB,GAAyB,GAAzB,GAAgCH,MAAM,CAACI,CAAvC,GAA4C,GAA9D;;AACA,UAAI,KAAKzB,KAAL,CAAW8B,OAAX,KAAuB,CAAvB,KAA6BlC,KAAK,CAACgD,UAAN,IAAoB/C,KAAK,CAAC+C,UAAvD,CAAJ,EAAwE;AACpE,aAAK5C,KAAL,CAAW6C,eAAX,GAA6B,KAA7B;AACA1C,QAAAA,aAAa,GAAIR,MAAM,CAACmD,IAAP,KAAgB,OAAhB,GAA0B9C,KAAK,CAAC+C,iBAAN,CAAwBC,sBAAxB,CAA+CpD,KAA/C,EAAsDO,aAAtD,CAA1B,GACbH,KAAK,CAACiD,iBAAN,CAAwBC,sBAAxB,CAA+CtD,KAA/C,EAAsDO,aAAtD,CADJ;AAEH;AACJ;;AACD,QAAI,CAACuB,OAAD,IAAaA,OAAO,IAAI/B,MAAM,CAACgD,KAAP,KAAiB,KAAKQ,mBAAL,CAAyBxD,MAAM,CAACK,KAAP,CAAaoD,aAAtC,CAA7C,EAAoG;AAChG,WAAK,IAAIf,CAAC,GAAG/B,YAAY,GAAG,CAA5B,EAA+B+B,CAAC,IAAIlB,UAApC,EAAgDkB,CAAC,EAAjD,EAAqD;AACjD,YAAIX,OAAO,IAAI,CAACtB,aAAa,CAACiC,CAAD,CAAb,CAAiBP,OAAjC,EAA0C;AACtC;AACH;;AACD,YAAIuB,cAAc,GAAG,KAAKC,iBAAL,CAAuB3D,MAAvB,CAArB;;AACA,YAAI0D,cAAc,CAAClB,kBAAf,CAAkCC,IAAlC,KAA2C,MAA3C,IAAqD,CAACiB,cAAc,CAACZ,MAAf,CAAsBJ,CAAtB,EAAyBkB,OAAnF,EAA4F;AACxFlC,UAAAA,MAAM,GAAGnB,aAAa,CAACE,aAAa,CAACiC,CAAD,CAAb,CAAiBf,MAAlB,EAA0Bd,YAAY,CAACQ,WAAb,CAAyBqB,CAAzB,CAA1B,EAAuDzC,KAAvD,EAA8DC,KAA9D,EAAqEC,UAArE,EAAiFH,MAAjF,CAAtB;AACAQ,UAAAA,aAAa,GAAGA,aAAa,CAACoB,MAAd,CAAqB,CAAEc,CAAC,KAAM/B,YAAY,GAAG,CAAtB,IAA4BP,aAA7B,GAA8C,GAA9C,GAAoD,GAArD,IAC/B,GAD+B,GACxBsB,MAAM,CAACG,CADiB,GACZ,GADY,GACLH,MAAM,CAACI,CADF,GACO,GAD5B,CAAhB;AAEH;AACJ;AACJ;;AACDP,IAAAA,OAAO,GAAG,IAAI/B,UAAJ,CAAeQ,MAAM,CAACK,KAAP,CAAawD,OAAb,CAAqBC,EAArB,GAA0B,UAA1B,GAAuC9D,MAAM,CAACgD,KAA7D,EAAoEhD,MAAM,CAAC+D,QAA3E,EAAqF/D,MAAM,CAACsB,MAAP,CAAcgB,KAAnG,EAA0GtC,MAAM,CAACsB,MAAP,CAAc0C,KAAxH,EAA+HhE,MAAM,CAACiE,OAAtI,EAA+IjE,MAAM,CAACkE,SAAtJ,EAAiK1D,aAAjK,CAAV;AACA,SAAK2D,cAAL,CAAoB5C,OAApB,EAA6BvB,MAA7B,EAAqC,EAArC;AACA,SAAKoE,YAAL,CAAkBpE,MAAlB;AACH,GAxED;AAyEA;AACJ;AACA;AACA;AACA;;;AACIL,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BkF,WAA7B,GAA2C,UAAUrE,MAAV,EAAkB;AACzD,QAAIsE,MAAM,GAAGtE,MAAM,CAACuE,SAApB;AACA,SAAKC,iBAAL,CAAuBxE,MAAvB,EAA+BsE,MAA/B;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACI3E,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BsF,OAA7B,GAAuC,UAAUpE,KAAV,EAAiB;AACpD;AACR;AACA;AACK,GAJD;AAKA;AACJ;AACA;;;AACIV,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BuF,aAA7B,GAA6C,YAAY;AACrD;AACR;AACA;AACQ,WAAO,oBAAP;AACH,GALD;AAMA;AACJ;AACA;;;AACI/E,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BwE,iBAA7B,GAAiD,UAAU3D,MAAV,EAAkB;AAC/D,QAAI2E,gBAAgB,GAAG3E,MAAM,CAACK,KAAP,CAAaoD,aAApC;;AACA,SAAK,IAAIzB,CAAC,GAAG,CAAR,EAAW4C,QAAQ,GAAGD,gBAAgB,CAAC/D,MAA5C,EAAoDoB,CAAC,GAAG4C,QAAxD,EAAkE5C,CAAC,EAAnE,EAAuE;AACnE,UAAIhC,MAAM,CAACgD,KAAP,KAAiB2B,gBAAgB,CAAC3C,CAAD,CAAhB,CAAoBgB,KAArC,IAA8ChB,CAAC,KAAK,CAAxD,EAA2D;AACvD,eAAO2C,gBAAgB,CAAC3C,CAAC,GAAG,CAAL,CAAvB;AACH;AACJ;;AACD,WAAO2C,gBAAgB,CAAC,CAAD,CAAvB;AACH,GARD;AASA;AACJ;AACA;AACA;;;AACIhF,EAAAA,kBAAkB,CAACR,SAAnB,CAA6BqE,mBAA7B,GAAmD,UAAUmB,gBAAV,EAA4B;AAC3E,SAAK,IAAIE,EAAE,GAAG,CAAT,EAAYC,kBAAkB,GAAGH,gBAAtC,EAAwDE,EAAE,GAAGC,kBAAkB,CAAClE,MAAhF,EAAwFiE,EAAE,EAA1F,EAA8F;AAC1F,UAAI7E,MAAM,GAAG8E,kBAAkB,CAACD,EAAD,CAA/B;;AACA,UAAI7E,MAAM,CAACmC,OAAX,EAAoB;AAChB,eAAOnC,MAAM,CAACgD,KAAd;AACH;AACJ;;AACD,WAAO,CAAP;AACH,GARD;;AASA,SAAOrD,kBAAP;AACH,CAzIuC,CAyItCD,QAzIsC,CAAxC;;AA0IA,SAASC,kBAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getPoint, withInRange, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StackingAreaSeries` module used to render the Stacking Area series.\n */\nvar StackingAreaSeries = /** @class */ (function (_super) {\n    __extends(StackingAreaSeries, _super);\n    function StackingAreaSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render the Stacking area series.\n     * @return {void}\n     * @private\n     */\n    StackingAreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var polarAreaType = series.chart.chartAreaType === 'PolarRadar';\n        var getCoordinate = polarAreaType ? TransformToVisible : getPoint;\n        var lineDirection = '';\n        var visiblePoints = this.enableComplexProperty(series);\n        var pointsLength = visiblePoints.length;\n        var stackedvalue = series.stackedValues;\n        var origin = polarAreaType ?\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.endValues[0]) :\n            Math.max(series.yAxis.visibleRange.min, stackedvalue.startValues[0]);\n        var border = series.border;\n        var options;\n        var startPoint = 0;\n        var point1;\n        var point2;\n        if (pointsLength > 0) {\n            point1 = getCoordinate(visiblePoints[0].xValue, origin, xAxis, yAxis, isInverted, series);\n            lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        }\n        var isPolar = (series.chart && series.chart.chartAreaType === 'PolarRadar');\n        for (var i = 0; i < pointsLength; i++) {\n            visiblePoints[i].symbolLocations = [];\n            visiblePoints[i].regions = [];\n            if (visiblePoints[i].visible && withInRange(visiblePoints[i - 1], visiblePoints[i], visiblePoints[i + 1], series)) {\n                point1 = getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series);\n                lineDirection = lineDirection.concat('L' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                visiblePoints[i].symbolLocations.push(getCoordinate(visiblePoints[i].xValue, stackedvalue.endValues[i], xAxis, yAxis, isInverted, series));\n                visiblePoints[i].regions.push(new Rect(visiblePoints[i].symbolLocations[0].x - series.marker.width, visiblePoints[i].symbolLocations[0].y - series.marker.height, 2 * series.marker.width, 2 * series.marker.height));\n            }\n            else {\n                if (!isPolar && series.emptyPointSettings.mode !== 'Drop') {\n                    for (var j = i - 1; j >= startPoint; j--) {\n                        point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    }\n                    if (visiblePoints[i + 1] && (visiblePoints[i + 1].visible &&\n                        (!isPolar || (isPolar && this.withinYRange(visiblePoints[i + 1], yAxis))))) {\n                        point1 = getCoordinate(visiblePoints[i + 1].xValue, stackedvalue.startValues[i + 1], xAxis, yAxis, isInverted, series);\n                        lineDirection = lineDirection.concat('M' + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    }\n                    startPoint = i + 1;\n                }\n            }\n        }\n        if (series.chart.chartAreaType === 'PolarRadar' && visiblePoints.length > 1) {\n            var connectPoints = this.getFirstLastVisiblePoint(series.points);\n            var chart = this.chart;\n            point1 = { 'x': connectPoints.first.xValue, 'y': stackedvalue.endValues[connectPoints.first.index] };\n            point2 = getCoordinate(point1.x, point1.y, xAxis, yAxis, isInverted, series);\n            lineDirection += ('L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n            if (this.chart.visible === 1 && (xAxis.isInversed || yAxis.isInversed)) {\n                this.chart.enableAnimation = false;\n                lineDirection = (series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, lineDirection) :\n                    chart.radarSeriesModule.getRadarIsInversedPath(xAxis, lineDirection));\n            }\n        }\n        if (!isPolar || (isPolar && series.index !== this.getFirstSeriesIndex(series.chart.visibleSeries))) {\n            for (var j = pointsLength - 1; j >= startPoint; j--) {\n                if (isPolar && !visiblePoints[j].visible) {\n                    continue;\n                }\n                var previousSeries = this.getPreviousSeries(series);\n                if (previousSeries.emptyPointSettings.mode !== 'Drop' || !previousSeries.points[j].isEmpty) {\n                    point2 = getCoordinate(visiblePoints[j].xValue, stackedvalue.startValues[j], xAxis, yAxis, isInverted, series);\n                    lineDirection = lineDirection.concat(((j === (pointsLength - 1) && polarAreaType) ? 'M' : 'L')\n                        + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                }\n            }\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, lineDirection);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    StackingAreaSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    /**\n     * To destroy the stacking area.\n     * @return {void}\n     * @private\n     */\n    StackingAreaSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StackingAreaSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StackingAreaSeries';\n    };\n    /**\n     * To find previous visible series\n     */\n    StackingAreaSeries.prototype.getPreviousSeries = function (series) {\n        var seriesCollection = series.chart.visibleSeries;\n        for (var i = 0, length_1 = seriesCollection.length; i < length_1; i++) {\n            if (series.index === seriesCollection[i].index && i !== 0) {\n                return seriesCollection[i - 1];\n            }\n        }\n        return seriesCollection[0];\n    };\n    /**\n     * To find the first visible series index\n     * @param seriesCollection\n     */\n    StackingAreaSeries.prototype.getFirstSeriesIndex = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            if (series.visible) {\n                return series.index;\n            }\n        }\n        return 0;\n    };\n    return StackingAreaSeries;\n}(LineBase));\nexport { StackingAreaSeries };\n"]},"metadata":{},"sourceType":"module"}