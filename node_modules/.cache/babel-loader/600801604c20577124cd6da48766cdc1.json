{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { getPoint, withInRange, ChartLocation } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StepAreaSeries` Module used to render the step area series.\n */\n\nvar StepAreaSeries =\n/** @class */\nfunction (_super) {\n  __extends(StepAreaSeries, _super);\n\n  function StepAreaSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render StepArea series.\n   * @return {void}\n   * @private\n   */\n\n\n  StepAreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var currentPoint;\n    var secondPoint;\n    var start = null;\n    var direction = '';\n    var visiblePoints = this.enableComplexProperty(series);\n    var pointsLength = visiblePoints.length;\n    var origin = Math.max(series.yAxis.visibleRange.min, 0);\n    var options;\n    var point;\n    var xValue;\n    var lineLength;\n    var prevPoint = null;\n\n    if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n      lineLength = 0.5;\n    } else {\n      lineLength = 0;\n    }\n\n    for (var i = 0; i < pointsLength; i++) {\n      point = visiblePoints[i];\n      xValue = point.xValue;\n      point.symbolLocations = [];\n      point.regions = [];\n\n      if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n        if (start === null) {\n          start = new ChartLocation(xValue, 0); // Start point for the current path\n\n          currentPoint = getPoint(xValue - lineLength, origin, xAxis, yAxis, isInverted);\n          direction += 'M' + ' ' + currentPoint.x + ' ' + currentPoint.y + ' ';\n          currentPoint = getPoint(xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n          direction += 'L' + ' ' + currentPoint.x + ' ' + currentPoint.y + ' ';\n        } // First Point to draw the Steparea path\n\n\n        if (prevPoint != null) {\n          currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n          secondPoint = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n          direction += 'L' + ' ' + currentPoint.x + ' ' + secondPoint.y + ' L' + ' ' + currentPoint.x + ' ' + currentPoint.y + ' ';\n        } else if (series.emptyPointSettings.mode === 'Gap') {\n          currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n          direction += 'L' + ' ' + currentPoint.x + ' ' + currentPoint.y + ' ';\n        }\n\n        this.storePointLocation(point, series, isInverted, getPoint);\n        prevPoint = point;\n      }\n\n      if (visiblePoints[i + 1] && !visiblePoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n        // current start point\n        currentPoint = getPoint(xValue + lineLength, origin, xAxis, yAxis, isInverted);\n        direction += 'L' + ' ' + currentPoint.x + ' ' + currentPoint.y;\n        start = null;\n        prevPoint = null;\n      }\n    }\n\n    if (pointsLength > 1 && direction !== '') {\n      start = {\n        'x': visiblePoints[pointsLength - 1].xValue + lineLength,\n        'y': visiblePoints[pointsLength - 1].yValue\n      };\n      secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n      direction += 'L' + ' ' + secondPoint.x + ' ' + secondPoint.y + ' ';\n      start = {\n        'x': visiblePoints[pointsLength - 1].xValue + lineLength,\n        'y': origin\n      };\n      secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n      direction += 'L' + ' ' + secondPoint.x + ' ' + secondPoint.y + ' ';\n    } else {\n      direction = '';\n    }\n\n    options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n    this.appendLinePath(options, series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  StepAreaSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n  /**\n   * To destroy the step Area series.\n   * @return {void}\n   * @private\n   */\n\n\n  StepAreaSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StepAreaSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'StepAreaSeries';\n  };\n\n  return StepAreaSeries;\n}(LineBase);\n\nexport { StepAreaSeries };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/step-area-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","ChartLocation","PathOption","LineBase","StepAreaSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","currentPoint","secondPoint","start","direction","visiblePoints","enableComplexProperty","pointsLength","length","origin","Math","max","visibleRange","min","options","point","xValue","lineLength","prevPoint","valueType","labelPlacement","i","symbolLocations","regions","visible","x","y","yValue","emptyPointSettings","mode","storePointLocation","chart","element","id","index","interior","border","width","color","opacity","dashArray","appendLinePath","renderMarker","doAnimation","option","animation","doLinearAnimation","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getPoint, withInRange, ChartLocation } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StepAreaSeries` Module used to render the step area series.\n */\nvar StepAreaSeries = /** @class */ (function (_super) {\n    __extends(StepAreaSeries, _super);\n    function StepAreaSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render StepArea series.\n     * @return {void}\n     * @private\n     */\n    StepAreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var currentPoint;\n        var secondPoint;\n        var start = null;\n        var direction = '';\n        var visiblePoints = this.enableComplexProperty(series);\n        var pointsLength = visiblePoints.length;\n        var origin = Math.max(series.yAxis.visibleRange.min, 0);\n        var options;\n        var point;\n        var xValue;\n        var lineLength;\n        var prevPoint = null;\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (var i = 0; i < pointsLength; i++) {\n            point = visiblePoints[i];\n            xValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n                if (start === null) {\n                    start = new ChartLocation(xValue, 0);\n                    // Start point for the current path\n                    currentPoint = getPoint(xValue - lineLength, origin, xAxis, yAxis, isInverted);\n                    direction += ('M' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                    currentPoint = getPoint(xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                // First Point to draw the Steparea path\n                if (prevPoint != null) {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    secondPoint = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction += ('L' + ' ' +\n                        (currentPoint.x) + ' ' + (secondPoint.y) + ' L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ');\n                }\n                else if (series.emptyPointSettings.mode === 'Gap') {\n                    currentPoint = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    direction += 'L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y) + ' ';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            if (visiblePoints[i + 1] && !visiblePoints[i + 1].visible && series.emptyPointSettings.mode !== 'Drop') {\n                // current start point\n                currentPoint = getPoint(xValue + lineLength, origin, xAxis, yAxis, isInverted);\n                direction += ('L' + ' ' + (currentPoint.x) + ' ' + (currentPoint.y));\n                start = null;\n                prevPoint = null;\n            }\n        }\n        if ((pointsLength > 1) && direction !== '') {\n            start = { 'x': visiblePoints[pointsLength - 1].xValue + lineLength, 'y': visiblePoints[pointsLength - 1].yValue };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n            start = { 'x': visiblePoints[pointsLength - 1].xValue + lineLength, 'y': origin };\n            secondPoint = getPoint(start.x, start.y, xAxis, yAxis, isInverted);\n            direction += ('L' + ' ' + (secondPoint.x) + ' ' + (secondPoint.y) + ' ');\n        }\n        else {\n            direction = '';\n        }\n        options = new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, series.border.width, series.border.color, series.opacity, series.dashArray, direction);\n        this.appendLinePath(options, series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    StepAreaSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    /**\n     * To destroy the step Area series.\n     * @return {void}\n     * @private\n     */\n    StepAreaSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StepAreaSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepAreaSeries';\n    };\n    return StepAreaSeries;\n}(LineBase));\nexport { StepAreaSeries };\n"]},"metadata":{},"sourceType":"module"}