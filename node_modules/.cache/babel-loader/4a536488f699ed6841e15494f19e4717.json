{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\n\nvar StochasticIndicator =\n/** @class */\nfunction (_super) {\n  __extends(StochasticIndicator, _super);\n\n  function StochasticIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series that represents the stochastic indicator\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n    _super.prototype.initSeriesCollection.call(this, indicator, chart);\n\n    var periodLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n\n    if (indicator.showZones) {\n      var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n      var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n      this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    }\n  };\n  /**\n   * Defines the predictions based on stochastic approach\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n    var signalCollection = [];\n    var upperCollection = [];\n    var lowerCollection = [];\n    var periodCollection = [];\n    var source = [];\n    var sourceSeries = indicator.sourceSeries;\n    var point = {}; //prepare data\n\n    var validData = indicator.points;\n\n    if (validData.length && validData.length >= indicator.period) {\n      if (indicator.showZones) {\n        for (var i = 0; i < validData.length; i++) {\n          upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n          lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n        }\n      }\n\n      source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n      periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n      signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n    }\n\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n    this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n\n    if (indicator.showZones) {\n      this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n      this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n    }\n  };\n  /**\n   * Calculates the SMA Values\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n    var pointCollection = [];\n\n    if (data.length >= period + kPeriod) {\n      var count = period + (kPeriod - 1);\n      var temp = [];\n      var values = [];\n\n      for (var i = 0; i < data.length; i++) {\n        var value = Number(data[i].y);\n        temp.push(value);\n      }\n\n      var length_1 = temp.length;\n\n      while (length_1 >= count) {\n        var sum = 0;\n\n        for (var i = period - 1; i < period + kPeriod - 1; i++) {\n          sum = sum + temp[i];\n        }\n\n        sum = sum / kPeriod;\n        values.push(sum.toFixed(2));\n        temp.splice(0, 1);\n        length_1 = temp.length;\n      }\n\n      var len = count - 1;\n\n      for (var i = 0; i < data.length; i++) {\n        if (!(i < len)) {\n          pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n          data[i].y = Number(values[i - len]);\n        }\n      }\n    }\n\n    return pointCollection;\n  };\n  /**\n   * Calculates the period line values.\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n    var lowValues = [];\n    var highValues = [];\n    var closeValues = [];\n    var modifiedSource = [];\n\n    for (var j = 0; j < data.length; j++) {\n      lowValues[j] = data[j].low;\n      highValues[j] = data[j].high;\n      closeValues[j] = data[j].close;\n    }\n\n    if (data.length > period) {\n      var totalPeriod = period + kPeriod;\n      var mins = [];\n      var maxs = [];\n\n      for (var i = 0; i < period - 1; ++i) {\n        maxs.push(0);\n        mins.push(0);\n        modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n      }\n\n      for (var i = period - 1; i < data.length; ++i) {\n        var min = Number.MAX_VALUE;\n        var max = Number.MIN_VALUE;\n\n        for (var j = 0; j < period; ++j) {\n          min = Math.min(min, lowValues[i - j]);\n          max = Math.max(max, highValues[i - j]);\n        }\n\n        maxs.push(max);\n        mins.push(min);\n      }\n\n      for (var i = period - 1; i < data.length; ++i) {\n        var top_1 = 0;\n        var bottom = 0;\n        top_1 += closeValues[i] - mins[i];\n        bottom += maxs[i] - mins[i];\n        modifiedSource.push(this.getDataPoint(data[i].x, top_1 / bottom * 100, data[i], series, modifiedSource.length));\n      }\n    }\n\n    return modifiedSource;\n  };\n  /**\n   * To destroy the Stocastic Indicator.\n   * @return {void}\n   * @private\n   */\n\n\n  StochasticIndicator.prototype.destroy = function (chart) {\n    /**\n     * Destroys the stochastic indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StochasticIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the indicator.\n     */\n    return 'StochasticIndicator';\n  };\n\n  return StochasticIndicator;\n}(TechnicalAnalysis);\n\nexport { StochasticIndicator };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/stochastic-indicator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","StochasticIndicator","_super","apply","arguments","initSeriesCollection","indicator","chart","call","periodLine","setSeriesProperties","color","width","showZones","upperSeries","upperLine","lowerSeries","lowerLine","initDataSource","signalCollection","upperCollection","lowerCollection","periodCollection","source","sourceSeries","point","validData","points","length","period","i","push","getDataPoint","x","overBought","targetSeries","overSold","calculatePeriod","kPeriod","smaCalculation","dPeriod","setSeriesRange","data","pointCollection","count","temp","values","value","Number","y","length_1","sum","toFixed","splice","len","series","lowValues","highValues","closeValues","modifiedSource","j","low","high","close","totalPeriod","mins","maxs","min","MAX_VALUE","max","MIN_VALUE","Math","top_1","bottom","destroy","getModuleName"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,MAAT,QAAuB,wBAAvB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACvDjB,EAAAA,SAAS,CAACgB,mBAAD,EAAsBC,MAAtB,CAAT;;AACA,WAASD,mBAAT,GAA+B;AAC3B,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;AACD;AACJ;AACA;AACA;;;AACIH,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BQ,oBAA9B,GAAqD,UAAUC,SAAV,EAAqBC,KAArB,EAA4B;AAC7EL,IAAAA,MAAM,CAACL,SAAP,CAAiBQ,oBAAjB,CAAsCG,IAAtC,CAA2C,IAA3C,EAAiDF,SAAjD,EAA4DC,KAA5D;;AACA,QAAIE,UAAU,GAAG,IAAIV,MAAJ,CAAWO,SAAX,EAAsB,cAAtB,EAAsC,EAAtC,EAA0C,IAA1C,CAAjB;AACA,SAAKI,mBAAL,CAAyBD,UAAzB,EAAqCH,SAArC,EAAgD,YAAhD,EAA8DA,SAAS,CAACG,UAAV,CAAqBE,KAAnF,EAA0FL,SAAS,CAACG,UAAV,CAAqBG,KAA/G,EAAsHL,KAAtH;;AACA,QAAID,SAAS,CAACO,SAAd,EAAyB;AACrB,UAAIC,WAAW,GAAG,IAAIf,MAAJ,CAAWO,SAAX,EAAsB,cAAtB,EAAsC,EAAtC,EAA0C,IAA1C,CAAlB;AACA,WAAKI,mBAAL,CAAyBI,WAAzB,EAAsCR,SAAtC,EAAiD,WAAjD,EAA8DA,SAAS,CAACS,SAAV,CAAoBJ,KAAlF,EAAyFL,SAAS,CAACS,SAAV,CAAoBH,KAA7G,EAAoHL,KAApH;AACA,UAAIS,WAAW,GAAG,IAAIjB,MAAJ,CAAWO,SAAX,EAAsB,cAAtB,EAAsC,EAAtC,EAA0C,IAA1C,CAAlB;AACA,WAAKI,mBAAL,CAAyBM,WAAzB,EAAsCV,SAAtC,EAAiD,WAAjD,EAA8DA,SAAS,CAACW,SAAV,CAAoBN,KAAlF,EAAyFL,SAAS,CAACW,SAAV,CAAoBL,KAA7G,EAAoHL,KAApH;AACH;AACJ,GAVD;AAWA;AACJ;AACA;AACA;;;AACIN,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BqB,cAA9B,GAA+C,UAAUZ,SAAV,EAAqBC,KAArB,EAA4B;AACvE,QAAIY,gBAAgB,GAAG,EAAvB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,gBAAgB,GAAG,EAAvB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIC,YAAY,GAAGlB,SAAS,CAACkB,YAA7B;AACA,QAAIC,KAAK,GAAG,EAAZ,CAPuE,CAQvE;;AACA,QAAIC,SAAS,GAAGpB,SAAS,CAACqB,MAA1B;;AACA,QAAID,SAAS,CAACE,MAAV,IAAoBF,SAAS,CAACE,MAAV,IAAoBtB,SAAS,CAACuB,MAAtD,EAA8D;AAC1D,UAAIvB,SAAS,CAACO,SAAd,EAAyB;AACrB,aAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAAS,CAACE,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACvCV,UAAAA,eAAe,CAACW,IAAhB,CAAqB,KAAKC,YAAL,CAAkBN,SAAS,CAACI,CAAD,CAAT,CAAaG,CAA/B,EAAkC3B,SAAS,CAAC4B,UAA5C,EAAwDR,SAAS,CAACI,CAAD,CAAjE,EAAsExB,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAtE,EAAiGf,eAAe,CAACQ,MAAjH,CAArB;AACAP,UAAAA,eAAe,CAACU,IAAhB,CAAqB,KAAKC,YAAL,CAAkBN,SAAS,CAACI,CAAD,CAAT,CAAaG,CAA/B,EAAkC3B,SAAS,CAAC8B,QAA5C,EAAsDV,SAAS,CAACI,CAAD,CAA/D,EAAoExB,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAApE,EAA+Fd,eAAe,CAACO,MAA/G,CAArB;AACH;AACJ;;AACDL,MAAAA,MAAM,GAAG,KAAKc,eAAL,CAAqB/B,SAAS,CAACuB,MAA/B,EAAuCvB,SAAS,CAACgC,OAAjD,EAA0DZ,SAA1D,EAAqEpB,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAArE,CAAT;AACAb,MAAAA,gBAAgB,GAAG,KAAKiB,cAAL,CAAoBjC,SAAS,CAACuB,MAA9B,EAAsCvB,SAAS,CAACgC,OAAhD,EAAyDf,MAAzD,EAAiEjB,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAjE,CAAnB;AACAhB,MAAAA,gBAAgB,GAAG,KAAKoB,cAAL,CAAoBjC,SAAS,CAACuB,MAAV,GAAmBvB,SAAS,CAACgC,OAA7B,GAAuC,CAA3D,EAA8DhC,SAAS,CAACkC,OAAxE,EAAiFjB,MAAjF,EAAyFjB,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAzF,CAAnB;AACH;;AACD,SAAKM,cAAL,CAAoBtB,gBAApB,EAAsCb,SAAtC,EAAiDA,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAjD;AACA,SAAKM,cAAL,CAAoBnB,gBAApB,EAAsChB,SAAtC,EAAiDA,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAjD;;AACA,QAAI7B,SAAS,CAACO,SAAd,EAAyB;AACrB,WAAK4B,cAAL,CAAoBrB,eAApB,EAAqCd,SAArC,EAAgDA,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAhD;AACA,WAAKM,cAAL,CAAoBpB,eAApB,EAAqCf,SAArC,EAAgDA,SAAS,CAAC6B,YAAV,CAAuB,CAAvB,CAAhD;AACH;AACJ,GA3BD;AA4BA;AACJ;AACA;AACA;;;AACIlC,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B0C,cAA9B,GAA+C,UAAUV,MAAV,EAAkBS,OAAlB,EAA2BI,IAA3B,EAAiClB,YAAjC,EAA+C;AAC1F,QAAImB,eAAe,GAAG,EAAtB;;AACA,QAAID,IAAI,CAACd,MAAL,IAAeC,MAAM,GAAGS,OAA5B,EAAqC;AACjC,UAAIM,KAAK,GAAGf,MAAM,IAAIS,OAAO,GAAG,CAAd,CAAlB;AACA,UAAIO,IAAI,GAAG,EAAX;AACA,UAAIC,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,IAAI,CAACd,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,YAAIiB,KAAK,GAAGC,MAAM,CAACN,IAAI,CAACZ,CAAD,CAAJ,CAAQmB,CAAT,CAAlB;AACAJ,QAAAA,IAAI,CAACd,IAAL,CAAUgB,KAAV;AACH;;AACD,UAAIG,QAAQ,GAAGL,IAAI,CAACjB,MAApB;;AACA,aAAOsB,QAAQ,IAAIN,KAAnB,EAA0B;AACtB,YAAIO,GAAG,GAAG,CAAV;;AACA,aAAK,IAAIrB,CAAC,GAAGD,MAAM,GAAG,CAAtB,EAAyBC,CAAC,GAAID,MAAM,GAAGS,OAAT,GAAmB,CAAjD,EAAqDR,CAAC,EAAtD,EAA0D;AACtDqB,UAAAA,GAAG,GAAGA,GAAG,GAAGN,IAAI,CAACf,CAAD,CAAhB;AACH;;AACDqB,QAAAA,GAAG,GAAGA,GAAG,GAAGb,OAAZ;AACAQ,QAAAA,MAAM,CAACf,IAAP,CAAYoB,GAAG,CAACC,OAAJ,CAAY,CAAZ,CAAZ;AACAP,QAAAA,IAAI,CAACQ,MAAL,CAAY,CAAZ,EAAe,CAAf;AACAH,QAAAA,QAAQ,GAAGL,IAAI,CAACjB,MAAhB;AACH;;AACD,UAAI0B,GAAG,GAAGV,KAAK,GAAG,CAAlB;;AACA,WAAK,IAAId,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,IAAI,CAACd,MAAzB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,YAAI,EAAEA,CAAC,GAAGwB,GAAN,CAAJ,EAAgB;AACZX,UAAAA,eAAe,CAACZ,IAAhB,CAAqB,KAAKC,YAAL,CAAkBU,IAAI,CAACZ,CAAD,CAAJ,CAAQG,CAA1B,EAA6Be,MAAM,CAACF,MAAM,CAAChB,CAAC,GAAGwB,GAAL,CAAP,CAAnC,EAAsDZ,IAAI,CAACZ,CAAD,CAA1D,EAA+DN,YAA/D,EAA6EmB,eAAe,CAACf,MAA7F,CAArB;AACAc,UAAAA,IAAI,CAACZ,CAAD,CAAJ,CAAQmB,CAAR,GAAYD,MAAM,CAAEF,MAAM,CAAChB,CAAC,GAAGwB,GAAL,CAAR,CAAlB;AACH;AACJ;AACJ;;AACD,WAAOX,eAAP;AACH,GA9BD;AA+BA;AACJ;AACA;AACA;;;AACI1C,EAAAA,mBAAmB,CAACJ,SAApB,CAA8BwC,eAA9B,GAAgD,UAAUR,MAAV,EAAkBS,OAAlB,EAA2BI,IAA3B,EAAiCa,MAAjC,EAAyC;AACrF,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,cAAc,GAAG,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,IAAI,CAACd,MAAzB,EAAiCgC,CAAC,EAAlC,EAAsC;AAClCJ,MAAAA,SAAS,CAACI,CAAD,CAAT,GAAelB,IAAI,CAACkB,CAAD,CAAJ,CAAQC,GAAvB;AACAJ,MAAAA,UAAU,CAACG,CAAD,CAAV,GAAgBlB,IAAI,CAACkB,CAAD,CAAJ,CAAQE,IAAxB;AACAJ,MAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBlB,IAAI,CAACkB,CAAD,CAAJ,CAAQG,KAAzB;AACH;;AACD,QAAIrB,IAAI,CAACd,MAAL,GAAcC,MAAlB,EAA0B;AACtB,UAAImC,WAAW,GAAGnC,MAAM,GAAGS,OAA3B;AACA,UAAI2B,IAAI,GAAG,EAAX;AACA,UAAIC,IAAI,GAAG,EAAX;;AACA,WAAK,IAAIpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,GAAG,CAA7B,EAAgC,EAAEC,CAAlC,EAAqC;AACjCoC,QAAAA,IAAI,CAACnC,IAAL,CAAU,CAAV;AACAkC,QAAAA,IAAI,CAAClC,IAAL,CAAU,CAAV;AACA4B,QAAAA,cAAc,CAAC5B,IAAf,CAAoB,KAAKC,YAAL,CAAkBU,IAAI,CAACZ,CAAD,CAAJ,CAAQG,CAA1B,EAA6BS,IAAI,CAACZ,CAAD,CAAJ,CAAQiC,KAArC,EAA4CrB,IAAI,CAACZ,CAAD,CAAhD,EAAqDyB,MAArD,EAA6DI,cAAc,CAAC/B,MAA5E,CAApB;AACH;;AACD,WAAK,IAAIE,CAAC,GAAGD,MAAM,GAAG,CAAtB,EAAyBC,CAAC,GAAGY,IAAI,CAACd,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;AAC3C,YAAIqC,GAAG,GAAGnB,MAAM,CAACoB,SAAjB;AACA,YAAIC,GAAG,GAAGrB,MAAM,CAACsB,SAAjB;;AACA,aAAK,IAAIV,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/B,MAApB,EAA4B,EAAE+B,CAA9B,EAAiC;AAC7BO,UAAAA,GAAG,GAAGI,IAAI,CAACJ,GAAL,CAASA,GAAT,EAAcX,SAAS,CAAC1B,CAAC,GAAG8B,CAAL,CAAvB,CAAN;AACAS,UAAAA,GAAG,GAAGE,IAAI,CAACF,GAAL,CAASA,GAAT,EAAcZ,UAAU,CAAC3B,CAAC,GAAG8B,CAAL,CAAxB,CAAN;AACH;;AACDM,QAAAA,IAAI,CAACnC,IAAL,CAAUsC,GAAV;AACAJ,QAAAA,IAAI,CAAClC,IAAL,CAAUoC,GAAV;AACH;;AACD,WAAK,IAAIrC,CAAC,GAAGD,MAAM,GAAG,CAAtB,EAAyBC,CAAC,GAAGY,IAAI,CAACd,MAAlC,EAA0C,EAAEE,CAA5C,EAA+C;AAC3C,YAAI0C,KAAK,GAAG,CAAZ;AACA,YAAIC,MAAM,GAAG,CAAb;AACAD,QAAAA,KAAK,IAAId,WAAW,CAAC5B,CAAD,CAAX,GAAiBmC,IAAI,CAACnC,CAAD,CAA9B;AACA2C,QAAAA,MAAM,IAAIP,IAAI,CAACpC,CAAD,CAAJ,GAAUmC,IAAI,CAACnC,CAAD,CAAxB;AACA6B,QAAAA,cAAc,CAAC5B,IAAf,CAAoB,KAAKC,YAAL,CAAkBU,IAAI,CAACZ,CAAD,CAAJ,CAAQG,CAA1B,EAA8BuC,KAAK,GAAGC,MAAT,GAAmB,GAAhD,EAAqD/B,IAAI,CAACZ,CAAD,CAAzD,EAA8DyB,MAA9D,EAAsEI,cAAc,CAAC/B,MAArF,CAApB;AACH;AACJ;;AACD,WAAO+B,cAAP;AACH,GAtCD;AAuCA;AACJ;AACA;AACA;AACA;;;AACI1D,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B6E,OAA9B,GAAwC,UAAUnE,KAAV,EAAiB;AACrD;AACR;AACA;AACK,GAJD;AAKA;AACJ;AACA;;;AACIN,EAAAA,mBAAmB,CAACJ,SAApB,CAA8B8E,aAA9B,GAA8C,YAAY;AACtD;AACR;AACA;AACQ,WAAO,qBAAP;AACH,GALD;;AAMA,SAAO1E,mBAAP;AACH,CAtJwC,CAsJvCD,iBAtJuC,CAAzC;;AAuJA,SAASC,mBAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `StochasticIndicator` module is used to render stochastic indicator.\n */\nvar StochasticIndicator = /** @class */ (function (_super) {\n    __extends(StochasticIndicator, _super);\n    function StochasticIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series that represents the stochastic indicator\n     * @private\n     */\n    StochasticIndicator.prototype.initSeriesCollection = function (indicator, chart) {\n        _super.prototype.initSeriesCollection.call(this, indicator, chart);\n        var periodLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(periodLine, indicator, 'PeriodLine', indicator.periodLine.color, indicator.periodLine.width, chart);\n        if (indicator.showZones) {\n            var upperSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(upperSeries, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n            var lowerSeries = new Series(indicator, 'targetSeries', {}, true);\n            this.setSeriesProperties(lowerSeries, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n        }\n    };\n    /**\n     * Defines the predictions based on stochastic approach\n     * @private\n     */\n    StochasticIndicator.prototype.initDataSource = function (indicator, chart) {\n        var signalCollection = [];\n        var upperCollection = [];\n        var lowerCollection = [];\n        var periodCollection = [];\n        var source = [];\n        var sourceSeries = indicator.sourceSeries;\n        var point = {};\n        //prepare data\n        var validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            if (indicator.showZones) {\n                for (var i = 0; i < validData.length; i++) {\n                    upperCollection.push(this.getDataPoint(validData[i].x, indicator.overBought, validData[i], indicator.targetSeries[2], upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[i].x, indicator.overSold, validData[i], indicator.targetSeries[3], lowerCollection.length));\n                }\n            }\n            source = this.calculatePeriod(indicator.period, indicator.kPeriod, validData, indicator.targetSeries[1]);\n            periodCollection = this.smaCalculation(indicator.period, indicator.kPeriod, source, indicator.targetSeries[1]);\n            signalCollection = this.smaCalculation(indicator.period + indicator.kPeriod - 1, indicator.dPeriod, source, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[0]);\n        this.setSeriesRange(periodCollection, indicator, indicator.targetSeries[1]);\n        if (indicator.showZones) {\n            this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[2]);\n            this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[3]);\n        }\n    };\n    /**\n     * Calculates the SMA Values\n     * @private\n     */\n    StochasticIndicator.prototype.smaCalculation = function (period, kPeriod, data, sourceSeries) {\n        var pointCollection = [];\n        if (data.length >= period + kPeriod) {\n            var count = period + (kPeriod - 1);\n            var temp = [];\n            var values = [];\n            for (var i = 0; i < data.length; i++) {\n                var value = Number(data[i].y);\n                temp.push(value);\n            }\n            var length_1 = temp.length;\n            while (length_1 >= count) {\n                var sum = 0;\n                for (var i = period - 1; i < (period + kPeriod - 1); i++) {\n                    sum = sum + temp[i];\n                }\n                sum = sum / kPeriod;\n                values.push(sum.toFixed(2));\n                temp.splice(0, 1);\n                length_1 = temp.length;\n            }\n            var len = count - 1;\n            for (var i = 0; i < data.length; i++) {\n                if (!(i < len)) {\n                    pointCollection.push(this.getDataPoint(data[i].x, Number(values[i - len]), data[i], sourceSeries, pointCollection.length));\n                    data[i].y = Number((values[i - len]));\n                }\n            }\n        }\n        return pointCollection;\n    };\n    /**\n     * Calculates the period line values.\n     * @private\n     */\n    StochasticIndicator.prototype.calculatePeriod = function (period, kPeriod, data, series) {\n        var lowValues = [];\n        var highValues = [];\n        var closeValues = [];\n        var modifiedSource = [];\n        for (var j = 0; j < data.length; j++) {\n            lowValues[j] = data[j].low;\n            highValues[j] = data[j].high;\n            closeValues[j] = data[j].close;\n        }\n        if (data.length > period) {\n            var totalPeriod = period + kPeriod;\n            var mins = [];\n            var maxs = [];\n            for (var i = 0; i < period - 1; ++i) {\n                maxs.push(0);\n                mins.push(0);\n                modifiedSource.push(this.getDataPoint(data[i].x, data[i].close, data[i], series, modifiedSource.length));\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var min = Number.MAX_VALUE;\n                var max = Number.MIN_VALUE;\n                for (var j = 0; j < period; ++j) {\n                    min = Math.min(min, lowValues[i - j]);\n                    max = Math.max(max, highValues[i - j]);\n                }\n                maxs.push(max);\n                mins.push(min);\n            }\n            for (var i = period - 1; i < data.length; ++i) {\n                var top_1 = 0;\n                var bottom = 0;\n                top_1 += closeValues[i] - mins[i];\n                bottom += maxs[i] - mins[i];\n                modifiedSource.push(this.getDataPoint(data[i].x, (top_1 / bottom) * 100, data[i], series, modifiedSource.length));\n            }\n        }\n        return modifiedSource;\n    };\n    /**\n     * To destroy the Stocastic Indicator.\n     * @return {void}\n     * @private\n     */\n    StochasticIndicator.prototype.destroy = function (chart) {\n        /**\n         * Destroys the stochastic indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StochasticIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the indicator.\n         */\n        return 'StochasticIndicator';\n    };\n    return StochasticIndicator;\n}(TechnicalAnalysis));\nexport { StochasticIndicator };\n"]},"metadata":{},"sourceType":"module"}