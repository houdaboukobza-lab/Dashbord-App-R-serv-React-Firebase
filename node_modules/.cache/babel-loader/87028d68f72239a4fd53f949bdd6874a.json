{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { LineBase } from '../series/line-base';\nimport { Series, Points } from '../series/chart-series';\nimport { RectOption, appendClipElement } from '../../common/utils/helper';\nimport { findClipRect } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\n/**\n * Technical Analysis module helps to predict the market trend\n */\n\nvar TechnicalAnalysis =\n/** @class */\nfunction (_super) {\n  __extends(TechnicalAnalysis, _super);\n\n  function TechnicalAnalysis() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the collection of series, that are used to represent the given technical indicator\n   * @private\n   */\n\n\n  TechnicalAnalysis.prototype.initSeriesCollection = function (indicator, chart) {\n    indicator.targetSeries = [];\n    var signalLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(signalLine, indicator, indicator.type, indicator.fill, indicator.width, chart);\n  };\n  /**\n   * Initializes the properties of the given series\n   * @private\n   */\n\n\n  TechnicalAnalysis.prototype.setSeriesProperties = function (series, indicator, name, fill, width, chart) {\n    series.name = name.length <= 4 ? name.toLocaleUpperCase() : name;\n    series.xName = 'x';\n    series.yName = 'y';\n    series.fill = fill || '#606eff';\n    series.dashArray = indicator.dashArray;\n    series.width = width;\n    series.xAxisName = indicator.xAxisName;\n    series.animation = indicator.animation;\n    series.yAxisName = indicator.yAxisName;\n    series.clipRectElement = indicator.clipRectElement;\n    series.points = [];\n    series.enableTooltip = true;\n    series.interior = series.fill;\n    series.category = 'Indicator';\n    series.index = indicator.index;\n    series.chart = chart;\n    series.xMin = Infinity;\n    series.xMax = -Infinity;\n    series.yMin = Infinity;\n    series.yMax = -Infinity;\n    series.xData = [];\n    series.yData = [];\n    series.marker.visible = false;\n    indicator.targetSeries.push(series);\n  };\n  /**\n   * Creates the elements of a technical indicator\n   * @private\n   */\n\n\n  TechnicalAnalysis.prototype.createIndicatorElements = function (chart, indicator, index) {\n    if (indicator.seriesName || indicator.dataSource) {\n      findClipRect(indicator.targetSeries[0]);\n    }\n\n    var clipRect = new Rect(0, 0, 0, 0);\n\n    if (indicator.seriesName || indicator.dataSource) {\n      clipRect = indicator.targetSeries[0].clipRect;\n    }\n\n    var options = new RectOption(chart.element.id + '_ChartIndicatorClipRect_' + index, 'transparent', {\n      width: 1,\n      color: 'Gray'\n    }, 1, {\n      x: 0,\n      y: 0,\n      width: clipRect.width,\n      height: clipRect.height\n    });\n    var clipRectElement = appendClipElement(chart.redraw, options, chart.renderer); //defines the clip rect element\n    //creates the group for an indicator\n\n    indicator.indicatorElement = chart.renderer.createGroup({\n      'id': chart.element.id + 'IndicatorGroup' + index,\n      'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n      'clip-path': 'url(#' + chart.element.id + '_ChartIndicatorClipRect_' + index + ')'\n    });\n    indicator.indicatorElement.appendChild(clipRectElement); //Defines a group for each series in a technical indicator\n\n    for (var _i = 0, _a = indicator.targetSeries; _i < _a.length; _i++) {\n      var series = _a[_i];\n      series.clipRectElement = clipRectElement;\n      var element = series.chart.renderer.createGroup({\n        'id': series.chart.element.id + '_Indicator_' + indicator.index + '_' + series.name + '_Group'\n      });\n      indicator.indicatorElement.appendChild(element);\n      series.seriesElement = element;\n    }\n\n    chart.indicatorElements.appendChild(indicator.indicatorElement);\n  };\n\n  TechnicalAnalysis.prototype.getDataPoint = function (x, y, sourcePoint, series, index, indicator) {\n    if (indicator === void 0) {\n      indicator = null;\n    }\n\n    var point = new Points();\n    point.x = x;\n    point.y = y;\n    point.xValue = sourcePoint.xValue;\n    point.color = series.fill;\n    point.index = index;\n    point.yValue = y;\n    point.visible = true;\n    series.xMin = Math.min(series.xMin, point.xValue);\n    series.yMin = Math.min(series.yMin, point.yValue);\n    series.xMax = Math.max(series.xMax, point.xValue);\n    series.yMax = Math.max(series.yMax, point.yValue);\n    series.xData.push(point.xValue);\n\n    if (indicator && indicator.type === 'Macd' && series.type === 'Column') {\n      if (point.y >= 0) {\n        point.color = indicator.macdPositiveColor;\n      } else {\n        point.color = indicator.macdNegativeColor;\n      }\n    }\n\n    return point;\n  };\n\n  TechnicalAnalysis.prototype.getRangePoint = function (x, high, low, sourcePoint, series, index, indicator) {\n    if (indicator === void 0) {\n      indicator = null;\n    }\n\n    var point = new Points();\n    point.x = x;\n    point.high = high;\n    point.low = low;\n    point.xValue = sourcePoint.xValue;\n    point.color = series.fill;\n    point.index = index;\n    point.visible = true;\n    series.xData.push(point.xValue);\n    return point;\n  };\n\n  TechnicalAnalysis.prototype.setSeriesRange = function (points, indicator, series) {\n    if (series === void 0) {\n      series = null;\n    }\n\n    if (!series) {\n      indicator.targetSeries[0].points = points;\n    } else {\n      series.points = points;\n    }\n  };\n\n  return TechnicalAnalysis;\n}(LineBase);\n\nexport { TechnicalAnalysis };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/indicator-base.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","LineBase","Series","Points","RectOption","appendClipElement","findClipRect","Rect","TechnicalAnalysis","_super","apply","arguments","initSeriesCollection","indicator","chart","targetSeries","signalLine","setSeriesProperties","type","fill","width","series","name","length","toLocaleUpperCase","xName","yName","dashArray","xAxisName","animation","yAxisName","clipRectElement","points","enableTooltip","interior","category","index","xMin","Infinity","xMax","yMin","yMax","xData","yData","marker","visible","push","createIndicatorElements","seriesName","dataSource","clipRect","options","element","id","color","x","y","height","redraw","renderer","indicatorElement","createGroup","appendChild","_i","_a","seriesElement","indicatorElements","getDataPoint","sourcePoint","point","xValue","yValue","Math","min","max","macdPositiveColor","macdNegativeColor","getRangePoint","high","low","setSeriesRange"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { LineBase } from '../series/line-base';\nimport { Series, Points } from '../series/chart-series';\nimport { RectOption, appendClipElement } from '../../common/utils/helper';\nimport { findClipRect } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\n/**\n * Technical Analysis module helps to predict the market trend\n */\nvar TechnicalAnalysis = /** @class */ (function (_super) {\n    __extends(TechnicalAnalysis, _super);\n    function TechnicalAnalysis() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the collection of series, that are used to represent the given technical indicator\n     * @private\n     */\n    TechnicalAnalysis.prototype.initSeriesCollection = function (indicator, chart) {\n        indicator.targetSeries = [];\n        var signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, indicator.type, indicator.fill, indicator.width, chart);\n    };\n    /**\n     * Initializes the properties of the given series\n     * @private\n     */\n    TechnicalAnalysis.prototype.setSeriesProperties = function (series, indicator, name, fill, width, chart) {\n        series.name = name.length <= 4 ? name.toLocaleUpperCase() : name;\n        series.xName = 'x';\n        series.yName = 'y';\n        series.fill = fill || '#606eff';\n        series.dashArray = indicator.dashArray;\n        series.width = width;\n        series.xAxisName = indicator.xAxisName;\n        series.animation = indicator.animation;\n        series.yAxisName = indicator.yAxisName;\n        series.clipRectElement = indicator.clipRectElement;\n        series.points = [];\n        series.enableTooltip = true;\n        series.interior = series.fill;\n        series.category = 'Indicator';\n        series.index = indicator.index;\n        series.chart = chart;\n        series.xMin = Infinity;\n        series.xMax = -Infinity;\n        series.yMin = Infinity;\n        series.yMax = -Infinity;\n        series.xData = [];\n        series.yData = [];\n        series.marker.visible = false;\n        indicator.targetSeries.push(series);\n    };\n    /**\n     * Creates the elements of a technical indicator\n     * @private\n     */\n    TechnicalAnalysis.prototype.createIndicatorElements = function (chart, indicator, index) {\n        if (indicator.seriesName || indicator.dataSource) {\n            findClipRect(indicator.targetSeries[0]);\n        }\n        var clipRect = new Rect(0, 0, 0, 0);\n        if (indicator.seriesName || indicator.dataSource) {\n            clipRect = indicator.targetSeries[0].clipRect;\n        }\n        var options = new RectOption(chart.element.id + '_ChartIndicatorClipRect_' + index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n            x: 0, y: 0, width: clipRect.width,\n            height: clipRect.height,\n        });\n        var clipRectElement = appendClipElement(chart.redraw, options, chart.renderer);\n        //defines the clip rect element\n        //creates the group for an indicator\n        indicator.indicatorElement = chart.renderer.createGroup({\n            'id': chart.element.id + 'IndicatorGroup' + index,\n            'transform': 'translate(' + clipRect.x + ',' + clipRect.y + ')',\n            'clip-path': 'url(#' + chart.element.id + '_ChartIndicatorClipRect_' + index + ')'\n        });\n        indicator.indicatorElement.appendChild(clipRectElement);\n        //Defines a group for each series in a technical indicator\n        for (var _i = 0, _a = indicator.targetSeries; _i < _a.length; _i++) {\n            var series = _a[_i];\n            series.clipRectElement = clipRectElement;\n            var element = series.chart.renderer.createGroup({\n                'id': series.chart.element.id + '_Indicator_' +\n                    indicator.index + '_' + series.name + '_Group'\n            });\n            indicator.indicatorElement.appendChild(element);\n            series.seriesElement = element;\n        }\n        chart.indicatorElements.appendChild(indicator.indicatorElement);\n    };\n    TechnicalAnalysis.prototype.getDataPoint = function (x, y, sourcePoint, series, index, indicator) {\n        if (indicator === void 0) { indicator = null; }\n        var point = new Points();\n        point.x = x;\n        point.y = y;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.yValue = y;\n        point.visible = true;\n        series.xMin = Math.min(series.xMin, point.xValue);\n        series.yMin = Math.min(series.yMin, point.yValue);\n        series.xMax = Math.max(series.xMax, point.xValue);\n        series.yMax = Math.max(series.yMax, point.yValue);\n        series.xData.push(point.xValue);\n        if (indicator && indicator.type === 'Macd' && series.type === 'Column') {\n            if (point.y >= 0) {\n                point.color = indicator.macdPositiveColor;\n            }\n            else {\n                point.color = indicator.macdNegativeColor;\n            }\n        }\n        return point;\n    };\n    TechnicalAnalysis.prototype.getRangePoint = function (x, high, low, sourcePoint, series, index, indicator) {\n        if (indicator === void 0) { indicator = null; }\n        var point = new Points();\n        point.x = x;\n        point.high = high;\n        point.low = low;\n        point.xValue = sourcePoint.xValue;\n        point.color = series.fill;\n        point.index = index;\n        point.visible = true;\n        series.xData.push(point.xValue);\n        return point;\n    };\n    TechnicalAnalysis.prototype.setSeriesRange = function (points, indicator, series) {\n        if (series === void 0) { series = null; }\n        if (!series) {\n            indicator.targetSeries[0].points = points;\n        }\n        else {\n            series.points = points;\n        }\n    };\n    return TechnicalAnalysis;\n}(LineBase));\nexport { TechnicalAnalysis };\n"]},"metadata":{},"sourceType":"module"}