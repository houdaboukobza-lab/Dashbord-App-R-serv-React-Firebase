{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\n\nvar axisPadding = 10;\n\nvar PolarRadarPanel =\n/** @class */\nfunction (_super) {\n  __extends(PolarRadarPanel, _super);\n\n  function PolarRadarPanel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /** @private */\n\n\n    _this.visibleAxisLabelRect = [];\n    return _this;\n  }\n  /**\n   * Measure the polar radar axis size.\n   * @return {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    this.initialClipRect = rect;\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height); //Measure axis size calculation\n\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.calculateAxisSize();\n  };\n\n  PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n    this.calculateRowSize(rect);\n    var row = chart.rows[0];\n    this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n  };\n\n  PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n    this.calculateColumnSize(rect);\n    var column = chart.columns[0];\n    this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n  };\n  /**\n   * Measure the column and row in chart.\n   * @return {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size, clipRect) {\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n    }\n  };\n  /**\n   * Measure the axis.\n   * @return {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.calculateAxisSize = function () {\n    var chart = this.chart;\n    var axis;\n    var padding = 5;\n    this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n    this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n    chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding - chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n    chart.radius = chart.primaryXAxis.coefficient * chart.radius / 100;\n    this.seriesClipRect.y = this.centerY - chart.radius;\n    this.seriesClipRect.x = this.centerX - chart.radius;\n    this.seriesClipRect.height = 2 * chart.radius;\n    this.seriesClipRect.width = 2 * chart.radius;\n    this.calculateRowSize(this.seriesClipRect);\n    axis = chart.primaryYAxis;\n    axis.rect = this.seriesClipRect;\n    this.calculateColumnSize(this.seriesClipRect);\n    axis = chart.primaryXAxis;\n    axis.rect = this.seriesClipRect;\n  };\n  /**\n   * Measure the axis.\n   * @return {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.measure = function () {\n    var chart = this.chart;\n    chart.verticalAxes.push(chart.primaryYAxis);\n    var row = chart.rows[0];\n    row.axes[0] = chart.primaryYAxis;\n    chart.rows[0] = row;\n    chart.horizontalAxes.push(chart.primaryXAxis);\n    var column = chart.columns[0];\n    column.axes[0] = chart.primaryXAxis;\n    chart.columns[0] = column;\n  };\n  /**\n   * Measure the row size.\n   * @return {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row = chart.rows[0];\n    row.computedHeight = rect.height / 2;\n    row.computedTop = rect.y;\n    chart.rows[0] = row;\n  };\n  /**\n   * Measure the row size.\n   * @return {void}\n   */\n\n\n  PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column = chart.columns[0];\n    column.computedLeft = rect.x;\n    column.computedWidth = rect.width;\n    chart.columns[0] = column;\n  };\n  /**\n   * To render the axis element.\n   * @return {void}\n   * @private\n   */\n\n\n  PolarRadarPanel.prototype.renderAxes = function () {\n    var axis;\n    var chart = this.chart;\n    this.startAngle = chart.primaryXAxis.startAngle;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i\n      });\n      axis = chart.axisCollections[i];\n\n      if (axis.orientation === 'Horizontal') {\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i);\n        }\n      } else {\n        this.drawYAxisGridLine(axis, i);\n\n        if (axis.lineStyle.width > 0) {\n          this.drawYAxisLine(axis, i, axis.plotOffset, 0);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i);\n        }\n      }\n\n      axisElement.appendChild(this.element);\n    }\n\n    axisElement.appendChild(this.element);\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLine = function (axis, index, plotX, plotY) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n    var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' + (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': axisLine,\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    /**\n     * I252450\n     * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n     * Cause: Instead of marker id, axis  line id is obtained while clicking\n     * Fix: Pointer events set to none for axis lines\n     */\n\n    var element = chart.renderer.drawPath(optionsLine);\n    this.setPointerEventNone(element);\n    chart.yAxisElements.appendChild(element);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n    var chart = this.chart;\n    var elementSize;\n    var options;\n    var pointX = 0;\n    var pointY = 0;\n    var vector;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var anchor = 'middle';\n    var radius;\n    var padding = 5;\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      elementSize = axis.visibleLabels[i].size;\n      radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n      pointX = this.centerX + radius * vector.x + (axis.majorTickLines.height + elementSize.width / 2 + padding / 2) * Math.cos(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY = this.centerY + radius * vector.y + (axis.majorTickLines.height + elementSize.height / 2) * Math.sin(angle * Math.PI / 180) * (axis.labelPosition === 'Inside' ? 1 : -1);\n      pointY += elementSize.height / 4;\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n\n        if (isIntersect) {\n          continue; // If the label is intersect, the label render is ignored.\n        } // To check Y axis label with visible X axis label\n\n\n        for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n          var rect = _a[_i];\n\n          if (isOverlap(labelRegions[i], rect)) {\n            isIntersect = true;\n            break;\n          }\n        }\n      }\n\n      if (isIntersect) {\n        continue;\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n      textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n    }\n\n    chart.yAxisElements.appendChild(labelElement);\n  };\n\n  PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var options;\n    var radius;\n    var majorTick = '';\n    var majorGrid = '';\n    var vector;\n    var vector2;\n    var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n    var rect = axis.rect;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var border = {\n      color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n      width: axis.majorGridLines.width\n    };\n    var previousValue;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      if (chart.visibleSeries[0].type === 'Polar') {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('r') : null;\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n\n        if (radius !== chart.radius) {\n          options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n        }\n      } else {\n        for (var j = 0; j < axis.visibleLabels.length; j++) {\n          radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n          majorGrid = this.renderRadarGrid(radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n\n        if (radius !== chart.radius) {\n          majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n          element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n          previousValue = element ? element.getAttribute('d') : null;\n          options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n          appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n        }\n      }\n    }\n\n    if (axis.majorTickLines.width > 0) {\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n\n      for (var i = 0; i < axis.visibleLabels.length; i++) {\n        radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n        x1 = this.centerX + radius * vector.x;\n        y1 = this.centerY + radius * vector.y;\n        x2 = x1 + axis.majorTickLines.height * Math.cos(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        y2 = y1 + axis.majorTickLines.height * Math.sin(angle * Math.PI / 180) * (axis.tickPosition === 'Inside' ? 1 : -1);\n        majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n        this.renderTickLine(axis, index, majorTick, '', i);\n      }\n    }\n  };\n\n  PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n    var vector;\n    var vector2;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n\n    for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n      vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n\n      if (i + 1 < len) {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n      } else {\n        vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n      }\n\n      x1 = this.centerX + radius * vector.x;\n      y1 = this.centerY + radius * vector.y;\n      x2 = this.centerX + radius * vector2.x;\n      y2 = this.centerY + radius * vector2.y;\n      majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n    }\n\n    return majorGrid;\n  };\n\n  PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n    var chart = this.chart;\n    var tempInterval;\n    var vector;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGirdLine = '';\n    var minorTickLine = '';\n    var x1 = this.centerX;\n    var x2;\n    var y1 = this.centerY;\n    var y2;\n    var minorDirection;\n    var tickSize = axis.majorTickLines.height;\n    var rect = axis.rect;\n    var length = axis.visibleLabels.length; //Gridlines\n\n    for (var i = 0; i < length; i++) {\n      tempInterval = axis.visibleLabels[i].value;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n      x2 = this.centerX + chart.radius * vector.x;\n      y2 = this.centerY + chart.radius * vector.y;\n      var xLoc = x2 + axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n      var yLoc = y2 + axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n      majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n      majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n\n      if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0) && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n        minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n        minorGirdLine = minorDirection[0];\n        minorTickLine = minorDirection[1];\n      }\n\n      this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n      this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n    }\n  };\n\n  PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n    var value = tempInterval;\n    var x;\n    var y;\n    var vector;\n    var range = axis.visibleRange;\n    var direction = [];\n\n    for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n      value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) / (axis.minorTicksPerInterval + 1);\n\n      if (inside(value, range)) {\n        vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n        x = this.centerX + this.chart.radius * vector.x;\n        y = this.centerY + this.chart.radius * vector.y;\n        var tickXSize = x + axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1);\n        var tickYSize = y + axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1);\n        minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY + 'L ' + x + ' ' + y);\n        minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + tickXSize + ' ' + tickYSize);\n      }\n    }\n\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To render the axis label.\n   * @return {void}\n   * @private\n   */\n  //tslint:disable-next-line:max-func-body-length\n\n\n  PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n    this.visibleAxisLabelRect = [];\n    var legendRect;\n\n    if (this.chart.legendModule) {\n      legendRect = this.chart.legendModule.legendBounds;\n    }\n\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var options;\n    var vector;\n    var labelText;\n    var firstLabelX;\n    var islabelInside = axis.labelPosition === 'Inside';\n    var padding = 5;\n    var lastLabelX;\n    var label;\n    var textAnchor = '';\n    var isIntersect;\n    var labelRegions = [];\n    var isLabelVisible = [];\n    isLabelVisible[0] = true;\n    var intersectType = axis.labelIntersectAction;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var radius = chart.radius + axis.majorTickLines.height;\n    radius = islabelInside ? -radius : radius;\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isIntersect = false;\n      vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n\n      if (!isNaN(vector.x) && !isNaN(vector.y)) {\n        pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n        pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n        textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' : pointX < this.centerX && !islabelInside || pointX > this.centerX && islabelInside ? 'end' : 'start';\n      }\n\n      label = axis.visibleLabels[i];\n      labelText = label.text; // to trim axis labels based on available size\n\n      if (axis.enableTrim || intersectType === 'Trim') {\n        var originalText = axis.visibleLabels[i].originalText;\n        var trimText = void 0;\n        var size = void 0;\n        var labelPosition = axis.labelPosition;\n        var chartWidth = chart.availableSize.width;\n        var textLength = originalText.length;\n\n        for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n          trimText = originalText.substring(0, i_1) + '...';\n          size = measureText(trimText, axis.labelStyle).width;\n\n          if (pointX === chartWidth / 2 ? pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth : labelPosition === 'Outside' && (pointX >= chartWidth / 2 && pointX + size <= chartWidth || pointX <= chartWidth / 2 && pointX - size >= 0) || labelPosition === 'Inside' && (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)) {\n            labelText = i_1 === textLength - 1 ? originalText : trimText;\n            label.size.width = measureText(labelText, axis.labelStyle).width;\n            label.text = labelText;\n            break;\n          }\n        }\n      } // fix for label style not working in axisLabelRender event issue\n\n\n      labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n\n      if (i === 0) {\n        firstLabelX = pointX;\n      } else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n        lastLabelX = measureText(labelText, axis.labelStyle).height;\n        lastLabelX += pointX;\n        labelText = lastLabelX > firstLabelX ? '' : labelText;\n      } // Label intersect action (Hide) perform here\n\n\n      if (i !== 0 && intersectType === 'Hide') {\n        for (var j = i; j >= 0; j--) {\n          j = j === 0 ? 0 : j === i ? j - 1 : j;\n\n          if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n            isIntersect = true;\n            isLabelVisible[i] = false;\n            break;\n          } else {\n            isLabelVisible[i] = true;\n          }\n        }\n      }\n\n      if (!isIntersect && legendRect) {\n        isIntersect = isOverlap(labelRegions[i], legendRect);\n\n        if (isIntersect) {\n          var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n\n          if (width > 0) {\n            labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n            isIntersect = false;\n          }\n        }\n      }\n\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n\n      if (isIntersect) {\n        continue; // If the label is intersect, the label render is ignored.\n      }\n\n      this.visibleAxisLabelRect.push(labelRegions[i]);\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n    }\n\n    this.element.appendChild(labelElement);\n  };\n  /**\n   * To get available space to trim.\n   * @param legendRect\n   * @param labelRect\n   */\n\n\n  PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n    var legendX1 = legendRect.x;\n    var legendX2 = legendX1 + legendRect.width;\n    var labelX1 = labelRect.x;\n    var labelX2 = labelX1 + labelRect.width;\n    var width = 0;\n\n    if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n      width = labelX2 - legendX2;\n    } else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n      width = 0;\n    } else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    } else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n      width = legendX1 - labelX1;\n    }\n\n    return width;\n  };\n  /**\n   * Getting axis label bounds\n   * @param pointX\n   * @param pointY\n   * @param label\n   * @param anchor\n   */\n\n\n  PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n    if (anchor === 'middle') {\n      pointX -= label.size.width / 2;\n    } else if (anchor === 'end') {\n      pointX -= label.size.width;\n    } else {\n      pointX = pointX;\n    }\n\n    pointY -= label.size.height / 2;\n    return new Rect(pointX, pointY, label.size.width, label.size.height);\n  };\n\n  PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n    var tickOptions;\n    var chart = this.chart;\n    var direction;\n    var element;\n\n    if (axis.majorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorTickLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n      /**\n       * I252450\n       * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n       * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n       * Fix: Pointer events set to none for tick lines\n       */\n\n      element = chart.renderer.drawPath(tickOptions);\n      this.setPointerEventNone(element);\n      appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n    var chart = this.chart;\n    var gridOptions;\n    var direction;\n    var element;\n\n    if (axis.majorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n\n    if (axis.minorGridLines.width > 0) {\n      element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n      appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n    }\n  };\n\n  PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n    if (element) {\n      element.setAttribute('style', 'pointer-events:none');\n    }\n  };\n\n  return PolarRadarPanel;\n}(LineBase);\n\nexport { PolarRadarPanel };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/axis/polar-radar-panel.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","valueToCoefficient","inside","isOverlap","textTrim","appendChildElement","CircleOption","Size","measureText","TextOption","PathOption","Rect","LineBase","textElement","ChartLocation","valueToPolarCoefficient","CoefficientToVector","getElement","axisPadding","PolarRadarPanel","_super","_this","apply","arguments","visibleAxisLabelRect","measureAxis","rect","chart","initialClipRect","seriesClipRect","x","y","width","height","measureRowAxis","measureColumnAxis","calculateAxisSize","calculateRowSize","row","rows","measureDefinition","availableSize","computedHeight","calculateColumnSize","column","columns","computedWidth","definition","size","clipRect","_i","_a","axes","length","axis","getModule","baseModule","calculateRangeAndInterval","padding","centerX","centerY","radius","Math","min","primaryXAxis","majorTickLines","maxLabelSize","coefficient","primaryYAxis","measure","verticalAxes","push","horizontalAxes","computedTop","computedLeft","renderAxes","startAngle","axisElement","renderer","createGroup","id","element","axisLineElement","i","len","axisCollections","orientation","majorGridLines","drawXAxisGridLine","visible","internalVisibility","drawXAxisLabels","drawYAxisGridLine","lineStyle","drawYAxisLine","plotOffset","drawYAxisLabels","appendChild","enableCanvas","svgObject","redraw","index","plotX","plotY","optionsLine","vector","visibleLabels","value","axisLine","dashArray","color","themeStyle","drawPath","setPointerEventNone","yAxisElements","elementSize","options","pointX","pointY","angle","anchor","isIntersect","labelRegions","isLabelVisible","intersectType","labelIntersectAction","labelElement","cos","PI","labelPosition","sin","getLabelRegion","j","text","labelStyle","axisLabel","majorTick","majorGrid","vector2","x1","y1","x2","y2","border","majorGridLine","previousValue","visibleSeries","type","getAttribute","drawCircle","renderRadarGrid","tickPosition","renderTickLine","concat","tempInterval","minorGirdLine","minorTickLine","minorDirection","tickSize","xLoc","yLoc","minorTicksPerInterval","minorGridLines","minorTickLines","valueType","drawAxisMinorLine","renderGridLine","minorGird","minorTick","range","visibleRange","direction","dateTimeInterval","interval","tickXSize","tickYSize","legendRect","legendModule","legendBounds","labelText","firstLabelX","islabelInside","lastLabelX","label","textAnchor","ticksbwtLabel","labelPlacement","isNaN","parseFloat","toFixed","enableTrim","originalText","trimText","chartWidth","textLength","i_1","substring","getAvailableSpaceToTrim","labelRect","legendX1","legendX2","labelX1","labelX2","majorTickLine","gridIndex","tickOptions","gridOptions","minorGridLine","setAttribute"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;AACrD,MAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,IAAAA,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;AAAEC,MAAAA,SAAS,EAAE;AAAb,iBAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,MAAAA,CAAC,CAACI,SAAF,GAAcH,CAAd;AAAkB,KAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,WAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AAAc,KAF9E;;AAGA,WAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;AACH,GALD;;AAMA,SAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,IAAAA,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;AACA,aAASO,EAAT,GAAc;AAAE,WAAKC,WAAL,GAAmBT,CAAnB;AAAuB;;AACvCA,IAAAA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,GAJD;AAKH,CAZ2C,EAA5C;;AAaA,SAASI,kBAAT,EAA6BC,MAA7B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,2BAAhE;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,UAAxC,EAAoDC,IAApD,QAAgE,0BAAhE;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,uBAArC,EAA8DC,mBAA9D,EAAmFC,UAAnF,QAAqG,2BAArG;AACA;AACA;AACA;;AACA,IAAIC,WAAW,GAAG,EAAlB;;AACA,IAAIC,eAAe;AAAG;AAAe,UAAUC,MAAV,EAAkB;AACnDjC,EAAAA,SAAS,CAACgC,eAAD,EAAkBC,MAAlB,CAAT;;AACA,WAASD,eAAT,GAA2B;AACvB,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;AACA;;;AACAF,IAAAA,KAAK,CAACG,oBAAN,GAA6B,EAA7B;AACA,WAAOH,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIF,EAAAA,eAAe,CAACpB,SAAhB,CAA0B0B,WAA1B,GAAwC,UAAUC,IAAV,EAAgB;AACpD,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,SAAKC,eAAL,GAAuBF,IAAvB;AACA,SAAKG,cAAL,GAAsB,IAAIlB,IAAJ,CAASe,IAAI,CAACI,CAAd,EAAiBJ,IAAI,CAACK,CAAtB,EAAyBL,IAAI,CAACM,KAA9B,EAAqCN,IAAI,CAACO,MAA1C,CAAtB,CAHoD,CAIpD;;AACA,SAAKC,cAAL,CAAoBP,KAApB,EAA2B,KAAKC,eAAhC;AACA,SAAKO,iBAAL,CAAuBR,KAAvB,EAA8B,KAAKC,eAAnC;AACA,SAAKQ,iBAAL;AACH,GARD;;AASAjB,EAAAA,eAAe,CAACpB,SAAhB,CAA0BmC,cAA1B,GAA2C,UAAUP,KAAV,EAAiBD,IAAjB,EAAuB;AAC9D,SAAKW,gBAAL,CAAsBX,IAAtB;AACA,QAAIY,GAAG,GAAGX,KAAK,CAACY,IAAN,CAAW,CAAX,CAAV;AACA,SAAKC,iBAAL,CAAuBF,GAAvB,EAA4BX,KAA5B,EAAmC,IAAIpB,IAAJ,CAASoB,KAAK,CAACc,aAAN,CAAoBT,KAA7B,EAAoCM,GAAG,CAACI,cAAxC,CAAnC,EAA4FhB,IAA5F;AACH,GAJD;;AAKAP,EAAAA,eAAe,CAACpB,SAAhB,CAA0BoC,iBAA1B,GAA8C,UAAUR,KAAV,EAAiBD,IAAjB,EAAuB;AACjE,SAAKiB,mBAAL,CAAyBjB,IAAzB;AACA,QAAIkB,MAAM,GAAGjB,KAAK,CAACkB,OAAN,CAAc,CAAd,CAAb;AACA,SAAKL,iBAAL,CAAuBI,MAAvB,EAA+BjB,KAA/B,EAAsC,IAAIpB,IAAJ,CAASqC,MAAM,CAACE,aAAhB,EAA+BnB,KAAK,CAACc,aAAN,CAAoBR,MAAnD,CAAtC,EAAkGP,IAAlG;AACH,GAJD;AAKA;AACJ;AACA;AACA;AACA;;;AACIP,EAAAA,eAAe,CAACpB,SAAhB,CAA0ByC,iBAA1B,GAA8C,UAAUO,UAAV,EAAsBpB,KAAtB,EAA6BqB,IAA7B,EAAmCC,QAAnC,EAA6C;AACvF,SAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAGJ,UAAU,CAACK,IAAjC,EAAuCF,EAAE,GAAGC,EAAE,CAACE,MAA/C,EAAuDH,EAAE,EAAzD,EAA6D;AACzD,UAAII,IAAI,GAAGH,EAAE,CAACD,EAAD,CAAb;AACAI,MAAAA,IAAI,CAACC,SAAL,CAAe5B,KAAf;AACA2B,MAAAA,IAAI,CAACE,UAAL,CAAgBC,yBAAhB,CAA0CT,IAA1C,EAAgDM,IAAhD;AACH;AACJ,GAND;AAOA;AACJ;AACA;AACA;AACA;;;AACInC,EAAAA,eAAe,CAACpB,SAAhB,CAA0BqC,iBAA1B,GAA8C,YAAY;AACtD,QAAIT,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAI2B,IAAJ;AACA,QAAII,OAAO,GAAG,CAAd;AACA,SAAKC,OAAL,GAAe,KAAK/B,eAAL,CAAqBI,KAArB,GAA6B,GAA7B,GAAmC,KAAKJ,eAAL,CAAqBE,CAAvE;AACA,SAAK8B,OAAL,GAAe,KAAKhC,eAAL,CAAqBK,MAArB,GAA8B,GAA9B,GAAoC,KAAKL,eAAL,CAAqBG,CAAxE;AACAJ,IAAAA,KAAK,CAACkC,MAAN,GAAeC,IAAI,CAACC,GAAL,CAAS,KAAKnC,eAAL,CAAqBI,KAA9B,EAAqC,KAAKJ,eAAL,CAAqBK,MAA1D,IAAoE,CAApE,GAAwEyB,OAAxE,GACX/B,KAAK,CAACqC,YAAN,CAAmBC,cAAnB,CAAkChC,MADvB,GACgCN,KAAK,CAACqC,YAAN,CAAmBE,YAAnB,CAAgCjC,MAD/E;AAEAN,IAAAA,KAAK,CAACkC,MAAN,GAAgBlC,KAAK,CAACqC,YAAN,CAAmBG,WAAnB,GAAiCxC,KAAK,CAACkC,MAAxC,GAAkD,GAAjE;AACA,SAAKhC,cAAL,CAAoBE,CAApB,GAAwB,KAAK6B,OAAL,GAAejC,KAAK,CAACkC,MAA7C;AACA,SAAKhC,cAAL,CAAoBC,CAApB,GAAwB,KAAK6B,OAAL,GAAehC,KAAK,CAACkC,MAA7C;AACA,SAAKhC,cAAL,CAAoBI,MAApB,GAA6B,IAAIN,KAAK,CAACkC,MAAvC;AACA,SAAKhC,cAAL,CAAoBG,KAApB,GAA4B,IAAIL,KAAK,CAACkC,MAAtC;AACA,SAAKxB,gBAAL,CAAsB,KAAKR,cAA3B;AACAyB,IAAAA,IAAI,GAAG3B,KAAK,CAACyC,YAAb;AACAd,IAAAA,IAAI,CAAC5B,IAAL,GAAY,KAAKG,cAAjB;AACA,SAAKc,mBAAL,CAAyB,KAAKd,cAA9B;AACAyB,IAAAA,IAAI,GAAG3B,KAAK,CAACqC,YAAb;AACAV,IAAAA,IAAI,CAAC5B,IAAL,GAAY,KAAKG,cAAjB;AACH,GAnBD;AAoBA;AACJ;AACA;AACA;AACA;;;AACIV,EAAAA,eAAe,CAACpB,SAAhB,CAA0BsE,OAA1B,GAAoC,YAAY;AAC5C,QAAI1C,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAAC2C,YAAN,CAAmBC,IAAnB,CAAwB5C,KAAK,CAACyC,YAA9B;AACA,QAAI9B,GAAG,GAAGX,KAAK,CAACY,IAAN,CAAW,CAAX,CAAV;AACAD,IAAAA,GAAG,CAACc,IAAJ,CAAS,CAAT,IAAczB,KAAK,CAACyC,YAApB;AACAzC,IAAAA,KAAK,CAACY,IAAN,CAAW,CAAX,IAAgBD,GAAhB;AACAX,IAAAA,KAAK,CAAC6C,cAAN,CAAqBD,IAArB,CAA0B5C,KAAK,CAACqC,YAAhC;AACA,QAAIpB,MAAM,GAAGjB,KAAK,CAACkB,OAAN,CAAc,CAAd,CAAb;AACAD,IAAAA,MAAM,CAACQ,IAAP,CAAY,CAAZ,IAAiBzB,KAAK,CAACqC,YAAvB;AACArC,IAAAA,KAAK,CAACkB,OAAN,CAAc,CAAd,IAAmBD,MAAnB;AACH,GAVD;AAWA;AACJ;AACA;AACA;;;AACIzB,EAAAA,eAAe,CAACpB,SAAhB,CAA0BsC,gBAA1B,GAA6C,UAAUX,IAAV,EAAgB;AACzD;AACA,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIW,GAAG,GAAGX,KAAK,CAACY,IAAN,CAAW,CAAX,CAAV;AACAD,IAAAA,GAAG,CAACI,cAAJ,GAAqBhB,IAAI,CAACO,MAAL,GAAc,CAAnC;AACAK,IAAAA,GAAG,CAACmC,WAAJ,GAAkB/C,IAAI,CAACK,CAAvB;AACAJ,IAAAA,KAAK,CAACY,IAAN,CAAW,CAAX,IAAgBD,GAAhB;AACH,GAPD;AAQA;AACJ;AACA;AACA;;;AACInB,EAAAA,eAAe,CAACpB,SAAhB,CAA0B4C,mBAA1B,GAAgD,UAAUjB,IAAV,EAAgB;AAC5D;AACA,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIiB,MAAM,GAAGjB,KAAK,CAACkB,OAAN,CAAc,CAAd,CAAb;AACAD,IAAAA,MAAM,CAAC8B,YAAP,GAAsBhD,IAAI,CAACI,CAA3B;AACAc,IAAAA,MAAM,CAACE,aAAP,GAAuBpB,IAAI,CAACM,KAA5B;AACAL,IAAAA,KAAK,CAACkB,OAAN,CAAc,CAAd,IAAmBD,MAAnB;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;;;AACIzB,EAAAA,eAAe,CAACpB,SAAhB,CAA0B4E,UAA1B,GAAuC,YAAY;AAC/C,QAAIrB,IAAJ;AACA,QAAI3B,KAAK,GAAG,KAAKA,KAAjB;AACA,SAAKiD,UAAL,GAAkBjD,KAAK,CAACqC,YAAN,CAAmBY,UAArC;AACA,QAAIC,WAAW,GAAGlD,KAAK,CAACmD,QAAN,CAAeC,WAAf,CAA2B;AAAEC,MAAAA,EAAE,EAAErD,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB;AAAzB,KAA3B,CAAlB;AACA,QAAIE,eAAe,GAAGvD,KAAK,CAACmD,QAAN,CAAeC,WAAf,CAA2B;AAAEC,MAAAA,EAAE,EAAErD,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB;AAAzB,KAA3B,CAAtB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGzD,KAAK,CAAC0D,eAAN,CAAsBhC,MAA5C,EAAoD8B,CAAC,GAAGC,GAAxD,EAA6DD,CAAC,EAA9D,EAAkE;AAC9D,WAAKF,OAAL,GAAetD,KAAK,CAACmD,QAAN,CAAeC,WAAf,CAA2B;AAAEC,QAAAA,EAAE,EAAErD,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,WAAnB,GAAiCG;AAAvC,OAA3B,CAAf;AACA7B,MAAAA,IAAI,GAAG3B,KAAK,CAAC0D,eAAN,CAAsBF,CAAtB,CAAP;;AACA,UAAI7B,IAAI,CAACgC,WAAL,KAAqB,YAAzB,EAAuC;AACnC,YAAIhC,IAAI,CAACiC,cAAL,CAAoBvD,KAApB,GAA4B,CAA5B,IAAiCsB,IAAI,CAACW,cAAL,CAAoBjC,KAApB,GAA4B,CAAjE,EAAoE;AAChE,eAAKwD,iBAAL,CAAuBlC,IAAvB,EAA6B6B,CAA7B;AACH;;AACD,YAAI7B,IAAI,CAACmC,OAAL,IAAgBnC,IAAI,CAACoC,kBAAzB,EAA6C;AACzC,eAAKC,eAAL,CAAqBrC,IAArB,EAA2B6B,CAA3B;AACH;AACJ,OAPD,MAQK;AACD,aAAKS,iBAAL,CAAuBtC,IAAvB,EAA6B6B,CAA7B;;AACA,YAAI7B,IAAI,CAACuC,SAAL,CAAe7D,KAAf,GAAuB,CAA3B,EAA8B;AAC1B,eAAK8D,aAAL,CAAmBxC,IAAnB,EAAyB6B,CAAzB,EAA4B7B,IAAI,CAACyC,UAAjC,EAA6C,CAA7C;AACH;;AACD,YAAIzC,IAAI,CAACmC,OAAL,IAAgBnC,IAAI,CAACoC,kBAAzB,EAA6C;AACzC,eAAKM,eAAL,CAAqB1C,IAArB,EAA2B6B,CAA3B;AACH;AACJ;;AACDN,MAAAA,WAAW,CAACoB,WAAZ,CAAwB,KAAKhB,OAA7B;AACH;;AACDJ,IAAAA,WAAW,CAACoB,WAAZ,CAAwB,KAAKhB,OAA7B;AACA5E,IAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqBvE,KAAK,CAACwE,SAA3B,EAAsCtB,WAAtC,EAAmDlD,KAAK,CAACyE,MAAzD,CAAlB;AACA,WAAOlB,eAAP;AACH,GA/BD;;AAgCA/D,EAAAA,eAAe,CAACpB,SAAhB,CAA0B+F,aAA1B,GAA0C,UAAUxC,IAAV,EAAgB+C,KAAhB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqC;AAC3E,QAAI5E,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAI6E,WAAW,GAAG,EAAlB;AACA,QAAIC,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACuC,IAAI,CAACoD,aAAL,CAAmB,CAAnB,EAAsBC,KAAvB,EAA8BrD,IAA9B,CAAxB,EAA6D,KAAKsB,UAAlE,CAAhC;AACA,QAAIgC,QAAQ,GAAG,OAAO,KAAKjD,OAAZ,GAAsB,GAAtB,GAA4B,KAAKC,OAAjC,GAA2C,IAA3C,IACV,KAAKD,OAAL,GAAehC,KAAK,CAACkC,MAAN,GAAe4C,MAAM,CAAC3E,CAD3B,IACgC,GADhC,IACuC,KAAK8B,OAAL,GAAejC,KAAK,CAACkC,MAAN,GAAe4C,MAAM,CAAC1E,CAD5E,CAAf;AAEAyE,IAAAA,WAAW,GAAG;AACV,YAAM7E,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,WAAnB,GAAiCqB,KAD7B;AAEV,WAAKO,QAFK;AAGV,0BAAoBtD,IAAI,CAACuC,SAAL,CAAegB,SAHzB;AAIV,sBAAgBvD,IAAI,CAACuC,SAAL,CAAe7D,KAJrB;AAKV,gBAAUsB,IAAI,CAACuC,SAAL,CAAeiB,KAAf,IAAwBnF,KAAK,CAACoF,UAAN,CAAiBH;AALzC,KAAd;AAOA;AACR;AACA;AACA;AACA;AACA;;AACQ,QAAI3B,OAAO,GAAGtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwBR,WAAxB,CAAd;AACA,SAAKS,mBAAL,CAAyBhC,OAAzB;AACAtD,IAAAA,KAAK,CAACuF,aAAN,CAAoBjB,WAApB,CAAgChB,OAAhC;AACH,GAtBD;;AAuBA9D,EAAAA,eAAe,CAACpB,SAAhB,CAA0BiG,eAA1B,GAA4C,UAAU1C,IAAV,EAAgB+C,KAAhB,EAAuB;AAC/D,QAAI1E,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIwF,WAAJ;AACA,QAAIC,OAAJ;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIb,MAAJ;AACA,QAAIc,KAAK,GAAG,KAAK3C,UAAL,GAAkB,CAAlB,GAAsB,KAAKA,UAAL,GAAkB,GAAxC,GAA8C,KAAKA,UAA/D;AACA,QAAI4C,MAAM,GAAG,QAAb;AACA,QAAI3D,MAAJ;AACA,QAAIH,OAAO,GAAG,CAAd;AACA,QAAI+D,WAAJ;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,cAAc,GAAG,EAArB;AACAA,IAAAA,cAAc,CAAC,CAAD,CAAd,GAAoB,IAApB;AACA,QAAIC,aAAa,GAAGtE,IAAI,CAACuE,oBAAzB;AACA,QAAIC,YAAY,GAAGnG,KAAK,CAACmD,QAAN,CAAeC,WAAf,CAA2B;AAAEC,MAAAA,EAAE,EAAErD,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,YAAnB,GAAkCqB;AAAxC,KAA3B,CAAnB;AACAI,IAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACuC,IAAI,CAACoD,aAAL,CAAmB,CAAnB,EAAsBC,KAAvB,EAA8BrD,IAA9B,CAAxB,EAA6D,KAAKsB,UAAlE,CAA5B;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG9B,IAAI,CAACoD,aAAL,CAAmBrD,MAAzC,EAAiD8B,CAAC,GAAGC,GAArD,EAA0DD,CAAC,EAA3D,EAA+D;AAC3DsC,MAAAA,WAAW,GAAG,KAAd;AACA5D,MAAAA,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAe5D,kBAAkB,CAACqD,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAAvB,EAA8BrD,IAA9B,CAA1C;AACA6D,MAAAA,WAAW,GAAG7D,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBnC,IAApC;AACAa,MAAAA,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAe5D,kBAAkB,CAACqD,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAAvB,EAA8BrD,IAA9B,CAA1C;AACA+D,MAAAA,MAAM,GAAI,KAAK1D,OAAL,GAAeE,MAAM,GAAG4C,MAAM,CAAC3E,CAAhC,GAAsC,CAACwB,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA6BkF,WAAW,CAACnF,KAAZ,GAAoB,CAAjD,GAAqD0B,OAAO,GAAG,CAAhE,IACxCI,IAAI,CAACiE,GAAL,CAASR,KAAK,GAAGzD,IAAI,CAACkE,EAAb,GAAkB,GAA3B,CADwC,IACJ1E,IAAI,CAAC2E,aAAL,KAAuB,QAAvB,GAAkC,CAAlC,GAAsC,CAAC,CADnC,CAA/C;AAEAX,MAAAA,MAAM,GAAI,KAAK1D,OAAL,GAAeC,MAAM,GAAG4C,MAAM,CAAC1E,CAAhC,GAAsC,CAACuB,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA6BkF,WAAW,CAAClF,MAAZ,GAAqB,CAAnD,IACxC6B,IAAI,CAACoE,GAAL,CAASX,KAAK,GAAGzD,IAAI,CAACkE,EAAb,GAAkB,GAA3B,CADwC,IACJ1E,IAAI,CAAC2E,aAAL,KAAuB,QAAvB,GAAkC,CAAlC,GAAsC,CAAC,CADnC,CAA/C;AAEAX,MAAAA,MAAM,IAAKH,WAAW,CAAClF,MAAZ,GAAqB,CAAhC;AACAyF,MAAAA,YAAY,CAACvC,CAAD,CAAZ,GAAkB,KAAKgD,cAAL,CAAoBd,MAApB,EAA4BC,MAA5B,EAAoChE,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,CAApC,EAA2DqC,MAA3D,CAAlB;;AACA,UAAIrC,CAAC,KAAK,CAAN,IAAWyC,aAAa,KAAK,MAAjC,EAAyC;AACrC,aAAK,IAAIQ,CAAC,GAAGjD,CAAb,EAAgBiD,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBA,UAAAA,CAAC,GAAIA,CAAC,KAAK,CAAP,GAAY,CAAZ,GAAiBA,CAAC,KAAKjD,CAAP,GAAaiD,CAAC,GAAG,CAAjB,GAAsBA,CAA1C;;AACA,cAAIT,cAAc,CAACS,CAAD,CAAd,IAAqBjI,SAAS,CAACuH,YAAY,CAACvC,CAAD,CAAb,EAAkBuC,YAAY,CAACU,CAAD,CAA9B,CAAlC,EAAsE;AAClEX,YAAAA,WAAW,GAAG,IAAd;AACAE,YAAAA,cAAc,CAACxC,CAAD,CAAd,GAAoB,KAApB;AACA;AACH,WAJD,MAKK;AACDwC,YAAAA,cAAc,CAACxC,CAAD,CAAd,GAAoB,IAApB;AACH;AACJ;;AACD,YAAIsC,WAAJ,EAAiB;AACb,mBADa,CACH;AACb,SAdoC,CAerC;;;AACA,aAAK,IAAIvE,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG,KAAK3B,oBAA3B,EAAiD0B,EAAE,GAAGC,EAAE,CAACE,MAAzD,EAAiEH,EAAE,EAAnE,EAAuE;AACnE,cAAIxB,IAAI,GAAGyB,EAAE,CAACD,EAAD,CAAb;;AACA,cAAI/C,SAAS,CAACuH,YAAY,CAACvC,CAAD,CAAb,EAAkBzD,IAAlB,CAAb,EAAsC;AAClC+F,YAAAA,WAAW,GAAG,IAAd;AACA;AACH;AACJ;AACJ;;AACD,UAAIA,WAAJ,EAAiB;AACb;AACH;;AACD,WAAKjG,oBAAL,CAA0B+C,IAA1B,CAA+BmD,YAAY,CAACvC,CAAD,CAA3C;AACAiC,MAAAA,OAAO,GAAG,IAAI3G,UAAJ,CAAekB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmBqB,KAAnB,GAA2B,aAA3B,GAA2ClB,CAA1D,EAA6DkC,MAA7D,EAAqEC,MAArE,EAA6EE,MAA7E,EAAqFlE,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBkD,IAA3G,CAAV;AACAxH,MAAAA,WAAW,CAACc,KAAK,CAACmD,QAAP,EAAiBsC,OAAjB,EAA0B9D,IAAI,CAACgF,UAA/B,EAA2ChF,IAAI,CAACgF,UAAL,CAAgBxB,KAAhB,IAAyBnF,KAAK,CAACoF,UAAN,CAAiBwB,SAArF,EAAgGT,YAAhG,EAA8G,KAA9G,EAAqHnG,KAAK,CAACyE,MAA3H,EAAmI,IAAnI,EAAyI,IAAzI,CAAX;AACH;;AACDzE,IAAAA,KAAK,CAACuF,aAAN,CAAoBjB,WAApB,CAAgC6B,YAAhC;AACH,GA7DD;;AA8DA3G,EAAAA,eAAe,CAACpB,SAAhB,CAA0B6F,iBAA1B,GAA8C,UAAUtC,IAAV,EAAgB+C,KAAhB,EAAuB;AACjE,QAAI1E,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIyF,OAAJ;AACA,QAAIvD,MAAJ;AACA,QAAI2E,SAAS,GAAG,EAAhB;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIhC,MAAJ;AACA,QAAIiC,OAAJ;AACA,QAAInB,KAAK,GAAG,KAAK3C,UAAL,GAAkB,CAAlB,GAAsB,KAAKA,UAAL,GAAkB,GAAxC,GAA8C,KAAKA,UAA/D;AACA,QAAIlD,IAAI,GAAG4B,IAAI,CAAC5B,IAAhB;AACA,QAAIiH,EAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,MAAM,GAAG;AACTjC,MAAAA,KAAK,EAAExD,IAAI,CAACiC,cAAL,CAAoBuB,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiBiC,aAD5C;AAEThH,MAAAA,KAAK,EAAEsB,IAAI,CAACiC,cAAL,CAAoBvD;AAFlB,KAAb;AAIA,QAAIiH,aAAJ;AACA,QAAIhE,OAAJ;;AACA,QAAI3B,IAAI,CAACiC,cAAL,CAAoBvD,KAApB,GAA4B,CAAhC,EAAmC;AAC/B,UAAIL,KAAK,CAACuH,aAAN,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,OAApC,EAA6C;AACzC,aAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9E,IAAI,CAACoD,aAAL,CAAmBrD,MAAvC,EAA+C+E,CAAC,EAAhD,EAAoD;AAChDnD,UAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD+B,CAAtD,CAApB;AACAa,UAAAA,aAAa,GAAGhE,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAtD;AACAvF,UAAAA,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAe5D,kBAAkB,CAACqD,IAAI,CAACoD,aAAL,CAAmB0B,CAAnB,EAAsBzB,KAAvB,EAA8BrD,IAA9B,CAA1C;AACA8D,UAAAA,OAAO,GAAG,IAAI9G,YAAJ,CAAiBqB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD+B,CAAtE,EAAyE,aAAzE,EAAwFW,MAAxF,EAAgGzF,IAAI,CAACiC,cAAL,CAAoBvD,KAApH,EAA2H,KAAK2B,OAAhI,EAAyI,KAAKC,OAA9I,EAAuJC,MAAvJ,CAAV;AACAxD,UAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAeuE,UAAf,CAA0BjC,OAA1B,CAAnC,EAAuEzF,KAAK,CAACyE,MAA7E,EAAqF,IAArF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,IAAItF,aAAJ,CAAkB,CAACmI,aAAnB,EAAkC,CAACA,aAAnC,CAArG,EAAwJ,IAAxJ,EAA8J,IAA9J,CAAlB;AACH;;AACD,YAAIpF,MAAM,KAAKlC,KAAK,CAACkC,MAArB,EAA6B;AACzBuD,UAAAA,OAAO,GAAG,IAAI9G,YAAJ,CAAiBqB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD/C,IAAI,CAACoD,aAAL,CAAmBrD,MAAxE,GAAiF,CAAlG,EAAqG,aAArG,EAAoH0F,MAApH,EAA4HzF,IAAI,CAACiC,cAAL,CAAoBvD,KAAhJ,EAAuJ,KAAK2B,OAA5J,EAAqK,KAAKC,OAA1K,EAAmLjC,KAAK,CAACkC,MAAzL,CAAV;AACAxD,UAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAeuE,UAAf,CAA0BjC,OAA1B,CAAnC,EAAuEzF,KAAK,CAACyE,MAA7E,EAAqF,IAArF,EAA2F,GAA3F,EAAgG,GAAhG,EAAqG,IAAItF,aAAJ,CAAkB,CAACmI,aAAnB,EAAkC,CAACA,aAAnC,CAArG,EAAwJ,IAAxJ,EAA8J,IAA9J,CAAlB;AACH;AACJ,OAZD,MAaK;AACD,aAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9E,IAAI,CAACoD,aAAL,CAAmBrD,MAAvC,EAA+C+E,CAAC,EAAhD,EAAoD;AAChDvE,UAAAA,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAe5D,kBAAkB,CAACqD,IAAI,CAACoD,aAAL,CAAmB0B,CAAnB,EAAsBzB,KAAvB,EAA8BrD,IAA9B,CAA1C;AACAmF,UAAAA,SAAS,GAAG,KAAKa,eAAL,CAAqBzF,MAArB,EAA6B,EAA7B,EAAiClC,KAAjC,CAAZ;AACAsD,UAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD+B,CAAtD,CAApB;AACAa,UAAAA,aAAa,GAAGhE,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAtD;AACAhC,UAAAA,OAAO,GAAG,IAAI1G,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD+B,CAApE,EAAuE,aAAvE,EAAsF9E,IAAI,CAACiC,cAAL,CAAoBvD,KAA1G,EAAiHsB,IAAI,CAACiC,cAAL,CAAoBuB,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiBiC,aAA/J,EAA8K,IAA9K,EAAoL,IAApL,EAA0LP,SAA1L,CAAV;AACApI,UAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwBI,OAAxB,CAAnC,EAAqEzF,KAAK,CAACyE,MAA3E,EAAmF,IAAnF,EAAyF,GAAzF,EAA8F,GAA9F,EAAmG,IAAnG,EAAyG6C,aAAzG,EAAwH,IAAxH,CAAlB;AACH;;AACD,YAAIpF,MAAM,KAAKlC,KAAK,CAACkC,MAArB,EAA6B;AACzB4E,UAAAA,SAAS,GAAG,KAAKa,eAAL,CAAqB3H,KAAK,CAACkC,MAA3B,EAAmC,EAAnC,EAAuClC,KAAvC,CAAZ;AACAsD,UAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD/C,IAAI,CAACoD,aAAL,CAAmBrD,MAAzE,CAApB;AACA4F,UAAAA,aAAa,GAAGhE,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAtD;AACAhC,UAAAA,OAAO,GAAG,IAAI1G,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqD/C,IAAI,CAACoD,aAAL,CAAmBrD,MAAvF,EAA+F,aAA/F,EAA8GC,IAAI,CAACiC,cAAL,CAAoBvD,KAAlI,EAAyIsB,IAAI,CAACiC,cAAL,CAAoBuB,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiBiC,aAAvL,EAAsM,IAAtM,EAA4M,IAA5M,EAAkNP,SAAlN,CAAV;AACApI,UAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwBI,OAAxB,CAAnC,EAAqEzF,KAAK,CAACyE,MAA3E,EAAmF,IAAnF,EAAyF,GAAzF,EAA8F,GAA9F,EAAmG,IAAnG,EAAyG6C,aAAzG,EAAwH,IAAxH,CAAlB;AACH;AACJ;AACJ;;AACD,QAAI3F,IAAI,CAACW,cAAL,CAAoBjC,KAApB,GAA4B,CAAhC,EAAmC;AAC/ByE,MAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACuC,IAAI,CAACoD,aAAL,CAAmB,CAAnB,EAAsBC,KAAvB,EAA8BrD,IAA9B,CAAxB,EAA6D,KAAKsB,UAAlE,CAA5B;;AACA,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG7B,IAAI,CAACoD,aAAL,CAAmBrD,MAAvC,EAA+C8B,CAAC,EAAhD,EAAoD;AAChDtB,QAAAA,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAe5D,kBAAkB,CAACqD,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAAvB,EAA8BrD,IAA9B,CAA1C;AACAqF,QAAAA,EAAE,GAAG,KAAKhF,OAAL,GAAeE,MAAM,GAAG4C,MAAM,CAAC3E,CAApC;AACA8G,QAAAA,EAAE,GAAG,KAAKhF,OAAL,GAAeC,MAAM,GAAG4C,MAAM,CAAC1E,CAApC;AACA8G,QAAAA,EAAE,GAAGF,EAAE,GAAIrF,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA8B6B,IAAI,CAACiE,GAAL,CAASR,KAAK,GAAGzD,IAAI,CAACkE,EAAb,GAAkB,GAA3B,CAA9B,IAAkE1E,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAjC,GAAqC,CAAC,CAAxG,CAAX;AACAT,QAAAA,EAAE,GAAGF,EAAE,GAAItF,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA8B6B,IAAI,CAACoE,GAAL,CAASX,KAAK,GAAGzD,IAAI,CAACkE,EAAb,GAAkB,GAA3B,CAA9B,IAAkE1E,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAjC,GAAqC,CAAC,CAAxG,CAAX;AACAf,QAAAA,SAAS,GAAG,OAAOG,EAAP,GAAY,GAAZ,GAAkBC,EAAlB,GAAuB,KAAvB,GAA+BC,EAA/B,GAAoC,GAApC,GAA0CC,EAAtD;AACA,aAAKU,cAAL,CAAoBlG,IAApB,EAA0B+C,KAA1B,EAAiCmC,SAAjC,EAA4C,EAA5C,EAAgDrD,CAAhD;AACH;AACJ;AACJ,GAhED;;AAiEAhE,EAAAA,eAAe,CAACpB,SAAhB,CAA0BuJ,eAA1B,GAA4C,UAAUzF,MAAV,EAAkB4E,SAAlB,EAA6B9G,KAA7B,EAAoC;AAC5E,QAAI8E,MAAJ;AACA,QAAIiC,OAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;;AACA,SAAK,IAAI3D,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGzD,KAAK,CAACqC,YAAN,CAAmB0C,aAAnB,CAAiCrD,MAAvD,EAA+D8B,CAAC,GAAGC,GAAnE,EAAwED,CAAC,EAAzE,EAA6E;AACzEsB,MAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACY,KAAK,CAACqC,YAAN,CAAmB0C,aAAnB,CAAiCvB,CAAjC,EAAoCwB,KAArC,EAA4ChF,KAAK,CAACqC,YAAlD,CAAxB,EAAyF,KAAKY,UAA9F,CAA5B;;AACA,UAAIO,CAAC,GAAG,CAAJ,GAAQC,GAAZ,EAAiB;AACbsD,QAAAA,OAAO,GAAG1H,mBAAmB,CAACD,uBAAuB,CAACY,KAAK,CAACqC,YAAN,CAAmB0C,aAAnB,CAAiCvB,CAAC,GAAG,CAArC,EAAwCwB,KAAzC,EAAgDhF,KAAK,CAACqC,YAAtD,CAAxB,EAA6F,KAAKY,UAAlG,CAA7B;AACH,OAFD,MAGK;AACD8D,QAAAA,OAAO,GAAG1H,mBAAmB,CAACD,uBAAuB,CAACY,KAAK,CAACqC,YAAN,CAAmB0C,aAAnB,CAAiC,CAAjC,EAAoCC,KAArC,EAA4ChF,KAAK,CAACqC,YAAlD,CAAxB,EAAyF,KAAKY,UAA9F,CAA7B;AACH;;AACD+D,MAAAA,EAAE,GAAG,KAAKhF,OAAL,GAAeE,MAAM,GAAG4C,MAAM,CAAC3E,CAApC;AACA8G,MAAAA,EAAE,GAAG,KAAKhF,OAAL,GAAeC,MAAM,GAAG4C,MAAM,CAAC1E,CAApC;AACA8G,MAAAA,EAAE,GAAG,KAAKlF,OAAL,GAAeE,MAAM,GAAG6E,OAAO,CAAC5G,CAArC;AACAgH,MAAAA,EAAE,GAAG,KAAKlF,OAAL,GAAeC,MAAM,GAAG6E,OAAO,CAAC3G,CAArC;AACA0G,MAAAA,SAAS,GAAGA,SAAS,CAACgB,MAAV,CAAiB,CAACtE,CAAC,GAAG,IAAH,GAAU,IAAZ,IAAoB,GAApB,GAA0BwD,EAA1B,GAA+B,GAA/B,GAAqCC,EAArC,GAA0C,GAA1C,GAAgD,IAAhD,GAAuD,GAAvD,GAA6DC,EAA7D,GAAkE,GAAlE,GAAwEC,EAAxE,GAA6E,GAA9F,CAAZ;AACH;;AACD,WAAOL,SAAP;AACH,GAtBD;;AAuBAtH,EAAAA,eAAe,CAACpB,SAAhB,CAA0ByF,iBAA1B,GAA8C,UAAUlC,IAAV,EAAgB+C,KAAhB,EAAuB;AACjE,QAAI1E,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAI+H,YAAJ;AACA,QAAIjD,MAAJ;AACA,QAAIgC,SAAS,GAAG,EAAhB;AACA,QAAID,SAAS,GAAG,EAAhB;AACA,QAAImB,aAAa,GAAG,EAApB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIjB,EAAE,GAAG,KAAKhF,OAAd;AACA,QAAIkF,EAAJ;AACA,QAAID,EAAE,GAAG,KAAKhF,OAAd;AACA,QAAIkF,EAAJ;AACA,QAAIe,cAAJ;AACA,QAAIC,QAAQ,GAAGxG,IAAI,CAACW,cAAL,CAAoBhC,MAAnC;AACA,QAAIP,IAAI,GAAG4B,IAAI,CAAC5B,IAAhB;AACA,QAAI2B,MAAM,GAAGC,IAAI,CAACoD,aAAL,CAAmBrD,MAAhC,CAfiE,CAgBjE;;AACA,SAAK,IAAI8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9B,MAApB,EAA4B8B,CAAC,EAA7B,EAAiC;AAC7BuE,MAAAA,YAAY,GAAGpG,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAArC;AACAF,MAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACuC,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAAvB,EAA8BrD,IAA9B,CAAxB,EAA6D,KAAKsB,UAAlE,CAA5B;AACAiE,MAAAA,EAAE,GAAG,KAAKlF,OAAL,GAAehC,KAAK,CAACkC,MAAN,GAAe4C,MAAM,CAAC3E,CAA1C;AACAgH,MAAAA,EAAE,GAAG,KAAKlF,OAAL,GAAejC,KAAK,CAACkC,MAAN,GAAe4C,MAAM,CAAC1E,CAA1C;AACA,UAAIgI,IAAI,GAAGlB,EAAE,GAAIvF,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA6BwE,MAAM,CAAC3E,CAApC,IAAyCwB,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAC,CAAlC,GAAsC,CAA/E,CAAjB;AACA,UAAIS,IAAI,GAAGlB,EAAE,GAAIxF,IAAI,CAACW,cAAL,CAAoBhC,MAApB,GAA6BwE,MAAM,CAAC1E,CAApC,IAAyCuB,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAC,CAAlC,GAAsC,CAA/E,CAAjB;AACAd,MAAAA,SAAS,GAAG,OAAOE,EAAP,GAAY,GAAZ,GAAkBC,EAAlB,GAAuB,GAAvB,GAA6B,IAA7B,GAAoCC,EAApC,GAAyC,GAAzC,GAA+CC,EAA3D;AACAN,MAAAA,SAAS,GAAG,OAAOK,EAAP,GAAY,GAAZ,GAAkBC,EAAlB,GAAuB,KAAvB,GAA+BiB,IAA/B,GAAsC,GAAtC,GAA4CC,IAAxD;;AACA,UAAI1G,IAAI,CAAC2G,qBAAL,GAA6B,CAA7B,KAAmC3G,IAAI,CAAC4G,cAAL,CAAoBlI,KAApB,GAA4B,CAA5B,IAAiCsB,IAAI,CAAC6G,cAAL,CAAoBnI,KAApB,GAA4B,CAAhG,KACGsB,IAAI,CAAC8G,SAAL,KAAmB,UADtB,IACoCzI,KAAK,CAACuH,aAAN,CAAoB,CAApB,EAAuBC,IAAvB,KAAgC,OADxE,EACiF;AAC7EU,QAAAA,cAAc,GAAG,KAAKQ,iBAAL,CAAuB/G,IAAvB,EAA6BoG,YAA7B,EAA2CC,aAA3C,EAA0DC,aAA1D,CAAjB;AACAD,QAAAA,aAAa,GAAGE,cAAc,CAAC,CAAD,CAA9B;AACAD,QAAAA,aAAa,GAAGC,cAAc,CAAC,CAAD,CAA9B;AACH;;AACD,WAAKL,cAAL,CAAoBlG,IAApB,EAA0B+C,KAA1B,EAAiCmC,SAAjC,EAA4CoB,aAA5C,EAA2DzE,CAA3D;AACA,WAAKmF,cAAL,CAAoBhH,IAApB,EAA0B+C,KAA1B,EAAiCoC,SAAjC,EAA4CkB,aAA5C,EAA2DxE,CAA3D;AACH;AACJ,GAnCD;;AAoCAhE,EAAAA,eAAe,CAACpB,SAAhB,CAA0BsK,iBAA1B,GAA8C,UAAU/G,IAAV,EAAgBoG,YAAhB,EAA8Ba,SAA9B,EAAyCC,SAAzC,EAAoD;AAC9F,QAAI7D,KAAK,GAAG+C,YAAZ;AACA,QAAI5H,CAAJ;AACA,QAAIC,CAAJ;AACA,QAAI0E,MAAJ;AACA,QAAIgE,KAAK,GAAGnH,IAAI,CAACoH,YAAjB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIvC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9E,IAAI,CAAC2G,qBAAzB,EAAgD7B,CAAC,EAAjD,EAAqD;AACjDzB,MAAAA,KAAK,IAAI,CAACrD,IAAI,CAAC8G,SAAL,KAAmB,UAAnB,GAAgC9G,IAAI,CAACsH,gBAArC,GAAwDtH,IAAI,CAACoH,YAAL,CAAkBG,QAA3E,KACJvH,IAAI,CAAC2G,qBAAL,GAA6B,CADzB,CAAT;;AAEA,UAAI/J,MAAM,CAACyG,KAAD,EAAQ8D,KAAR,CAAV,EAA0B;AACtBhE,QAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAAC4F,KAAD,EAAQrD,IAAR,CAAxB,EAAuC,KAAKsB,UAA5C,CAA5B;AACA9C,QAAAA,CAAC,GAAG,KAAK6B,OAAL,GAAe,KAAKhC,KAAL,CAAWkC,MAAX,GAAoB4C,MAAM,CAAC3E,CAA9C;AACAC,QAAAA,CAAC,GAAG,KAAK6B,OAAL,GAAe,KAAKjC,KAAL,CAAWkC,MAAX,GAAoB4C,MAAM,CAAC1E,CAA9C;AACA,YAAI+I,SAAS,GAAGhJ,CAAC,GAAIwB,IAAI,CAAC6G,cAAL,CAAoBlI,MAApB,GAA6BwE,MAAM,CAAC3E,CAApC,IAAyCwB,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAC,CAAlC,GAAsC,CAA/E,CAArB;AACA,YAAIwB,SAAS,GAAGhJ,CAAC,GAAIuB,IAAI,CAAC6G,cAAL,CAAoBlI,MAApB,GAA6BwE,MAAM,CAAC1E,CAApC,IAAyCuB,IAAI,CAACiG,YAAL,KAAsB,QAAtB,GAAiC,CAAC,CAAlC,GAAsC,CAA/E,CAArB;AACAgB,QAAAA,SAAS,GAAGA,SAAS,CAACd,MAAV,CAAiB,MAAM,GAAN,GAAY,KAAK9F,OAAjB,GAA2B,GAA3B,GAAiC,KAAKC,OAAtC,GACvB,IADuB,GAChB9B,CADgB,GACZ,GADY,GACNC,CADX,CAAZ;AAEAyI,QAAAA,SAAS,GAAGA,SAAS,CAACf,MAAV,CAAiB,MAAM,GAAN,GAAY3H,CAAZ,GAAgB,GAAhB,GAAsBC,CAAtB,GAA0B,GAA1B,GAAgC,GAAhC,GAAuC+I,SAAvC,GAAoD,GAApD,GACxBC,SADO,CAAZ;AAEH;AACJ;;AACDJ,IAAAA,SAAS,CAACpG,IAAV,CAAegG,SAAf;AACAI,IAAAA,SAAS,CAACpG,IAAV,CAAeiG,SAAf;AACA,WAAOG,SAAP;AACH,GAzBD;AA0BA;AACJ;AACA;AACA;AACA;AACI;;;AACAxJ,EAAAA,eAAe,CAACpB,SAAhB,CAA0B4F,eAA1B,GAA4C,UAAUrC,IAAV,EAAgB+C,KAAhB,EAAuB;AAC/D,SAAK7E,oBAAL,GAA4B,EAA5B;AACA,QAAIwJ,UAAJ;;AACA,QAAI,KAAKrJ,KAAL,CAAWsJ,YAAf,EAA6B;AACzBD,MAAAA,UAAU,GAAG,KAAKrJ,KAAL,CAAWsJ,YAAX,CAAwBC,YAArC;AACH;;AACD,QAAIvJ,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAI0F,MAAM,GAAG,CAAb;AACA,QAAIC,MAAM,GAAG,CAAb;AACA,QAAIQ,YAAY,GAAGnG,KAAK,CAACmD,QAAN,CAAeC,WAAf,CAA2B;AAAEC,MAAAA,EAAE,EAAErD,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,YAAnB,GAAkCqB;AAAxC,KAA3B,CAAnB;AACA,QAAIe,OAAJ;AACA,QAAIX,MAAJ;AACA,QAAI0E,SAAJ;AACA,QAAIC,WAAJ;AACA,QAAIC,aAAa,GAAG/H,IAAI,CAAC2E,aAAL,KAAuB,QAA3C;AACA,QAAIvE,OAAO,GAAG,CAAd;AACA,QAAI4H,UAAJ;AACA,QAAIC,KAAJ;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAI/D,WAAJ;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIC,cAAc,GAAG,EAArB;AACAA,IAAAA,cAAc,CAAC,CAAD,CAAd,GAAoB,IAApB;AACA,QAAIC,aAAa,GAAGtE,IAAI,CAACuE,oBAAzB;AACA,QAAI4D,aAAa,GAAGnI,IAAI,CAAC8G,SAAL,KAAmB,UAAnB,IAAiC9G,IAAI,CAACoI,cAAL,KAAwB,cAAzD,GAA0E,GAA1E,GAAgF,CAApG;AACA,QAAI7H,MAAM,GAAGlC,KAAK,CAACkC,MAAN,GAAeP,IAAI,CAACW,cAAL,CAAoBhC,MAAhD;AACA4B,IAAAA,MAAM,GAAIwH,aAAD,GAAkB,CAACxH,MAAnB,GAA4BA,MAArC;;AACA,SAAK,IAAIsB,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG9B,IAAI,CAACoD,aAAL,CAAmBrD,MAAzC,EAAiD8B,CAAC,GAAGC,GAArD,EAA0DD,CAAC,EAA3D,EAA+D;AAC3DsC,MAAAA,WAAW,GAAG,KAAd;AACAhB,MAAAA,MAAM,GAAGzF,mBAAmB,CAACD,uBAAuB,CAACuC,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsBwB,KAAtB,GAA8B8E,aAA/B,EAA8CnI,IAA9C,CAAxB,EAA6E,KAAKsB,UAAlF,CAA5B;;AACA,UAAI,CAAC+G,KAAK,CAAClF,MAAM,CAAC3E,CAAR,CAAN,IAAoB,CAAC6J,KAAK,CAAClF,MAAM,CAAC1E,CAAR,CAA9B,EAA0C;AACtCsF,QAAAA,MAAM,GAAG,KAAK1D,OAAL,GAAe,CAACE,MAAM,GAAGP,IAAI,CAACW,cAAL,CAAoBhC,MAA7B,GAAsCyB,OAAvC,IAAkD+C,MAAM,CAAC3E,CAAjF;AACAwF,QAAAA,MAAM,GAAG,KAAK1D,OAAL,GAAe,CAACC,MAAM,GAAGP,IAAI,CAACW,cAAL,CAAoBhC,MAA7B,GAAsCyB,OAAvC,IAAkD+C,MAAM,CAAC1E,CAAjF;AACAyJ,QAAAA,UAAU,GAAGI,UAAU,CAACvE,MAAM,CAACwE,OAAP,CAAe,CAAf,CAAD,CAAV,KAAkCD,UAAU,CAAC,KAAKjI,OAAL,CAAakI,OAAb,CAAqB,CAArB,CAAD,CAA5C,GAAwE,QAAxE,GACPxE,MAAM,GAAG,KAAK1D,OAAd,IAAyB,CAAC0H,aAA3B,IAA8ChE,MAAM,GAAG,KAAK1D,OAAd,IAAyB0H,aAAxE,GAA0F,KAA1F,GAAkG,OADtG;AAEH;;AACDE,MAAAA,KAAK,GAAGjI,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,CAAR;AACAgG,MAAAA,SAAS,GAAGI,KAAK,CAAClD,IAAlB,CAV2D,CAW3D;;AACA,UAAI/E,IAAI,CAACwI,UAAL,IAAmBlE,aAAa,KAAK,MAAzC,EAAiD;AAC7C,YAAImE,YAAY,GAAGzI,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsB4G,YAAzC;AACA,YAAIC,QAAQ,GAAG,KAAK,CAApB;AACA,YAAIhJ,IAAI,GAAG,KAAK,CAAhB;AACA,YAAIiF,aAAa,GAAG3E,IAAI,CAAC2E,aAAzB;AACA,YAAIgE,UAAU,GAAGtK,KAAK,CAACc,aAAN,CAAoBT,KAArC;AACA,YAAIkK,UAAU,GAAGH,YAAY,CAAC1I,MAA9B;;AACA,aAAK,IAAI8I,GAAG,GAAGD,UAAU,GAAG,CAA5B,EAA+BC,GAAG,IAAI,CAAtC,EAAyC,EAAEA,GAA3C,EAAgD;AAC5CH,UAAAA,QAAQ,GAAGD,YAAY,CAACK,SAAb,CAAuB,CAAvB,EAA0BD,GAA1B,IAAiC,KAA5C;AACAnJ,UAAAA,IAAI,GAAGxC,WAAW,CAACwL,QAAD,EAAW1I,IAAI,CAACgF,UAAhB,CAAX,CAAuCtG,KAA9C;;AACA,cAAIqF,MAAM,KAAK4E,UAAU,GAAG,CAAxB,GAA6B5E,MAAM,GAAGrE,IAAI,GAAG,CAAhB,IAAqB,CAArB,IAA0BqE,MAAM,GAAGrE,IAAI,GAAG,CAAhB,IAAqBiJ,UAA5E,GACEhE,aAAa,KAAK,SAAlB,KAAiCZ,MAAM,IAAI4E,UAAU,GAAG,CAAvB,IAA4B5E,MAAM,GAAGrE,IAAT,IAAiBiJ,UAA9C,IAC7B5E,MAAM,IAAI4E,UAAU,GAAG,CAAvB,IAA4B5E,MAAM,GAAGrE,IAAT,IAAiB,CADhD,CAAD,IAC0DiF,aAAa,KAAK,QAAlB,KACtDZ,MAAM,GAAGrE,IAAT,IAAiBiJ,UAAU,GAAG,CAA9B,IAAmC5E,MAAM,GAAGrE,IAAT,IAAiBiJ,UAAU,GAAG,CADX,CAF/D,EAGgF;AAC5Ed,YAAAA,SAAS,GAAGgB,GAAG,KAAKD,UAAU,GAAG,CAArB,GAAyBH,YAAzB,GAAwCC,QAApD;AACAT,YAAAA,KAAK,CAACvI,IAAN,CAAWhB,KAAX,GAAmBxB,WAAW,CAAC2K,SAAD,EAAY7H,IAAI,CAACgF,UAAjB,CAAX,CAAwCtG,KAA3D;AACAuJ,YAAAA,KAAK,CAAClD,IAAN,GAAa8C,SAAb;AACA;AACH;AACJ;AACJ,OAhC0D,CAiC3D;;;AACAzD,MAAAA,YAAY,CAACvC,CAAD,CAAZ,GAAkB,KAAKgD,cAAL,CAAoBd,MAApB,EAA4BC,MAA5B,EAAoCiE,KAApC,EAA2CC,UAA3C,CAAlB;;AACA,UAAIrG,CAAC,KAAK,CAAV,EAAa;AACTiG,QAAAA,WAAW,GAAG/D,MAAd;AACH,OAFD,MAGK,IAAIlC,CAAC,KAAK7B,IAAI,CAACoD,aAAL,CAAmBrD,MAAnB,GAA4B,CAAlC,IAAuCC,IAAI,CAAC8G,SAAL,KAAmB,UAA9D,EAA0E;AAC3EkB,QAAAA,UAAU,GAAG9K,WAAW,CAAC2K,SAAD,EAAY7H,IAAI,CAACgF,UAAjB,CAAX,CAAwCrG,MAArD;AACAqJ,QAAAA,UAAU,IAAIjE,MAAd;AACA8D,QAAAA,SAAS,GAAIG,UAAU,GAAGF,WAAd,GAA6B,EAA7B,GAAkCD,SAA9C;AACH,OA1C0D,CA2C3D;;;AACA,UAAIhG,CAAC,KAAK,CAAN,IAAWyC,aAAa,KAAK,MAAjC,EAAyC;AACrC,aAAK,IAAIQ,CAAC,GAAGjD,CAAb,EAAgBiD,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBA,UAAAA,CAAC,GAAIA,CAAC,KAAK,CAAP,GAAY,CAAZ,GAAkBA,CAAC,KAAKjD,CAAP,GAAaiD,CAAC,GAAG,CAAjB,GAAsBA,CAA3C;;AACA,cAAIT,cAAc,CAACS,CAAD,CAAd,IAAqBjI,SAAS,CAACuH,YAAY,CAACvC,CAAD,CAAb,EAAkBuC,YAAY,CAACU,CAAD,CAA9B,CAAlC,EAAsE;AAClEX,YAAAA,WAAW,GAAG,IAAd;AACAE,YAAAA,cAAc,CAACxC,CAAD,CAAd,GAAoB,KAApB;AACA;AACH,WAJD,MAKK;AACDwC,YAAAA,cAAc,CAACxC,CAAD,CAAd,GAAoB,IAApB;AACH;AACJ;AACJ;;AACD,UAAI,CAACsC,WAAD,IAAgBuD,UAApB,EAAgC;AAC5BvD,QAAAA,WAAW,GAAGtH,SAAS,CAACuH,YAAY,CAACvC,CAAD,CAAb,EAAkB6F,UAAlB,CAAvB;;AACA,YAAIvD,WAAJ,EAAiB;AACb,cAAIzF,KAAK,GAAG,KAAKqK,uBAAL,CAA6BrB,UAA7B,EAAyCtD,YAAY,CAACvC,CAAD,CAArD,CAAZ;;AACA,cAAInD,KAAK,GAAG,CAAZ,EAAe;AACXmJ,YAAAA,SAAS,GAAG/K,QAAQ,CAAC4B,KAAD,EAAQsB,IAAI,CAACoD,aAAL,CAAmBvB,CAAnB,EAAsB4G,YAA9B,EAA4CzI,IAAI,CAACgF,UAAjD,CAApB;AACAb,YAAAA,WAAW,GAAG,KAAd;AACH;AACJ;AACJ;;AACDL,MAAAA,OAAO,GAAG,IAAI3G,UAAJ,CAAekB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmBqB,KAAnB,GAA2B,aAA3B,GAA2ClB,CAA1D,EAA6DkC,MAA7D,EAAqEC,MAArE,EAA6EkE,UAA7E,EAAyFL,SAAzF,EAAoG,EAApG,EAAwG,SAAxG,CAAV;;AACA,UAAI1D,WAAJ,EAAiB;AACb,iBADa,CACH;AACb;;AACD,WAAKjG,oBAAL,CAA0B+C,IAA1B,CAA+BmD,YAAY,CAACvC,CAAD,CAA3C;AACAtE,MAAAA,WAAW,CAACc,KAAK,CAACmD,QAAP,EAAiBsC,OAAjB,EAA0BmE,KAAK,CAACjD,UAAhC,EAA4CiD,KAAK,CAACjD,UAAN,CAAiBxB,KAAjB,IAA0BnF,KAAK,CAACoF,UAAN,CAAiBwB,SAAvF,EAAkGT,YAAlG,EAAgH,KAAhH,EAAuHnG,KAAK,CAACyE,MAA7H,EAAqI,IAArI,EAA2I,IAA3I,CAAX;AACH;;AACD,SAAKnB,OAAL,CAAagB,WAAb,CAAyB6B,YAAzB;AACH,GAtGD;AAuGA;AACJ;AACA;AACA;AACA;;;AACI3G,EAAAA,eAAe,CAACpB,SAAhB,CAA0BsM,uBAA1B,GAAoD,UAAUrB,UAAV,EAAsBsB,SAAtB,EAAiC;AACjF,QAAIC,QAAQ,GAAGvB,UAAU,CAAClJ,CAA1B;AACA,QAAI0K,QAAQ,GAAGD,QAAQ,GAAGvB,UAAU,CAAChJ,KAArC;AACA,QAAIyK,OAAO,GAAGH,SAAS,CAACxK,CAAxB;AACA,QAAI4K,OAAO,GAAGD,OAAO,GAAGH,SAAS,CAACtK,KAAlC;AACA,QAAIA,KAAK,GAAG,CAAZ;;AACA,QAAIyK,OAAO,GAAGF,QAAV,IAAsBE,OAAO,GAAGD,QAAhC,IAA4CE,OAAO,GAAGF,QAA1D,EAAoE;AAChExK,MAAAA,KAAK,GAAG0K,OAAO,GAAGF,QAAlB;AACH,KAFD,MAGK,IAAIC,OAAO,GAAGF,QAAV,IAAsBE,OAAO,GAAGD,QAAhC,IAA4CE,OAAO,GAAGF,QAA1D,EAAoE;AACrExK,MAAAA,KAAK,GAAG,CAAR;AACH,KAFI,MAGA,IAAI0K,OAAO,GAAGH,QAAV,IAAsBG,OAAO,GAAGF,QAAhC,IAA4CC,OAAO,GAAGF,QAA1D,EAAoE;AACrEvK,MAAAA,KAAK,GAAGuK,QAAQ,GAAGE,OAAnB;AACH,KAFI,MAGA,IAAIC,OAAO,GAAGH,QAAV,IAAsBG,OAAO,GAAGF,QAAhC,IAA4CC,OAAO,GAAGF,QAA1D,EAAoE;AACrEvK,MAAAA,KAAK,GAAGuK,QAAQ,GAAGE,OAAnB;AACH;;AACD,WAAOzK,KAAP;AACH,GAnBD;AAoBA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIb,EAAAA,eAAe,CAACpB,SAAhB,CAA0BoI,cAA1B,GAA2C,UAAUd,MAAV,EAAkBC,MAAlB,EAA0BiE,KAA1B,EAAiC/D,MAAjC,EAAyC;AAChF,QAAIA,MAAM,KAAK,QAAf,EAAyB;AACrBH,MAAAA,MAAM,IAAKkE,KAAK,CAACvI,IAAN,CAAWhB,KAAX,GAAmB,CAA9B;AACH,KAFD,MAGK,IAAIwF,MAAM,KAAK,KAAf,EAAsB;AACvBH,MAAAA,MAAM,IAAIkE,KAAK,CAACvI,IAAN,CAAWhB,KAArB;AACH,KAFI,MAGA;AACDqF,MAAAA,MAAM,GAAGA,MAAT;AACH;;AACDC,IAAAA,MAAM,IAAKiE,KAAK,CAACvI,IAAN,CAAWf,MAAX,GAAoB,CAA/B;AACA,WAAO,IAAItB,IAAJ,CAAS0G,MAAT,EAAiBC,MAAjB,EAAyBiE,KAAK,CAACvI,IAAN,CAAWhB,KAApC,EAA2CuJ,KAAK,CAACvI,IAAN,CAAWf,MAAtD,CAAP;AACH,GAZD;;AAaAd,EAAAA,eAAe,CAACpB,SAAhB,CAA0ByJ,cAA1B,GAA2C,UAAUlG,IAAV,EAAgB+C,KAAhB,EAAuBsG,aAAvB,EAAsC/C,aAAtC,EAAqDgD,SAArD,EAAgE;AACvG,QAAIC,WAAJ;AACA,QAAIlL,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAIgJ,SAAJ;AACA,QAAI1F,OAAJ;;AACA,QAAI3B,IAAI,CAACW,cAAL,CAAoBjC,KAApB,GAA4B,CAAhC,EAAmC;AAC/BiD,MAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAAtD,CAApB;AACAjC,MAAAA,SAAS,GAAG1F,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAlD;AACAyD,MAAAA,WAAW,GAAG,IAAInM,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAApE,EAA+E,aAA/E,EAA8FtJ,IAAI,CAACW,cAAL,CAAoBjC,KAAlH,EAAyHsB,IAAI,CAACW,cAAL,CAAoB6C,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiB4F,aAAvK,EAAsL,IAAtL,EAA4L,IAA5L,EAAkMA,aAAlM,CAAd;AACA;AACZ;AACA;AACA;AACA;AACA;;AACY1H,MAAAA,OAAO,GAAGtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwB6F,WAAxB,CAAV;AACA,WAAK5F,mBAAL,CAAyBhC,OAAzB;AACA5E,MAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqBvE,KAAK,CAACuF,aAA3B,EAA0CjC,OAA1C,EAAmDtD,KAAK,CAACyE,MAAzD,EAAiE,IAAjE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,IAAjF,EAAuFuE,SAAvF,CAAlB;AACH;;AACD,QAAIrH,IAAI,CAAC6G,cAAL,CAAoBnI,KAApB,GAA4B,CAAhC,EAAmC;AAC/BiD,MAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAAtD,CAApB;AACAjC,MAAAA,SAAS,GAAG1F,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAlD;AACAyD,MAAAA,WAAW,GAAG,IAAInM,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAApE,EAA+E,aAA/E,EAA8FtJ,IAAI,CAAC6G,cAAL,CAAoBnI,KAAlH,EAAyHsB,IAAI,CAAC6G,cAAL,CAAoBrD,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiB6C,aAAvK,EAAsL,IAAtL,EAA4L,IAA5L,EAAkMA,aAAlM,CAAd;AACA;AACZ;AACA;AACA;AACA;AACA;;AACY3E,MAAAA,OAAO,GAAGtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwB6F,WAAxB,CAAV;AACA,WAAK5F,mBAAL,CAAyBhC,OAAzB;AACA5E,MAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqBvE,KAAK,CAACuF,aAA3B,EAA0CjC,OAA1C,EAAmDtD,KAAK,CAACyE,MAAzD,EAAiE,IAAjE,EAAuE,GAAvE,EAA4E,GAA5E,EAAiF,IAAjF,EAAuFuE,SAAvF,CAAlB;AACH;AACJ,GAjCD;;AAkCAxJ,EAAAA,eAAe,CAACpB,SAAhB,CAA0BuK,cAA1B,GAA2C,UAAUhH,IAAV,EAAgB+C,KAAhB,EAAuBoC,SAAvB,EAAkC8B,SAAlC,EAA6CqC,SAA7C,EAAwD;AAC/F,QAAIjL,KAAK,GAAG,KAAKA,KAAjB;AACA,QAAImL,WAAJ;AACA,QAAInC,SAAJ;AACA,QAAI1F,OAAJ;;AACA,QAAI3B,IAAI,CAACiC,cAAL,CAAoBvD,KAApB,GAA4B,CAAhC,EAAmC;AAC/BiD,MAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAAtD,CAApB;AACAjC,MAAAA,SAAS,GAAG1F,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAlD;AACA0D,MAAAA,WAAW,GAAG,IAAIpM,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAApE,EAA+E,aAA/E,EAA8FtJ,IAAI,CAACiC,cAAL,CAAoBvD,KAAlH,EAAyHsB,IAAI,CAACiC,cAAL,CAAoBuB,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiBiC,aAAvK,EAAsL,IAAtL,EAA4L1F,IAAI,CAACiC,cAAL,CAAoBsB,SAAhN,EAA2N4B,SAA3N,CAAd;AACApI,MAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwB8F,WAAxB,CAAnC,EAAyEnL,KAAK,CAACyE,MAA/E,EAAuF,IAAvF,EAA6F,GAA7F,EAAkG,GAAlG,EAAuG,IAAvG,EAA6GuE,SAA7G,CAAlB;AACH;;AACD,QAAIrH,IAAI,CAAC4G,cAAL,CAAoBlI,KAApB,GAA4B,CAAhC,EAAmC;AAC/BiD,MAAAA,OAAO,GAAGhE,UAAU,CAACU,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAAtD,CAApB;AACAjC,MAAAA,SAAS,GAAG1F,OAAO,GAAGA,OAAO,CAACmE,YAAR,CAAqB,GAArB,CAAH,GAA+B,IAAlD;AACA0D,MAAAA,WAAW,GAAG,IAAIpM,UAAJ,CAAeiB,KAAK,CAACsD,OAAN,CAAcD,EAAd,GAAmB,iBAAnB,GAAuCqB,KAAvC,GAA+C,GAA/C,GAAqDuG,SAApE,EAA+E,aAA/E,EAA8FtJ,IAAI,CAAC4G,cAAL,CAAoBlI,KAAlH,EAAyHsB,IAAI,CAAC4G,cAAL,CAAoBpD,KAApB,IAA6BnF,KAAK,CAACoF,UAAN,CAAiBgG,aAAvK,EAAsL,IAAtL,EAA4LzJ,IAAI,CAAC4G,cAAL,CAAoBrD,SAAhN,EAA2N0D,SAA3N,CAAd;AACAlK,MAAAA,kBAAkB,CAACsB,KAAK,CAACuE,YAAP,EAAqB,KAAKjB,OAA1B,EAAmCtD,KAAK,CAACmD,QAAN,CAAekC,QAAf,CAAwB8F,WAAxB,CAAnC,EAAyEnL,KAAK,CAACyE,MAA/E,EAAuF,IAAvF,EAA6F,GAA7F,EAAkG,GAAlG,EAAuG,IAAvG,EAA6GuE,SAA7G,CAAlB;AACH;AACJ,GAjBD;;AAkBAxJ,EAAAA,eAAe,CAACpB,SAAhB,CAA0BkH,mBAA1B,GAAgD,UAAUhC,OAAV,EAAmB;AAC/D,QAAIA,OAAJ,EAAa;AACTA,MAAAA,OAAO,CAAC+H,YAAR,CAAqB,OAArB,EAA8B,qBAA9B;AACH;AACJ,GAJD;;AAKA,SAAO7L,eAAP;AACH,CAjlBoC,CAilBnCP,QAjlBmC,CAArC;;AAklBA,SAASO,eAAT","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { valueToCoefficient, inside, isOverlap, textTrim } from '../../common/utils/helper';\nimport { appendChildElement } from '../../common/utils/helper';\nimport { CircleOption } from '../../common/utils/helper';\nimport { Size, measureText, TextOption, PathOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from '../series/line-base';\nimport { textElement, ChartLocation, valueToPolarCoefficient, CoefficientToVector, getElement } from '../../common/utils/helper';\n/**\n * Specifies the Polar Axis Layout.\n */\nvar axisPadding = 10;\nvar PolarRadarPanel = /** @class */ (function (_super) {\n    __extends(PolarRadarPanel, _super);\n    function PolarRadarPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleAxisLabelRect = [];\n        return _this;\n    }\n    /**\n     * Measure the polar radar axis size.\n     * @return {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        this.initialClipRect = rect;\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        //Measure axis size calculation\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.calculateAxisSize();\n    };\n    PolarRadarPanel.prototype.measureRowAxis = function (chart, rect) {\n        this.calculateRowSize(rect);\n        var row = chart.rows[0];\n        this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n    };\n    PolarRadarPanel.prototype.measureColumnAxis = function (chart, rect) {\n        this.calculateColumnSize(rect);\n        var column = chart.columns[0];\n        this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n    };\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measureDefinition = function (definition, chart, size, clipRect) {\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n        }\n    };\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.calculateAxisSize = function () {\n        var chart = this.chart;\n        var axis;\n        var padding = 5;\n        this.centerX = this.initialClipRect.width * 0.5 + this.initialClipRect.x;\n        this.centerY = this.initialClipRect.height * 0.5 + this.initialClipRect.y;\n        chart.radius = Math.min(this.initialClipRect.width, this.initialClipRect.height) / 2 - padding -\n            chart.primaryXAxis.majorTickLines.height - chart.primaryXAxis.maxLabelSize.height;\n        chart.radius = (chart.primaryXAxis.coefficient * chart.radius) / 100;\n        this.seriesClipRect.y = this.centerY - chart.radius;\n        this.seriesClipRect.x = this.centerX - chart.radius;\n        this.seriesClipRect.height = 2 * chart.radius;\n        this.seriesClipRect.width = 2 * chart.radius;\n        this.calculateRowSize(this.seriesClipRect);\n        axis = chart.primaryYAxis;\n        axis.rect = this.seriesClipRect;\n        this.calculateColumnSize(this.seriesClipRect);\n        axis = chart.primaryXAxis;\n        axis.rect = this.seriesClipRect;\n    };\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.measure = function () {\n        var chart = this.chart;\n        chart.verticalAxes.push(chart.primaryYAxis);\n        var row = chart.rows[0];\n        row.axes[0] = chart.primaryYAxis;\n        chart.rows[0] = row;\n        chart.horizontalAxes.push(chart.primaryXAxis);\n        var column = chart.columns[0];\n        column.axes[0] = chart.primaryXAxis;\n        chart.columns[0] = column;\n    };\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    PolarRadarPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row = chart.rows[0];\n        row.computedHeight = rect.height / 2;\n        row.computedTop = rect.y;\n        chart.rows[0] = row;\n    };\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    PolarRadarPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column = chart.columns[0];\n        column.computedLeft = rect.x;\n        column.computedWidth = rect.width;\n        chart.columns[0] = column;\n    };\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    PolarRadarPanel.prototype.renderAxes = function () {\n        var axis;\n        var chart = this.chart;\n        this.startAngle = chart.primaryXAxis.startAngle;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i });\n            axis = chart.axisCollections[i];\n            if (axis.orientation === 'Horizontal') {\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i);\n                }\n            }\n            else {\n                this.drawYAxisGridLine(axis, i);\n                if (axis.lineStyle.width > 0) {\n                    this.drawYAxisLine(axis, i, axis.plotOffset, 0);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i);\n                }\n            }\n            axisElement.appendChild(this.element);\n        }\n        axisElement.appendChild(this.element);\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    PolarRadarPanel.prototype.drawYAxisLine = function (axis, index, plotX, plotY) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        var axisLine = 'M ' + this.centerX + ' ' + this.centerY + 'L ' +\n            (this.centerX + chart.radius * vector.x) + ' ' + (this.centerY + chart.radius * vector.y);\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': axisLine,\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        /**\n         * I252450\n         * When we click the center of the marker which is plotted in the axis line, selection did not work is fixed\n         * Cause: Instead of marker id, axis  line id is obtained while clicking\n         * Fix: Pointer events set to none for axis lines\n         */\n        var element = chart.renderer.drawPath(optionsLine);\n        this.setPointerEventNone(element);\n        chart.yAxisElements.appendChild(element);\n    };\n    PolarRadarPanel.prototype.drawYAxisLabels = function (axis, index) {\n        var chart = this.chart;\n        var elementSize;\n        var options;\n        var pointX = 0;\n        var pointY = 0;\n        var vector;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var anchor = 'middle';\n        var radius;\n        var padding = 5;\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            elementSize = axis.visibleLabels[i].size;\n            radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n            pointX = (this.centerX + radius * vector.x) + ((axis.majorTickLines.height + elementSize.width / 2 + padding / 2)\n                * (Math.cos(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY = (this.centerY + radius * vector.y) + ((axis.majorTickLines.height + elementSize.height / 2)\n                * (Math.sin(angle * Math.PI / 180)) * (axis.labelPosition === 'Inside' ? 1 : -1));\n            pointY += (elementSize.height / 4);\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, axis.visibleLabels[i], anchor);\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : (j === i) ? (j - 1) : j;\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n                if (isIntersect) {\n                    continue; // If the label is intersect, the label render is ignored.\n                }\n                // To check Y axis label with visible X axis label\n                for (var _i = 0, _a = this.visibleAxisLabelRect; _i < _a.length; _i++) {\n                    var rect = _a[_i];\n                    if (isOverlap(labelRegions[i], rect)) {\n                        isIntersect = true;\n                        break;\n                    }\n                }\n            }\n            if (isIntersect) {\n                continue;\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n            textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n        }\n        chart.yAxisElements.appendChild(labelElement);\n    };\n    PolarRadarPanel.prototype.drawYAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var options;\n        var radius;\n        var majorTick = '';\n        var majorGrid = '';\n        var vector;\n        var vector2;\n        var angle = this.startAngle < 0 ? this.startAngle + 360 : this.startAngle;\n        var rect = axis.rect;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var border = {\n            color: axis.majorGridLines.color || chart.themeStyle.majorGridLine,\n            width: axis.majorGridLines.width\n        };\n        var previousValue;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            if (chart.visibleSeries[0].type === 'Polar') {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('r') : null;\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n                if (radius !== chart.radius) {\n                    options = new CircleOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length + 1, 'transparent', border, axis.majorGridLines.width, this.centerX, this.centerY, chart.radius);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawCircle(options), chart.redraw, true, 'r', 'r', new ChartLocation(+previousValue, +previousValue), null, true);\n                }\n            }\n            else {\n                for (var j = 0; j < axis.visibleLabels.length; j++) {\n                    radius = chart.radius * valueToCoefficient(axis.visibleLabels[j].value, axis);\n                    majorGrid = this.renderRadarGrid(radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + j);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + j, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n                if (radius !== chart.radius) {\n                    majorGrid = this.renderRadarGrid(chart.radius, '', chart);\n                    element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length);\n                    previousValue = element ? element.getAttribute('d') : null;\n                    options = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + axis.visibleLabels.length, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, null, majorGrid);\n                    appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(options), chart.redraw, true, 'x', 'y', null, previousValue, true);\n                }\n            }\n        }\n        if (axis.majorTickLines.width > 0) {\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[0].value, axis), this.startAngle);\n            for (var i = 0; i < axis.visibleLabels.length; i++) {\n                radius = chart.radius * valueToCoefficient(axis.visibleLabels[i].value, axis);\n                x1 = this.centerX + radius * vector.x;\n                y1 = this.centerY + radius * vector.y;\n                x2 = x1 + (axis.majorTickLines.height * (Math.cos(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                y2 = y1 + (axis.majorTickLines.height * (Math.sin(angle * Math.PI / 180)) * (axis.tickPosition === 'Inside' ? 1 : -1));\n                majorTick = 'M ' + x1 + ' ' + y1 + ' L ' + x2 + ' ' + y2;\n                this.renderTickLine(axis, index, majorTick, '', i);\n            }\n        }\n    };\n    PolarRadarPanel.prototype.renderRadarGrid = function (radius, majorGrid, chart) {\n        var vector;\n        var vector2;\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0, len = chart.primaryXAxis.visibleLabels.length; i < len; i++) {\n            vector = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i].value, chart.primaryXAxis), this.startAngle);\n            if (i + 1 < len) {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[i + 1].value, chart.primaryXAxis), this.startAngle);\n            }\n            else {\n                vector2 = CoefficientToVector(valueToPolarCoefficient(chart.primaryXAxis.visibleLabels[0].value, chart.primaryXAxis), this.startAngle);\n            }\n            x1 = this.centerX + radius * vector.x;\n            y1 = this.centerY + radius * vector.y;\n            x2 = this.centerX + radius * vector2.x;\n            y2 = this.centerY + radius * vector2.y;\n            majorGrid = majorGrid.concat((i ? 'L ' : 'M ') + ' ' + x1 + ' ' + y1 + ' ' + 'L ' + ' ' + x2 + ' ' + y2 + ' ');\n        }\n        return majorGrid;\n    };\n    PolarRadarPanel.prototype.drawXAxisGridLine = function (axis, index) {\n        var chart = this.chart;\n        var tempInterval;\n        var vector;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGirdLine = '';\n        var minorTickLine = '';\n        var x1 = this.centerX;\n        var x2;\n        var y1 = this.centerY;\n        var y2;\n        var minorDirection;\n        var tickSize = axis.majorTickLines.height;\n        var rect = axis.rect;\n        var length = axis.visibleLabels.length;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = axis.visibleLabels[i].value;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value, axis), this.startAngle);\n            x2 = this.centerX + chart.radius * vector.x;\n            y2 = this.centerY + chart.radius * vector.y;\n            var xLoc = x2 + (axis.majorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n            var yLoc = y2 + (axis.majorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n            majorGrid = 'M ' + x1 + ' ' + y1 + ' ' + 'L ' + x2 + ' ' + y2;\n            majorTick = 'M ' + x2 + ' ' + y2 + ' L ' + xLoc + ' ' + yLoc;\n            if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)\n                && axis.valueType !== 'Category' && chart.visibleSeries[0].type !== 'Radar') {\n                minorDirection = this.drawAxisMinorLine(axis, tempInterval, minorGirdLine, minorTickLine);\n                minorGirdLine = minorDirection[0];\n                minorTickLine = minorDirection[1];\n            }\n            this.renderTickLine(axis, index, majorTick, minorTickLine, i);\n            this.renderGridLine(axis, index, majorGrid, minorGirdLine, i);\n        }\n    };\n    PolarRadarPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, minorGird, minorTick) {\n        var value = tempInterval;\n        var x;\n        var y;\n        var vector;\n        var range = axis.visibleRange;\n        var direction = [];\n        for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n            value += (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval) /\n                (axis.minorTicksPerInterval + 1);\n            if (inside(value, range)) {\n                vector = CoefficientToVector(valueToPolarCoefficient(value, axis), this.startAngle);\n                x = this.centerX + this.chart.radius * vector.x;\n                y = this.centerY + this.chart.radius * vector.y;\n                var tickXSize = x + (axis.minorTickLines.height * vector.x * (axis.tickPosition === 'Inside' ? -1 : 1));\n                var tickYSize = y + (axis.minorTickLines.height * vector.y * (axis.tickPosition === 'Inside' ? -1 : 1));\n                minorGird = minorGird.concat('M' + ' ' + this.centerX + ' ' + this.centerY\n                    + 'L ' + x + ' ' + y);\n                minorTick = minorTick.concat('M' + ' ' + x + ' ' + y + 'L' + ' ' + (tickXSize) + ' ' +\n                    (tickYSize));\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To render the axis label.\n     * @return {void}\n     * @private\n     */\n    //tslint:disable-next-line:max-func-body-length\n    PolarRadarPanel.prototype.drawXAxisLabels = function (axis, index) {\n        this.visibleAxisLabelRect = [];\n        var legendRect;\n        if (this.chart.legendModule) {\n            legendRect = this.chart.legendModule.legendBounds;\n        }\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var options;\n        var vector;\n        var labelText;\n        var firstLabelX;\n        var islabelInside = axis.labelPosition === 'Inside';\n        var padding = 5;\n        var lastLabelX;\n        var label;\n        var textAnchor = '';\n        var isIntersect;\n        var labelRegions = [];\n        var isLabelVisible = [];\n        isLabelVisible[0] = true;\n        var intersectType = axis.labelIntersectAction;\n        var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n        var radius = chart.radius + axis.majorTickLines.height;\n        radius = (islabelInside) ? -radius : radius;\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isIntersect = false;\n            vector = CoefficientToVector(valueToPolarCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis), this.startAngle);\n            if (!isNaN(vector.x) && !isNaN(vector.y)) {\n                pointX = this.centerX + (radius + axis.majorTickLines.height + padding) * vector.x;\n                pointY = this.centerY + (radius + axis.majorTickLines.height + padding) * vector.y;\n                textAnchor = parseFloat(pointX.toFixed(1)) === parseFloat(this.centerX.toFixed(1)) ? 'middle' :\n                    ((pointX < this.centerX && !islabelInside) || (pointX > this.centerX && islabelInside)) ? 'end' : 'start';\n            }\n            label = axis.visibleLabels[i];\n            labelText = label.text;\n            // to trim axis labels based on available size\n            if (axis.enableTrim || intersectType === 'Trim') {\n                var originalText = axis.visibleLabels[i].originalText;\n                var trimText = void 0;\n                var size = void 0;\n                var labelPosition = axis.labelPosition;\n                var chartWidth = chart.availableSize.width;\n                var textLength = originalText.length;\n                for (var i_1 = textLength - 1; i_1 >= 0; --i_1) {\n                    trimText = originalText.substring(0, i_1) + '...';\n                    size = measureText(trimText, axis.labelStyle).width;\n                    if (pointX === chartWidth / 2 ? (pointX - size / 2 >= 0 && pointX + size / 2 <= chartWidth) :\n                        ((labelPosition === 'Outside' && ((pointX >= chartWidth / 2 && pointX + size <= chartWidth) ||\n                            (pointX <= chartWidth / 2 && pointX - size >= 0))) || (labelPosition === 'Inside' &&\n                            (pointX + size <= chartWidth / 2 || pointX - size >= chartWidth / 2)))) {\n                        labelText = i_1 === textLength - 1 ? originalText : trimText;\n                        label.size.width = measureText(labelText, axis.labelStyle).width;\n                        label.text = labelText;\n                        break;\n                    }\n                }\n            }\n            // fix for label style not working in axisLabelRender event issue\n            labelRegions[i] = this.getLabelRegion(pointX, pointY, label, textAnchor);\n            if (i === 0) {\n                firstLabelX = pointX;\n            }\n            else if (i === axis.visibleLabels.length - 1 && axis.valueType !== 'Category') {\n                lastLabelX = measureText(labelText, axis.labelStyle).height;\n                lastLabelX += pointX;\n                labelText = (lastLabelX > firstLabelX) ? '' : labelText;\n            }\n            // Label intersect action (Hide) perform here\n            if (i !== 0 && intersectType === 'Hide') {\n                for (var j = i; j >= 0; j--) {\n                    j = (j === 0) ? 0 : ((j === i) ? (j - 1) : j);\n                    if (isLabelVisible[j] && isOverlap(labelRegions[i], labelRegions[j])) {\n                        isIntersect = true;\n                        isLabelVisible[i] = false;\n                        break;\n                    }\n                    else {\n                        isLabelVisible[i] = true;\n                    }\n                }\n            }\n            if (!isIntersect && legendRect) {\n                isIntersect = isOverlap(labelRegions[i], legendRect);\n                if (isIntersect) {\n                    var width = this.getAvailableSpaceToTrim(legendRect, labelRegions[i]);\n                    if (width > 0) {\n                        labelText = textTrim(width, axis.visibleLabels[i].originalText, axis.labelStyle);\n                        isIntersect = false;\n                    }\n                }\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, textAnchor, labelText, '', 'central');\n            if (isIntersect) {\n                continue; // If the label is intersect, the label render is ignored.\n            }\n            this.visibleAxisLabelRect.push(labelRegions[i]);\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n        }\n        this.element.appendChild(labelElement);\n    };\n    /**\n     * To get available space to trim.\n     * @param legendRect\n     * @param labelRect\n     */\n    PolarRadarPanel.prototype.getAvailableSpaceToTrim = function (legendRect, labelRect) {\n        var legendX1 = legendRect.x;\n        var legendX2 = legendX1 + legendRect.width;\n        var labelX1 = labelRect.x;\n        var labelX2 = labelX1 + labelRect.width;\n        var width = 0;\n        if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 > legendX2) {\n            width = labelX2 - legendX2;\n        }\n        else if (labelX1 > legendX1 && labelX1 < legendX2 && labelX2 < legendX2) {\n            width = 0;\n        }\n        else if (labelX2 > legendX1 && labelX2 < legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        else if (labelX2 > legendX1 && labelX2 > legendX2 && labelX1 < legendX1) {\n            width = legendX1 - labelX1;\n        }\n        return width;\n    };\n    /**\n     * Getting axis label bounds\n     * @param pointX\n     * @param pointY\n     * @param label\n     * @param anchor\n     */\n    PolarRadarPanel.prototype.getLabelRegion = function (pointX, pointY, label, anchor) {\n        if (anchor === 'middle') {\n            pointX -= (label.size.width / 2);\n        }\n        else if (anchor === 'end') {\n            pointX -= label.size.width;\n        }\n        else {\n            pointX = pointX;\n        }\n        pointY -= (label.size.height / 2);\n        return new Rect(pointX, pointY, label.size.width, label.size.height);\n    };\n    PolarRadarPanel.prototype.renderTickLine = function (axis, index, majorTickLine, minorTickLine, gridIndex) {\n        var tickOptions;\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (axis.majorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MajorTickLine_' + index + '_' + gridIndex, 'transparent', axis.majorTickLines.width, axis.majorTickLines.color || chart.themeStyle.majorTickLine, null, null, majorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorTickLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            tickOptions = new PathOption(chart.element.id + '_MinorTickLine_' + index + '_' + gridIndex, 'transparent', axis.minorTickLines.width, axis.minorTickLines.color || chart.themeStyle.minorTickLine, null, null, minorTickLine);\n            /**\n             * I252450\n             * When we click the center of the marker which is plotted in the axis, selection did not work is fixed\n             * Cause: Instead of marker id, axis Tick line id is obtained while clicking\n             * Fix: Pointer events set to none for tick lines\n             */\n            element = chart.renderer.drawPath(tickOptions);\n            this.setPointerEventNone(element);\n            appendChildElement(chart.enableCanvas, chart.yAxisElements, element, chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.renderGridLine = function (axis, index, majorGrid, minorGird, gridIndex) {\n        var chart = this.chart;\n        var gridOptions;\n        var direction;\n        var element;\n        if (axis.majorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MajorGridLine_' + index + '_' + gridIndex, 'transparent', axis.majorGridLines.width, axis.majorGridLines.color || chart.themeStyle.majorGridLine, null, axis.majorGridLines.dashArray, majorGrid);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n        if (axis.minorGridLines.width > 0) {\n            element = getElement(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            gridOptions = new PathOption(chart.element.id + '_MinorGridLine_' + index + '_' + gridIndex, 'transparent', axis.minorGridLines.width, axis.minorGridLines.color || chart.themeStyle.minorGridLine, null, axis.minorGridLines.dashArray, minorGird);\n            appendChildElement(chart.enableCanvas, this.element, chart.renderer.drawPath(gridOptions), chart.redraw, true, 'x', 'y', null, direction);\n        }\n    };\n    PolarRadarPanel.prototype.setPointerEventNone = function (element) {\n        if (element) {\n            element.setAttribute('style', 'pointer-events:none');\n        }\n    };\n    return PolarRadarPanel;\n}(LineBase));\nexport { PolarRadarPanel };\n"]},"metadata":{},"sourceType":"module"}