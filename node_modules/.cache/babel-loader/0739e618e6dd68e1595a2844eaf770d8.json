{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power GSM\\\\Desktop\\\\React-Fito-v1.0-9-April-2021V\\\\React-Fito-v1.0-9-April-2021V\\\\react-fito\\\\src\\\\jsx\\\\components\\\\Forms\\\\Pickers\\\\LinearGradientPicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { GradientPickerPopover } from \"react-linear-gradient-picker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst rgbToRgba = (rgb, a = 1) => rgb.replace(\"rgb(\", \"rgba(\").replace(\")\", `, ${a})`);\n\nconst WrappedSketchPicker = ({\n  onSelect,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(SketchPicker, { ...rest,\n    color: rgbToRgba(rest.color, rest.opacity),\n    onChange: c => {\n      const {\n        r,\n        g,\n        b,\n        a\n      } = c.rgb;\n      onSelect(`rgb(${r}, ${g}, ${b})`, a);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n};\n\n_c = WrappedSketchPicker;\nconst initialPallet = [{\n  offset: \"0.00\",\n  color: \"rgb(238, 241, 11)\"\n}, {\n  offset: \"1.00\",\n  color: \"rgb(126, 32, 207)\"\n}];\n\nconst Gradient = () => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [angle, setAngle] = useState(90);\n  const [palette, setPalette] = useState(initialPallet);\n  return /*#__PURE__*/_jsxDEV(GradientPickerPopover, {\n    open,\n    setOpen,\n    angle,\n    setAngle,\n    showAnglePicker: true,\n    width: 220,\n    maxStops: 3,\n    paletteHeight: 32,\n    palette,\n    onPaletteChange: setPalette,\n    children: /*#__PURE__*/_jsxDEV(WrappedSketchPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Gradient, \"TrsdjYQmPa6SM49WjPsZJOrpObY=\");\n\n_c2 = Gradient;\nexport default Gradient;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WrappedSketchPicker\");\n$RefreshReg$(_c2, \"Gradient\");","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/src/jsx/components/Forms/Pickers/LinearGradientPicker.js"],"names":["React","useState","SketchPicker","GradientPickerPopover","rgbToRgba","rgb","a","replace","WrappedSketchPicker","onSelect","rest","color","opacity","c","r","g","b","initialPallet","offset","Gradient","open","setOpen","angle","setAngle","palette","setPalette","showAnglePicker","width","maxStops","paletteHeight","onPaletteChange"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,qBAAT,QAAsC,8BAAtC;;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,CAAC,GAAG,CAAV,KACfD,GAAG,CAACE,OAAJ,CAAY,MAAZ,EAAoB,OAApB,EAA6BA,OAA7B,CAAqC,GAArC,EAA2C,KAAID,CAAE,GAAjD,CADH;;AAGA,MAAME,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACpD,sBACG,QAAC,YAAD,OACOA,IADP;AAEG,IAAA,KAAK,EAAEN,SAAS,CAACM,IAAI,CAACC,KAAN,EAAaD,IAAI,CAACE,OAAlB,CAFnB;AAGG,IAAA,QAAQ,EAAGC,CAAD,IAAO;AACd,YAAM;AAAEC,QAAAA,CAAF;AAAKC,QAAAA,CAAL;AAAQC,QAAAA,CAAR;AAAWV,QAAAA;AAAX,UAAiBO,CAAC,CAACR,GAAzB;AACAI,MAAAA,QAAQ,CAAE,OAAMK,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAtB,EAA0BV,CAA1B,CAAR;AACF;AANJ;AAAA;AAAA;AAAA;AAAA,UADH;AAUF,CAXD;;KAAME,mB;AAaN,MAAMS,aAAa,GAAG,CACnB;AAAEC,EAAAA,MAAM,EAAE,MAAV;AAAkBP,EAAAA,KAAK,EAAE;AAAzB,CADmB,EAEnB;AAAEO,EAAAA,MAAM,EAAE,MAAV;AAAkBP,EAAAA,KAAK,EAAE;AAAzB,CAFmB,CAAtB;;AAKA,MAAMQ,QAAQ,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAACgB,aAAD,CAAtC;AAEA,sBACG,QAAC,qBAAD;AAEMG,IAAAA,IAFN;AAGMC,IAAAA,OAHN;AAIMC,IAAAA,KAJN;AAKMC,IAAAA,QALN;AAMMG,IAAAA,eAAe,EAAE,IANvB;AAOMC,IAAAA,KAAK,EAAE,GAPb;AAQMC,IAAAA,QAAQ,EAAE,CARhB;AASMC,IAAAA,aAAa,EAAE,EATrB;AAUML,IAAAA,OAVN;AAWMM,IAAAA,eAAe,EAAEL,UAXvB;AAAA,2BAcG,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAdH;AAAA;AAAA;AAAA;AAAA,UADH;AAkBF,CAvBD;;GAAMN,Q;;MAAAA,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { SketchPicker } from \"react-color\";\nimport { GradientPickerPopover } from \"react-linear-gradient-picker\";\n\nconst rgbToRgba = (rgb, a = 1) =>\n   rgb.replace(\"rgb(\", \"rgba(\").replace(\")\", `, ${a})`);\n\nconst WrappedSketchPicker = ({ onSelect, ...rest }) => {\n   return (\n      <SketchPicker\n         {...rest}\n         color={rgbToRgba(rest.color, rest.opacity)}\n         onChange={(c) => {\n            const { r, g, b, a } = c.rgb;\n            onSelect(`rgb(${r}, ${g}, ${b})`, a);\n         }}\n      />\n   );\n};\n\nconst initialPallet = [\n   { offset: \"0.00\", color: \"rgb(238, 241, 11)\" },\n   { offset: \"1.00\", color: \"rgb(126, 32, 207)\" },\n];\n\nconst Gradient = () => {\n   const [open, setOpen] = useState(false);\n   const [angle, setAngle] = useState(90);\n   const [palette, setPalette] = useState(initialPallet);\n\n   return (\n      <GradientPickerPopover\n         {...{\n            open,\n            setOpen,\n            angle,\n            setAngle,\n            showAnglePicker: true,\n            width: 220,\n            maxStops: 3,\n            paletteHeight: 32,\n            palette,\n            onPaletteChange: setPalette,\n         }}\n      >\n         <WrappedSketchPicker />\n      </GradientPickerPopover>\n   );\n};\n\nexport default Gradient;\n"]},"metadata":{},"sourceType":"module"}