{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _types_1 = require(\"../common/@types\");\n\nvar convertPx = function (value) {\n  return value + \"px\";\n};\n/**\n * Getting Div position as far as distance\n * @param node\n * @param direction\n * @param distance\n */\n\n\nexports.getDivPosition = function (node, direction, height, distance) {\n  if (direction === void 0) {\n    direction = _types_1.IDatePicker.PickerDirection.BOTTOM;\n  }\n\n  if (distance === void 0) {\n    distance = 5;\n  }\n\n  if (!node) return {\n    left: '',\n    top: '',\n    bottom: ''\n  };\n  var top = 0;\n  var left = 0;\n\n  switch (direction) {\n    case _types_1.IDatePicker.PickerDirection.BOTTOM:\n      top = node.offsetTop + node.offsetHeight + distance;\n      left = node.offsetLeft;\n      break;\n\n    case _types_1.IDatePicker.PickerDirection.TOP:\n      top = node.offsetTop - height - distance;\n      left = node.offsetLeft;\n      break;\n  }\n\n  return {\n    top: convertPx(top),\n    left: convertPx(left)\n  };\n};\n\nexports.getDomHeight = function (node) {\n  return node ? node.clientHeight : 0;\n};","map":{"version":3,"sources":["../../src/utils/DOMUtil.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAM,SAAS,GAAG,UAAC,KAAD,EAAc;AAAK,SAAG,KAAK,GAAR,IAAA;AAAY,CAAjD;AACA;;;;;AAKG;;;AACU,OAAA,CAAA,cAAA,GAAiB,UAC5B,IAD4B,EAE5B,SAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAIR;AAFpB,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAyC,QAAA,CAAA,WAAA,CAAY,eAAZ,CAA4B,MAArE;AAA2E;;AAE3E,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,CAAA;AAAoB;;AAEpB,MAAI,CAAC,IAAL,EAAW,OAAO;AAAE,IAAA,IAAI,EAAE,EAAR;AAAY,IAAA,GAAG,EAAE,EAAjB;AAAqB,IAAA,MAAM,EAAE;AAA7B,GAAP;AAEX,MAAI,GAAG,GAAG,CAAV;AACA,MAAI,IAAI,GAAG,CAAX;;AAEA,UAAQ,SAAR;AACE,SAAK,QAAA,CAAA,WAAA,CAAY,eAAZ,CAA4B,MAAjC;AACE,MAAA,GAAG,GAAG,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,YAAtB,GAAqC,QAA3C;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,UAAZ;AACA;;AACF,SAAK,QAAA,CAAA,WAAA,CAAY,eAAZ,CAA4B,GAAjC;AACE,MAAA,GAAG,GAAG,IAAI,CAAC,SAAL,GAAiB,MAAjB,GAA0B,QAAhC;AACA,MAAA,IAAI,GAAG,IAAI,CAAC,UAAZ;AACA;AARJ;;AAWA,SAAO;AACL,IAAA,GAAG,EAAE,SAAS,CAAC,GAAD,CADT;AAEL,IAAA,IAAI,EAAE,SAAS,CAAC,IAAD;AAFV,GAAP;AAID,CA1BY;;AA4BA,OAAA,CAAA,YAAA,GAAe,UAAC,IAAD,EAA4B;AACtD,SAAO,IAAI,GAAG,IAAI,CAAC,YAAR,GAAuB,CAAlC;AACD,CAFY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _types_1 = require(\"../common/@types\");\nvar convertPx = function (value) { return value + \"px\"; };\n/**\n * Getting Div position as far as distance\n * @param node\n * @param direction\n * @param distance\n */\nexports.getDivPosition = function (node, direction, height, distance) {\n    if (direction === void 0) { direction = _types_1.IDatePicker.PickerDirection.BOTTOM; }\n    if (distance === void 0) { distance = 5; }\n    if (!node)\n        return { left: '', top: '', bottom: '' };\n    var top = 0;\n    var left = 0;\n    switch (direction) {\n        case _types_1.IDatePicker.PickerDirection.BOTTOM:\n            top = node.offsetTop + node.offsetHeight + distance;\n            left = node.offsetLeft;\n            break;\n        case _types_1.IDatePicker.PickerDirection.TOP:\n            top = node.offsetTop - height - distance;\n            left = node.offsetLeft;\n            break;\n    }\n    return {\n        top: convertPx(top),\n        left: convertPx(left),\n    };\n};\nexports.getDomHeight = function (node) {\n    return node ? node.clientHeight : 0;\n};\n//# sourceMappingURL=DOMUtil.js.map"]},"metadata":{},"sourceType":"script"}