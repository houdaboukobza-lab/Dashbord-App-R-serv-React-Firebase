{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\n\n\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\n\nvar PdfTextElement =\n/** @class */\nfunction (_super) {\n  __extends(PdfTextElement, _super);\n\n  function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n    var _this = _super.call(this) || this; // Fields\n\n    /**\n     * `Text` data.\n     * @private\n     */\n\n\n    _this.content = '';\n    /**\n     * `Value` of text data.\n     * @private\n     */\n\n    _this.elementValue = '';\n    /**\n     * indicate whether the drawText with PointF overload is called or not.\n     * @default false\n     * @private\n     */\n\n    _this.hasPointOverload = false;\n    /**\n     * indicate whether the PdfGridCell value is `PdfTextElement`\n     * @default false\n     * @private\n     */\n\n    _this.isPdfTextElement = false;\n\n    if (typeof arg1 === 'undefined') {//\n    } else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfPen = arg3;\n    } else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfBrush = arg3;\n    } else {\n      _this.content = arg1;\n      _this.elementValue = arg1;\n      _this.pdfFont = arg2;\n      _this.pdfPen = arg3;\n      _this.pdfBrush = arg4;\n      _this.format = arg5;\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfTextElement.prototype, \"text\", {\n    // Properties\n\n    /**\n     * Gets or sets a value indicating the `text` that should be printed.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // create the font\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n     * // create the Text Web Link\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\n     * // set the hyperlink\n     * textLink.url = 'http://www.google.com';\n     * //\n     * // set the link text\n     * textLink.text = 'Google';\n     * //\n     * // set the font\n     * textLink.font = font;\n     * // draw the hyperlink in PDF page\n     * textLink.draw(page1, new PointF(10, 40));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.elementValue = value;\n      this.content = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"value\", {\n    //get value\n\n    /**\n     * Gets or sets a `value` indicating the text that should be printed.\n     * @private\n     */\n    get: function () {\n      return this.elementValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n    //get pen\n\n    /**\n     * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n     * @private\n     */\n    get: function () {\n      return this.pdfPen;\n    },\n    //Set pen value\n    set: function (value) {\n      this.pdfPen = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n    //get brush\n\n    /**\n     * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n     * @private\n     */\n    get: function () {\n      return this.pdfBrush;\n    },\n    //Set brush value\n    set: function (value) {\n      this.pdfBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"font\", {\n    //get font\n\n    /**\n     * Gets or sets a `PdfFont` that defines the text format.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // create the font\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n     * // create the Text Web Link\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\n     * // set the hyperlink\n     * textLink.url = 'http://www.google.com';\n     * // set the link text\n     * textLink.text = 'Google';\n     * //\n     * // set the font\n     * textLink.font = font;\n     * //\n     * // draw the hyperlink in PDF page\n     * textLink.draw(page1, new PointF(10, 40));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.pdfFont;\n    },\n    set: function (value) {\n      this.pdfFont = value;\n\n      if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n        this.elementValue = PdfStandardFont.convert(this.content);\n      } else {\n        this.elementValue = this.content;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n    /**\n     * Gets or sets the `PdfStringFormat` that will be used to set the string format\n     * @private\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * Gets a `brush` for drawing.\n   * @private\n   */\n\n  PdfTextElement.prototype.getBrush = function () {\n    return this.pdfBrush == null || typeof this.pdfBrush === 'undefined' ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n  }; // /**\n  //  * `Draws` an element on the Graphics.\n  //  * @private\n  //  */\n  // public drawInternal(graphics : PdfGraphics) : void {\n  //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n  // }\n\n  /**\n   * `Layouts` the element.\n   * @private\n   */\n\n\n  PdfTextElement.prototype.layout = function (param) {\n    var layouter = new TextLayouter(this);\n    var result = layouter.layout(param);\n    return result;\n  };\n\n  PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n    if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3.x, arg3.y);\n    } else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3, arg4, null);\n    } else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n      return this.drawText(arg2, arg3, null);\n    } else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n      this.hasPointOverload = true;\n      return this.drawText(arg2, arg3.x, arg3.y, arg4);\n    } else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n      this.hasPointOverload = true;\n      var width = arg2.graphics.clientSize.width - arg3;\n      var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n      return this.drawText(arg2, layoutRectangle, arg5);\n    } else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n      return this.drawText(arg2, arg3, null);\n    } else {\n      var layout = new PdfStringLayouter();\n\n      if (this.hasPointOverload) {\n        var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.graphics.clientSize.width - arg3.x, 0), true, arg2.graphics.clientSize);\n        var layoutResult = void 0;\n        var param = new PdfLayoutParams();\n        var temparg3 = arg3;\n        var temparg4 = arg4;\n        param.page = arg2;\n        var previousPage = arg2;\n        param.bounds = temparg3;\n        param.format = temparg4 != null ? temparg4 : new PdfLayoutFormat();\n\n        if (stringLayoutResult.lines.length > 1) {\n          this.text = stringLayoutResult.layoutLines[0].text;\n\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n            layoutResult = this.layout(param);\n            var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n            var isPaginate = false;\n\n            for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n              param.page = layoutResult.page;\n              param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n              this.text = stringLayoutResult.layoutLines[i].text;\n\n              if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                isPaginate = true;\n                param.page = param.page.graphics.getNextPage();\n\n                if (previousPosition.y > layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height) {\n                  bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                } else {\n                  bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                }\n\n                param.bounds = bounds;\n              }\n\n              layoutResult = this.layout(param);\n\n              if (i !== stringLayoutResult.lines.length - 1) {\n                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n              } else {\n                var lineWidth = this.font.measureString(this.text, this.format).width;\n                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n              }\n            }\n          }\n\n          return layoutResult;\n        } else {\n          var lineSize = this.font.measureString(this.text, this.format);\n\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            layoutResult = this.layout(param);\n            layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n          }\n\n          return layoutResult;\n        }\n      } else {\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n        var result = void 0;\n        var param = new PdfLayoutParams();\n        var temparg3 = arg3;\n        var temparg4 = arg4;\n        param.page = arg2;\n        param.bounds = temparg3;\n        param.format = temparg4 != null ? temparg4 : new PdfLayoutFormat();\n\n        if (layoutResult.lines.length > 1) {\n          this.text = layoutResult.layoutLines[0].text;\n\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n            result = this.layout(param);\n            var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n            var isPaginate = false;\n\n            for (var i = 1; i < layoutResult.lines.length; i++) {\n              param.page = result.page;\n              param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n              this.text = layoutResult.layoutLines[i].text;\n\n              if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                isPaginate = true;\n                param.page = param.page.graphics.getNextPage();\n\n                if (previousPosition.y > result.page.graphics.clientSize.height - result.bounds.height) {\n                  bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                } else {\n                  bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                }\n\n                param.bounds = bounds;\n              }\n\n              result = this.layout(param);\n\n              if (i !== layoutResult.lines.length - 1) {\n                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n              } else {\n                var lineWidth = this.font.measureString(this.text, this.format).width;\n                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n              }\n            }\n          }\n\n          return result;\n        } else {\n          var lineSize = this.font.measureString(this.text, this.format);\n\n          if (param.bounds.y <= param.page.graphics.clientSize.height) {\n            result = this.layout(param);\n            result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n          }\n\n          return result;\n        }\n      }\n    }\n  };\n\n  PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n    var shift = 0;\n\n    if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n      result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n      result.bounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n      result.bounds.x = startPosition + (maximumWidth - lineWidth);\n      result.bounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n      result.bounds.x = startPosition;\n      result.bounds.width = maximumWidth;\n    } else {\n      result.bounds.width = startPosition;\n      result.bounds.width = lineWidth;\n    }\n\n    return result;\n  };\n\n  return PdfTextElement;\n}(PdfLayoutElement);\n\nexport { PdfTextElement };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/text-element.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfLayoutElement","PdfBrush","PdfFont","PdfStandardFont","PdfPen","PdfLayoutParams","TextLayouter","PdfSolidBrush","PdfColor","RectangleF","SizeF","PointF","PdfLayoutFormat","PdfStringLayouter","PdfTextAlignment","PdfTextElement","_super","arg1","arg2","arg3","arg4","arg5","_this","call","content","elementValue","hasPointOverload","isPdfTextElement","pdfFont","pdfPen","pdfBrush","format","defineProperty","get","set","value","enumerable","configurable","convert","getBrush","layout","param","layouter","result","drawText","width","x","y","graphics","clientSize","layoutRectangle","stringLayoutResult","font","stringFormat","layoutResult","temparg3","temparg4","page","previousPage","bounds","lines","length","text","layoutLines","height","previousPosition","lineHeight","isPaginate","i","getNextPage","lineWidth","measureString","calculateResultBounds","lineSize","maximumWidth","startPosition","shift","alignment","Center","Right","Justify"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n"]},"metadata":{},"sourceType":"module"}