{"ast":null,"code":"import { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\n\nvar ScrollBar =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating scrollbar\n   * @param component\n   * @param axis\n   */\n  function ScrollBar(component, axis) {\n    /** @private */\n    this.scrollRange = {\n      max: null,\n      min: null,\n      interval: null,\n      delta: null\n    };\n    this.component = component;\n    this.elements = [];\n    this.scrollElements = new ScrollElements(component);\n    this.axis = axis;\n    this.mouseMoveListener = this.scrollMouseMove.bind(this);\n    this.mouseUpListener = this.scrollMouseUp.bind(this);\n    this.animateDuration = 500;\n    this.isPointer = Browser.isPointer;\n    this.browserName = Browser.info.name;\n  }\n  /**\n   * To Mouse x and y position\n   * @param e\n   */\n\n\n  ScrollBar.prototype.getMouseXY = function (e) {\n    var pageX;\n    var pageY;\n    var touchArg;\n\n    if (e.type.indexOf('touch') > -1) {\n      touchArg = e;\n      pageX = touchArg.changedTouches[0].clientX;\n      pageY = touchArg.changedTouches[0].clientY;\n    } else {\n      pageX = e.clientX;\n      pageY = e.clientY;\n    }\n\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = pageX - Math.max(svgRect.left, 0);\n    this.mouseY = pageY - Math.max(svgRect.top, 0);\n  };\n  /**\n   * Method to bind events for scrollbar svg object\n   * @param element\n   */\n\n\n  ScrollBar.prototype.wireEvents = function (element) {\n    EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n    EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n    EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n    EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n    window.addEventListener('mousemove', this.mouseMoveListener, false);\n    window.addEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Method to remove events for srcollbar svg object\n   * @param element\n   */\n\n\n  ScrollBar.prototype.unWireEvents = function (element) {\n    EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n    EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n    EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n    EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n    window.removeEventListener('mousemove', this.mouseMoveListener, false);\n    window.removeEventListener('mouseup', this.mouseUpListener, false);\n  };\n  /**\n   * Handles the mouse down on scrollbar\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseDown = function (e) {\n    var id = e.target.id;\n    var elem = this.scrollElements;\n    this.getMouseXY(e);\n    this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n    this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_'); //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n\n    this.previousXY = this.isVertical && this.axis.isInversed ? this.mouseY : this.isVertical ? this.width - this.mouseY : this.axis.isInversed ? this.width - this.mouseX : this.mouseX;\n    this.previousWidth = elem.thumbRectWidth;\n    this.previousRectX = elem.thumbRectX;\n    this.startZoomPosition = this.axis.zoomPosition;\n    this.startZoomFactor = this.axis.zoomFactor;\n    this.startRange = this.axis.visibleRange;\n    this.scrollStarted = true;\n    this.component.trigger(scrollStart, this.getArgs(scrollStart));\n\n    if (this.isExist(id, 'scrollBarThumb_')) {\n      this.isThumbDrag = true;\n      this.svgObject.style.cursor = '-webkit-grabbing';\n    } else if (this.isExist(id, 'scrollBarBackRect_')) {\n      var currentX = this.moveLength(this.previousXY, this.previousRectX);\n      elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n      this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n\n      if (this.isLazyLoad) {\n        var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n        var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n        }\n      }\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n     * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n     * Fix: Only for scrolling purpose, height for element is set to chart's available height\n     */\n\n\n    if (this.component.element.style.height === '') {\n      this.isCustomHeight = true;\n      this.component.element.style.height = this.component.availableSize.height + 'px';\n    }\n  };\n  /**\n   * To check the matched string\n   * @param id\n   * @param match\n   */\n\n\n  ScrollBar.prototype.isExist = function (id, match) {\n    return id.indexOf(match) > -1;\n  };\n  /**\n   * To check current poisition is within scrollbar region\n   * @param currentX\n   */\n\n\n  ScrollBar.prototype.isWithIn = function (currentX) {\n    var circleRadius = 8;\n    return currentX - circleRadius >= 0 && currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width;\n  };\n  /**\n   * Method to find move length of thumb\n   * @param mouseXY\n   * @param thumbX\n   * @param circleRadius\n   */\n\n\n  ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n    if (circleRadius === void 0) {\n      circleRadius = 8;\n    }\n\n    var moveLength = 10 / 100 * (this.width - circleRadius * 2);\n\n    if (mouseXY < thumbX) {\n      moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n    } else {\n      moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ? moveLength : circleRadius);\n    }\n\n    return moveLength;\n  };\n  /**\n   * Method to calculate zoom factor and position\n   * @param currentX\n   * @param currentWidth\n   */\n\n\n  ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n    if (isRequire === void 0) {\n      isRequire = true;\n    }\n\n    var axis = this.axis;\n    this.isScrollUI = true;\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n    this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical ? axis.rect.height : this.width);\n    axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n    axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n  };\n  /**\n   * Handles the mouse move on scrollbar\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseMove = function (e) {\n    var target = e.target;\n    var elem = this.scrollElements;\n    this.getMouseXY(e);\n    this.setCursor(target);\n    this.setTheme(target); //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n\n    var mouseXY = this.isVertical && this.axis.isInversed ? this.width - this.mouseY : this.isVertical ? this.mouseY : this.mouseX;\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var moveLength = this.previousRectX - elem.thumbRectX;\n    var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n    var args;\n\n    if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n      args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n    }\n\n    var currentRange = args ? args.currentRange : null;\n\n    if (this.isThumbDrag) {\n      this.component.isScrolling = this.isThumbDrag;\n      mouseXY = this.isVertical || this.axis.isInversed ? this.width - mouseXY : mouseXY;\n      var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n\n      if (mouseXY >= currentX + elem.thumbRectWidth) {\n        this.setCursor(target);\n      } else {\n        this.svgObject.style.cursor = '-webkit-grabbing';\n      }\n\n      if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n        elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        this.previousXY = mouseXY;\n        this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n      }\n\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    } else if (this.isResizeLeft || this.isResizeRight) {\n      this.resizeThumb(e);\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n    }\n  };\n  /**\n   * Handles the mouse wheel on scrollbar\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseWheel = function (e) {\n    var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n    this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n    this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n    var origin = 0.5;\n    var elem = this.scrollElements;\n    var axis = this.axis;\n    var direction = this.browserName === 'mozilla' && !this.isPointer ? -e.detail / 3 > 0 ? 1 : -1 : e.wheelDelta / 120 > 0 ? 1 : -1;\n    var cumulative;\n    cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + 0.25 * direction, 1);\n    var range = this.axis.visibleRange;\n    var zoomPosition = this.zoomPosition;\n    var zoomFactor = this.zoomFactor;\n    var args;\n\n    if (cumulative >= 1) {\n      origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - this.mouseY / axis.rect.height;\n      origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n      this.zoomFactor = cumulative === 1 ? 1 : minMax(1 / cumulative, 0, 1);\n      this.zoomPosition = cumulative === 1 ? 0 : axis.zoomPosition + (axis.zoomFactor - this.zoomFactor) * origin;\n    }\n\n    elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n    this.isScrollUI = true;\n    this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n\n    if (this.isLazyLoad) {\n      this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n    }\n\n    axis.zoomFactor = this.zoomFactor;\n    axis.zoomPosition = this.zoomPosition;\n\n    if (this.isLazyLoad) {\n      args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n\n      if (args) {\n        if (args.currentRange.minimum !== args.previousAxisRange.minimum && args.currentRange.maximum !== args.previousAxisRange.maximum) {\n          this.component.trigger(scrollEnd, args);\n          this.isScrollEnd = false;\n        }\n      }\n    }\n\n    if (!this.isLazyLoad) {\n      this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n    }\n  };\n  /**\n   * Handles the mouse up on scrollbar\n   * @param e\n   */\n\n\n  ScrollBar.prototype.scrollMouseUp = function (e) {\n    var circleRadius = 8;\n    var circleWidth = 1;\n    var args;\n    this.startX = this.scrollElements.thumbRectX;\n    var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n    var currentZPWidth = circleRadius + circleWidth / 2;\n\n    if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n      this.axis.zoomFactor = currentScrollWidth >= this.width - 1 && this.startX - currentZPWidth <= 0 ? 1 : this.zoomFactor;\n    }\n\n    if (this.isLazyLoad) {\n      var moveLength = this.previousRectX - this.startX;\n\n      if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n\n        if (thumbMove === 'RightMove') {\n          this.startX = this.startX + Math.abs(moveLength) < this.width - circleRadius ? this.startX : this.width - circleRadius - this.scrollElements.thumbRectWidth;\n        } else {\n          this.startX = this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength) > circleRadius ? this.startX : circleRadius;\n        }\n\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n\n      if (this.isResizeLeft || this.isResizeRight) {\n        args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n\n        if (args) {\n          this.component.trigger(scrollEnd, args);\n          this.scrollStarted = false;\n        }\n      }\n    }\n\n    this.isThumbDrag = false;\n    this.isResizeLeft = false;\n    this.isResizeRight = false;\n    this.isScrollEnd = false;\n    this.component.isScrolling = false;\n\n    if (this.scrollStarted && !this.isLazyLoad) {\n      this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n      this.scrollStarted = false;\n    }\n    /**\n     * Customer issue\n     * Task ID - EJ2-28898\n     * Chart's height setted is removed here.\n     */\n\n\n    if (this.isCustomHeight) {\n      this.component.element.style.height = null;\n    }\n  };\n\n  ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n    var zoomFactor;\n    var zoomPosition;\n    var currentStart;\n    var currentEnd;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n\n    if (scrollThumbX + scrollThumbWidth + circleRadius <= this.width) {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = scrollThumbWidth / this.width;\n    }\n\n    currentStart = range.min + zoomPosition * range.delta;\n    currentEnd = currentStart + zoomFactor * range.delta;\n\n    if (currentEnd) {\n      args = {\n        axis: this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n\n    return args;\n  };\n\n  ;\n  /**\n   * Range calculation for lazy loading\n   */\n\n  ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n    var currentScrollWidth = scrollThumbWidth;\n    var zoomFactor;\n    var zoomPosition;\n    var currentStart;\n    var currentEnd;\n    var args;\n    var range = this.scrollRange;\n    var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n    var circleRadius = 8;\n    var circleWidth = 16;\n\n    if (this.isResizeRight || thumbMove === 'RightMove') {\n      currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n      zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n      currentStart = thumbMove === 'RightMove' ? range.min + zoomPosition * range.delta : this.previousStart;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    } else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n      zoomPosition = (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = currentScrollWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = thumbMove === 'LeftMove' ? currentStart + zoomFactor * range.delta : this.previousEnd;\n    } else if (this.isThumbDrag) {\n      zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n      zoomFactor = this.scrollElements.thumbRectWidth / this.width;\n      currentStart = range.min + zoomPosition * range.delta;\n      currentStart = currentStart >= range.min ? currentStart : range.min;\n      currentEnd = currentStart + zoomFactor * range.delta;\n    }\n\n    if (currentEnd) {\n      args = {\n        axis: this.component.isBlazor ? {} : this.axis,\n        currentRange: this.getStartEnd(currentStart, currentEnd, true),\n        previousAxisRange: previousRange\n      };\n    }\n\n    return args;\n  };\n  /**\n   * Get start and end values\n   */\n\n\n  ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n    var range;\n    var valueType = this.valueType;\n\n    if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n      this.previousStart = start;\n      this.previousEnd = end;\n    } else if (isCurrentStartEnd) {\n      this.previousStart = Math.round(start);\n      this.previousEnd = Math.ceil(end);\n    }\n\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = Math.round(start);\n        end = Math.ceil(end);\n        break;\n\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = new Date(start);\n        end = new Date(end);\n        break;\n    }\n\n    return range = {\n      minimum: start,\n      maximum: end\n    };\n  };\n  /**\n   * To render scroll bar\n   * @private\n   */\n\n\n  ScrollBar.prototype.render = function (isScrollExist) {\n    if (this.component.zoomModule || isScrollExist && this.axis.scrollbarSettings.enable) {\n      this.getDefaults();\n    }\n\n    this.getTheme();\n    this.removeScrollSvg();\n    createScrollSvg(this, this.component.svgRenderer);\n    this.wireEvents(this.svgObject);\n    this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n    return this.svgObject;\n  };\n  /**\n   * Theming for scrollabr\n   */\n\n\n  ScrollBar.prototype.getTheme = function () {\n    this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n  };\n  /**\n   * Method to remove existing scrollbar\n   */\n\n\n  ScrollBar.prototype.removeScrollSvg = function () {\n    if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n      remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n    }\n  };\n  /**\n   * Method to set cursor fpr scrollbar\n   * @param target\n   */\n\n\n  ScrollBar.prototype.setCursor = function (target) {\n    var id = target.id;\n    this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ? '-webkit-grab' : id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1 ? this.isVertical ? 'ns-resize' : 'ew-resize' : 'auto';\n  };\n  /**\n   * Method to set theme for sollbar\n   * @param target\n   */\n\n\n  ScrollBar.prototype.setTheme = function (target) {\n    var id = target.id;\n    var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n    var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n    var style = this.scrollbarThemeStyle;\n    var leftArrowEle = this.scrollElements.leftArrowEle;\n    var rightArrowEle = this.scrollElements.rightArrowEle;\n    var leftCircleEle = this.scrollElements.leftCircleEle;\n    var rightCircleEle = this.scrollElements.rightCircleEle;\n    var isAxis = this.isCurrentAxis(target, leftArrowEle);\n    leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n    leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n    rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n\n    if (this.component.theme === 'HighContrastLight') {\n      leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n      leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n      rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n    }\n  };\n  /**\n   * To check current axis\n   * @param target\n   * @param ele\n   */\n\n\n  ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n    return target.id.split('_')[2] === ele.id.split('_')[2];\n  };\n  /**\n   * Method to resize thumb\n   * @param e\n   */\n\n\n  ScrollBar.prototype.resizeThumb = function (e) {\n    var currentWidth;\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n    var thumbX = this.previousRectX; // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n\n    var mouseXY = this.isVertical && this.axis.isInversed ? this.mouseY : this.isVertical ? this.width - this.mouseY : this.axis.isInversed ? this.width - this.mouseX : this.mouseX;\n    var diff = Math.abs(this.previousXY - mouseXY);\n\n    if (this.isResizeLeft && mouseXY >= 0) {\n      var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n      currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) : this.previousWidth;\n      currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n\n      if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n        this.scrollElements.thumbRectX = this.previousRectX = currentX;\n        this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n        this.previousXY = mouseXY;\n        this.positionThumb(currentX, currentWidth);\n        this.setZoomFactorPosition(currentX, currentWidth);\n      }\n    } else if (this.isResizeRight) {\n      currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ? mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n      this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n      this.previousXY = mouseXY;\n      this.positionThumb(this.startX, currentWidth);\n      this.setZoomFactorPosition(this.startX, currentWidth);\n\n      if (!this.isLazyLoad) {\n        this.setZoomFactorPosition(this.startX, currentWidth);\n      }\n    }\n  };\n  /**\n   * Method to position the scrollbar thumb\n   * @param currentX\n   * @param currentWidth\n   */\n\n\n  ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n    var circlePadding = 3;\n    var elem = this.scrollElements;\n    var gripWidth = 14;\n    var gripCircleDiameter = 2;\n    var padding = gripWidth / 2 - gripCircleDiameter;\n    elem.slider.setAttribute('x', currentX.toString());\n    elem.slider.setAttribute('width', currentWidth.toString());\n    elem.leftCircleEle.setAttribute('cx', currentX.toString());\n    elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n    elem.setArrowDirection(currentX, currentWidth, this.height);\n    elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + (this.isVertical ? 1 : -1) * padding) + ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n  };\n  /**\n   * Method to get default values\n   */\n\n\n  ScrollBar.prototype.getDefaults = function () {\n    var axis = this.axis;\n\n    if (this.axis.scrollbarSettings.enable) {\n      this.isLazyLoad = true;\n      this.getLazyDefaults(axis);\n    }\n\n    var circleRadius = 8;\n    var padding = 5;\n    var gripWidth = 14;\n    var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n    this.isVertical = axis.orientation === 'Vertical';\n    var lazyRange = axis.scrollbarSettings.range;\n    this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n    this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n    var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n    currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n    this.scrollX = axis.rect.x;\n    this.scrollY = axis.rect.y;\n    this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n    this.height = 16;\n    var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n    var minThumbX = this.width - minThumbWidth - circleRadius;\n    this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n    this.scrollElements.thumbRectWidth = currentWidth + this.scrollElements.thumbRectX < this.width - circleRadius * 2 ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n  };\n  /**\n   * Lazy load default values\n   */\n\n\n  ScrollBar.prototype.getLazyDefaults = function (axis) {\n    var start;\n    var end;\n    var valueType = axis.valueType;\n    var scrollbarSettings = axis.scrollbarSettings;\n    this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) && scrollbarSettings.pointsLength ? 'Double' : valueType;\n    var range = axis.scrollbarSettings.range;\n    var visibleRange = axis.visibleRange;\n    var pointsLength = axis.scrollbarSettings.pointsLength;\n    var zoomFactor;\n    var zoomPosition;\n    var option = {\n      skeleton: 'full',\n      type: 'dateTime'\n    };\n    var dateParser = this.component.intl.getDateParser(option);\n    var dateFormatter = this.component.intl.getDateFormat(option);\n\n    switch (valueType) {\n      case 'Double':\n      case 'Category':\n      case 'Logarithmic':\n        start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n        end = range.maximum ? range.maximum : pointsLength ? pointsLength - 1 : visibleRange.max;\n        break;\n\n      case 'DateTime':\n      case 'DateTimeCategory':\n        start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n        end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n        break;\n    }\n\n    start = Math.min(start, visibleRange.min);\n    end = Math.max(end, visibleRange.max);\n    zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n    zoomPosition = (visibleRange.min - start) / (end - start);\n    this.zoomFactor = range.minimum || range.maximum ? zoomFactor : this.axis.maxPointLength / axis.scrollbarSettings.pointsLength;\n    this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n    this.scrollRange.min = start;\n    this.scrollRange.max = end;\n    this.scrollRange.delta = end - start;\n    this.previousStart = visibleRange.min;\n    this.previousEnd = visibleRange.max;\n  };\n  /**\n   * Method to get log range\n   */\n\n\n  ScrollBar.prototype.getLogRange = function (axis) {\n    var logRange;\n    var range = axis.scrollbarSettings.range;\n    var start = logBase(range.minimum, axis.logBase);\n    start = isFinite(start) ? start : range.minimum;\n    var end = logBase(range.maximum, axis.logBase);\n    end = isFinite(start) ? end : range.maximum;\n    logRange = {\n      minimum: Math.floor(start / 1),\n      maximum: Math.ceil(end / 1)\n    };\n    return logRange;\n  };\n  /**\n   * Method for injecting scrollbar module\n   * @param axis\n   * @param component\n   */\n\n\n  ScrollBar.prototype.injectTo = function (axis, component) {\n    axis.zoomingScrollBar = new ScrollBar(component, axis);\n  };\n  /**\n   * Method to destroy scrollbar\n   */\n\n\n  ScrollBar.prototype.destroy = function () {\n    var _this = this;\n\n    if (this.axes) {\n      this.axes.map(function (axis) {\n        axis.zoomingScrollBar.destroy();\n      });\n    } else {\n      this.elements.map(function (element) {\n        _this.unWireEvents(element);\n\n        remove(element.firstChild);\n      });\n      this.elements = [];\n    }\n  };\n  /**\n   * Method to get scrollbar module name\n   */\n\n\n  ScrollBar.prototype.getModuleName = function () {\n    return 'ScrollBar';\n  };\n\n  ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n    var scrollArgs = {\n      axis: this.component.isBlazor ? {} : this.axis,\n      name: eventName,\n      range: this.axis.visibleRange,\n      zoomFactor: this.axis.zoomFactor,\n      zoomPosition: this.axis.zoomPosition,\n      previousRange: range,\n      previousZoomFactor: zoomFactor,\n      previousZoomPosition: zoomPosition,\n      currentRange: currentRanges\n    };\n    return scrollArgs;\n  };\n\n  return ScrollBar;\n}();\n\nexport { ScrollBar };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/common/scrollbar/scrollbar.js"],"names":["EventHandler","Browser","remove","ScrollElements","createScrollSvg","getElement","minMax","logBase","getScrollbarThemeColor","scrollChanged","scrollEnd","scrollStart","ScrollBar","component","axis","scrollRange","max","min","interval","delta","elements","scrollElements","mouseMoveListener","scrollMouseMove","bind","mouseUpListener","scrollMouseUp","animateDuration","isPointer","browserName","info","name","prototype","getMouseXY","e","pageX","pageY","touchArg","type","indexOf","changedTouches","clientX","clientY","svgRect","element","id","getBoundingClientRect","mouseX","Math","left","mouseY","top","wireEvents","add","touchStartEvent","scrollMouseDown","touchMoveEvent","touchEndEvent","scrollMouseWheel","window","addEventListener","unWireEvents","removeEventListener","target","elem","isResizeLeft","isExist","isResizeRight","previousXY","isVertical","isInversed","width","previousWidth","thumbRectWidth","previousRectX","thumbRectX","startZoomPosition","zoomPosition","startZoomFactor","zoomFactor","startRange","visibleRange","scrollStarted","trigger","getArgs","isThumbDrag","svgObject","style","cursor","currentX","moveLength","isWithIn","positionThumb","setZoomFactorPosition","isLazyLoad","thumbMove","args","calculateLazyRange","height","isCustomHeight","availableSize","match","circleRadius","mouseXY","thumbX","currentWidth","isRequire","isScrollUI","circleWidth","currentScrollWidth","currentZPWidth","rect","setCursor","setTheme","range","currentRange","isScrolling","resizeThumb","origin","direction","detail","wheelDelta","cumulative","orientation","calculateMouseWheelRange","minimum","previousAxisRange","maximum","isScrollEnd","startX","abs","scrollThumbX","scrollThumbWidth","currentStart","currentEnd","previousRange","getStartEnd","previousStart","previousEnd","isBlazor","start","end","isCurrentStartEnd","valueType","round","ceil","Date","render","isScrollExist","zoomModule","scrollbarSettings","enable","getDefaults","getTheme","removeScrollSvg","svgRenderer","appendChild","renderElements","scrollbarThemeStyle","theme","document","getElementById","isLeftHover","isRightHover","leftArrowEle","rightArrowEle","leftCircleEle","rightCircleEle","isAxis","isCurrentAxis","fill","circleHover","circle","stroke","arrowHover","arrow","ele","split","padding","gripWidth","minThumbWidth","diff","circlePadding","gripCircleDiameter","slider","setAttribute","toString","setArrowDirection","gripCircle","getLazyDefaults","lazyRange","scrollX","x","scrollY","y","minThumbX","pointsLength","option","skeleton","dateParser","intl","getDateParser","dateFormatter","getDateFormat","parse","maxPointLength","getLogRange","logRange","isFinite","floor","injectTo","zoomingScrollBar","destroy","_this","axes","map","firstChild","getModuleName","eventName","currentRanges","scrollArgs","previousZoomFactor","previousZoomPosition"],"mappings":"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","sourcesContent":["import { EventHandler, Browser, remove } from '@syncfusion/ej2-base';\nimport { ScrollElements, createScrollSvg } from './scrollbar-elements';\nimport { getElement, minMax, logBase } from '../utils/helper';\nimport { getScrollbarThemeColor } from '../model/theme';\nimport { scrollChanged, scrollEnd, scrollStart } from '../model/constants';\n/**\n * Scrollbar Base\n */\nvar ScrollBar = /** @class */ (function () {\n    /**\n     * Constructor for creating scrollbar\n     * @param component\n     * @param axis\n     */\n    function ScrollBar(component, axis) {\n        /** @private */\n        this.scrollRange = { max: null, min: null, interval: null, delta: null };\n        this.component = component;\n        this.elements = [];\n        this.scrollElements = new ScrollElements(component);\n        this.axis = axis;\n        this.mouseMoveListener = this.scrollMouseMove.bind(this);\n        this.mouseUpListener = this.scrollMouseUp.bind(this);\n        this.animateDuration = 500;\n        this.isPointer = Browser.isPointer;\n        this.browserName = Browser.info.name;\n    }\n    /**\n     * To Mouse x and y position\n     * @param e\n     */\n    ScrollBar.prototype.getMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var touchArg;\n        if (e.type.indexOf('touch') > -1) {\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].clientX;\n            pageY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = pageX - Math.max(svgRect.left, 0);\n        this.mouseY = pageY - Math.max(svgRect.top, 0);\n    };\n    /**\n     * Method to bind events for scrollbar svg object\n     * @param element\n     */\n    ScrollBar.prototype.wireEvents = function (element) {\n        EventHandler.add(element, Browser.touchStartEvent, this.scrollMouseDown, this);\n        EventHandler.add(element, Browser.touchMoveEvent, this.scrollMouseMove, this);\n        EventHandler.add(element, Browser.touchEndEvent, this.scrollMouseUp, this);\n        EventHandler.add(element, 'mousewheel', this.scrollMouseWheel, this);\n        window.addEventListener('mousemove', this.mouseMoveListener, false);\n        window.addEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Method to remove events for srcollbar svg object\n     * @param element\n     */\n    ScrollBar.prototype.unWireEvents = function (element) {\n        EventHandler.remove(element, Browser.touchStartEvent, this.scrollMouseDown);\n        EventHandler.remove(element, Browser.touchMoveEvent, this.scrollMouseMove);\n        EventHandler.remove(element, Browser.touchEndEvent, this.scrollMouseUp);\n        EventHandler.remove(element, 'mousewheel', this.scrollMouseWheel);\n        window.removeEventListener('mousemove', this.mouseMoveListener, false);\n        window.removeEventListener('mouseup', this.mouseUpListener, false);\n    };\n    /**\n     * Handles the mouse down on scrollbar\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseDown = function (e) {\n        var id = e.target.id;\n        var elem = this.scrollElements;\n        this.getMouseXY(e);\n        this.isResizeLeft = this.isExist(id, '_leftCircle_') || this.isExist(id, '_leftArrow_');\n        this.isResizeRight = this.isExist(id, '_rightCircle_') || this.isExist(id, '_rightArrow_');\n        //  this.previousXY = this.isVertical ? this.mouseY : this.mouseX;\n        this.previousXY = (this.isVertical && this.axis.isInversed) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : this.axis.isInversed ? this.width - this.mouseX : this.mouseX;\n        this.previousWidth = elem.thumbRectWidth;\n        this.previousRectX = elem.thumbRectX;\n        this.startZoomPosition = this.axis.zoomPosition;\n        this.startZoomFactor = this.axis.zoomFactor;\n        this.startRange = this.axis.visibleRange;\n        this.scrollStarted = true;\n        this.component.trigger(scrollStart, this.getArgs(scrollStart));\n        if (this.isExist(id, 'scrollBarThumb_')) {\n            this.isThumbDrag = true;\n            this.svgObject.style.cursor = '-webkit-grabbing';\n        }\n        else if (this.isExist(id, 'scrollBarBackRect_')) {\n            var currentX = this.moveLength(this.previousXY, this.previousRectX);\n            elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n            this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth, false);\n            if (this.isLazyLoad) {\n                var thumbMove = elem.thumbRectX > this.previousRectX ? 'RightMove' : 'LeftMove';\n                var args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                }\n            }\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Issue: While element's height is smaller than chart'height, html scroll bar presents. On that case while moving chart scrollbar,\n         * html scrollbar goes up due to chart's svg removed from the dom when zoomFactor and zoomPosition chnaged\n         * Fix: Only for scrolling purpose, height for element is set to chart's available height\n         */\n        if (this.component.element.style.height === '') {\n            this.isCustomHeight = true;\n            this.component.element.style.height = this.component.availableSize.height + 'px';\n        }\n    };\n    /**\n     * To check the matched string\n     * @param id\n     * @param match\n     */\n    ScrollBar.prototype.isExist = function (id, match) {\n        return id.indexOf(match) > -1;\n    };\n    /**\n     * To check current poisition is within scrollbar region\n     * @param currentX\n     */\n    ScrollBar.prototype.isWithIn = function (currentX) {\n        var circleRadius = 8;\n        return (currentX - circleRadius >= 0 &&\n            currentX + this.scrollElements.thumbRectWidth + circleRadius <= this.width);\n    };\n    /**\n     * Method to find move length of thumb\n     * @param mouseXY\n     * @param thumbX\n     * @param circleRadius\n     */\n    ScrollBar.prototype.moveLength = function (mouseXY, thumbX, circleRadius) {\n        if (circleRadius === void 0) { circleRadius = 8; }\n        var moveLength = (10 / 100) * (this.width - circleRadius * 2);\n        if (mouseXY < thumbX) {\n            moveLength = thumbX - (thumbX - moveLength > circleRadius ? moveLength : circleRadius);\n        }\n        else {\n            moveLength = thumbX + (thumbX + this.scrollElements.thumbRectWidth + moveLength < this.width - circleRadius ?\n                moveLength : circleRadius);\n        }\n        return moveLength;\n    };\n    /**\n     * Method to calculate zoom factor and position\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.setZoomFactorPosition = function (currentX, currentWidth, isRequire) {\n        if (isRequire === void 0) { isRequire = true; }\n        var axis = this.axis;\n        this.isScrollUI = true;\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var currentScrollWidth = currentX + currentWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        this.zoomPosition = (currentX - (currentX - currentZPWidth <= 0 ? currentZPWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        this.zoomFactor = (currentWidth + (currentScrollWidth >= this.width ? circleRadius + circleWidth : 0)) / (this.isVertical\n            ? axis.rect.height : this.width);\n        axis.zoomPosition = this.zoomPosition < 0 ? 0 : this.zoomPosition > 0.9 ? 1 : this.zoomPosition;\n        axis.zoomFactor = isRequire ? this.zoomFactor : axis.zoomFactor;\n    };\n    /**\n     * Handles the mouse move on scrollbar\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseMove = function (e) {\n        var target = e.target;\n        var elem = this.scrollElements;\n        this.getMouseXY(e);\n        this.setCursor(target);\n        this.setTheme(target);\n        //let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && this.axis.isInversed) ? this.width - this.mouseY : this.isVertical ?\n            this.mouseY : this.mouseX;\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var moveLength = this.previousRectX - elem.thumbRectX;\n        var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n        var args;\n        if (this.isLazyLoad && (this.isThumbDrag || this.isResizeLeft || this.isResizeRight)) {\n            args = this.calculateLazyRange(elem.thumbRectX, elem.thumbRectWidth, thumbMove);\n        }\n        var currentRange = args ? args.currentRange : null;\n        if (this.isThumbDrag) {\n            this.component.isScrolling = this.isThumbDrag;\n            mouseXY = (this.isVertical || this.axis.isInversed) ? this.width - mouseXY : mouseXY;\n            var currentX = elem.thumbRectX + (mouseXY - this.previousXY);\n            if (mouseXY >= currentX + elem.thumbRectWidth) {\n                this.setCursor(target);\n            }\n            else {\n                this.svgObject.style.cursor = '-webkit-grabbing';\n            }\n            if (mouseXY >= 0 && mouseXY <= currentX + elem.thumbRectWidth) {\n                elem.thumbRectX = this.isWithIn(currentX) ? currentX : elem.thumbRectX;\n                this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n                this.previousXY = mouseXY;\n                this.setZoomFactorPosition(currentX, elem.thumbRectWidth, false);\n            }\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n        else if (this.isResizeLeft || this.isResizeRight) {\n            this.resizeThumb(e);\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor, currentRange));\n        }\n    };\n    /**\n     * Handles the mouse wheel on scrollbar\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseWheel = function (e) {\n        var svgRect = getElement(this.component.element.id + '_scrollBar_svg' + this.axis.name).getBoundingClientRect();\n        this.mouseX = e.clientX - Math.max(svgRect.left, 0);\n        this.mouseY = e.clientY - Math.max(svgRect.top, 0);\n        var origin = 0.5;\n        var elem = this.scrollElements;\n        var axis = this.axis;\n        var direction = (this.browserName === 'mozilla' && !this.isPointer) ?\n            -(e.detail) / 3 > 0 ? 1 : -1 : (e.wheelDelta / 120) > 0 ? 1 : -1;\n        var cumulative;\n        cumulative = Math.max(Math.max(1 / minMax(axis.zoomFactor, 0, 1), 1) + (0.25 * direction), 1);\n        var range = this.axis.visibleRange;\n        var zoomPosition = this.zoomPosition;\n        var zoomFactor = this.zoomFactor;\n        var args;\n        if (cumulative >= 1) {\n            origin = axis.orientation === 'Horizontal' ? this.mouseX / axis.rect.width : 1 - (this.mouseY / axis.rect.height);\n            origin = origin > 1 ? 1 : origin < 0 ? 0 : origin;\n            this.zoomFactor = (cumulative === 1) ? 1 : minMax(1 / cumulative, 0, 1);\n            this.zoomPosition = (cumulative === 1) ? 0 : axis.zoomPosition + ((axis.zoomFactor - this.zoomFactor) * origin);\n        }\n        elem.thumbRectX = this.isWithIn(this.zoomPosition * this.width) ? this.zoomPosition * this.width : elem.thumbRectX;\n        this.isScrollUI = true;\n        this.positionThumb(elem.thumbRectX, elem.thumbRectWidth);\n        if (this.isLazyLoad) {\n            this.setZoomFactorPosition(elem.thumbRectX, elem.thumbRectWidth);\n        }\n        axis.zoomFactor = this.zoomFactor;\n        axis.zoomPosition = this.zoomPosition;\n        if (this.isLazyLoad) {\n            args = this.calculateMouseWheelRange(elem.thumbRectX, elem.thumbRectWidth);\n            if (args) {\n                if ((args.currentRange.minimum !== args.previousAxisRange.minimum) && (args.currentRange.maximum !==\n                    args.previousAxisRange.maximum)) {\n                    this.component.trigger(scrollEnd, args);\n                    this.isScrollEnd = false;\n                }\n            }\n        }\n        if (!this.isLazyLoad) {\n            this.component.trigger(scrollChanged, this.getArgs(scrollChanged, range, zoomPosition, zoomFactor));\n        }\n    };\n    /**\n     * Handles the mouse up on scrollbar\n     * @param e\n     */\n    ScrollBar.prototype.scrollMouseUp = function (e) {\n        var circleRadius = 8;\n        var circleWidth = 1;\n        var args;\n        this.startX = this.scrollElements.thumbRectX;\n        var currentScrollWidth = this.startX + this.scrollElements.thumbRectWidth + circleRadius + circleWidth;\n        var currentZPWidth = circleRadius + (circleWidth / 2);\n        if ((this.isResizeLeft || this.isResizeRight) && !this.isLazyLoad) {\n            this.axis.zoomFactor = (currentScrollWidth >= this.width - 1 && (this.startX - currentZPWidth) <= 0) ? 1 : this.zoomFactor;\n        }\n        if (this.isLazyLoad) {\n            var moveLength = this.previousRectX - this.startX;\n            if ((moveLength > 0 || moveLength < 0) && this.isThumbDrag) {\n                var thumbMove = moveLength < 0 ? 'RightMove' : 'LeftMove';\n                if (thumbMove === 'RightMove') {\n                    this.startX = (this.startX + Math.abs(moveLength)) < this.width - circleRadius ? this.startX :\n                        this.width - circleRadius - this.scrollElements.thumbRectWidth;\n                }\n                else {\n                    this.startX = (this.startX + this.scrollElements.thumbRectWidth - Math.abs(moveLength)) > circleRadius ?\n                        this.startX : circleRadius;\n                }\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth, thumbMove);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n            if (this.isResizeLeft || this.isResizeRight) {\n                args = this.calculateLazyRange(this.startX, this.scrollElements.thumbRectWidth);\n                if (args) {\n                    this.component.trigger(scrollEnd, args);\n                    this.scrollStarted = false;\n                }\n            }\n        }\n        this.isThumbDrag = false;\n        this.isResizeLeft = false;\n        this.isResizeRight = false;\n        this.isScrollEnd = false;\n        this.component.isScrolling = false;\n        if (this.scrollStarted && !this.isLazyLoad) {\n            this.component.trigger(scrollEnd, this.getArgs(scrollChanged, this.startRange, this.startZoomPosition, this.startZoomFactor));\n            this.scrollStarted = false;\n        }\n        /**\n         * Customer issue\n         * Task ID - EJ2-28898\n         * Chart's height setted is removed here.\n         */\n        if (this.isCustomHeight) {\n            this.component.element.style.height = null;\n        }\n    };\n    ScrollBar.prototype.calculateMouseWheelRange = function (scrollThumbX, scrollThumbWidth) {\n        var zoomFactor;\n        var zoomPosition;\n        var currentStart;\n        var currentEnd;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        if ((scrollThumbX + scrollThumbWidth + circleRadius) <= this.width) {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = scrollThumbWidth / (this.width);\n        }\n        currentStart = range.min + zoomPosition * range.delta;\n        currentEnd = currentStart + zoomFactor * range.delta;\n        if (currentEnd) {\n            args = { axis: this.axis, currentRange: this.getStartEnd(currentStart, currentEnd, true), previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    ;\n    /**\n     * Range calculation for lazy loading\n     */\n    ScrollBar.prototype.calculateLazyRange = function (scrollThumbX, scrollThumbWidth, thumbMove) {\n        var currentScrollWidth = scrollThumbWidth;\n        var zoomFactor;\n        var zoomPosition;\n        var currentStart;\n        var currentEnd;\n        var args;\n        var range = this.scrollRange;\n        var previousRange = this.getStartEnd(this.previousStart, this.previousEnd, false);\n        var circleRadius = 8;\n        var circleWidth = 16;\n        if (this.isResizeRight || thumbMove === 'RightMove') {\n            currentScrollWidth = this.isResizeRight ? currentScrollWidth + circleWidth : currentScrollWidth;\n            zoomFactor = (currentScrollWidth + circleRadius) / this.width;\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : this.axis.zoomPosition;\n            currentStart = thumbMove === 'RightMove' ? (range.min + zoomPosition * range.delta) : this.previousStart;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        else if (this.isResizeLeft || thumbMove === 'LeftMove') {\n            zoomPosition = (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = currentScrollWidth / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = thumbMove === 'LeftMove' ? (currentStart + zoomFactor * range.delta) : this.previousEnd;\n        }\n        else if (this.isThumbDrag) {\n            zoomPosition = thumbMove === 'RightMove' ? (scrollThumbX + circleRadius) / this.width : (scrollThumbX - circleRadius) / this.width;\n            zoomFactor = (this.scrollElements.thumbRectWidth) / this.width;\n            currentStart = range.min + zoomPosition * range.delta;\n            currentStart = currentStart >= range.min ? currentStart : range.min;\n            currentEnd = currentStart + zoomFactor * range.delta;\n        }\n        if (currentEnd) {\n            args = { axis: (this.component.isBlazor ? {} : this.axis), currentRange: this.getStartEnd(currentStart, currentEnd, true),\n                previousAxisRange: previousRange };\n        }\n        return args;\n    };\n    /**\n     * Get start and end values\n     */\n    ScrollBar.prototype.getStartEnd = function (start, end, isCurrentStartEnd) {\n        var range;\n        var valueType = this.valueType;\n        if ((valueType === 'DateTime' || valueType === 'DateTimeCategory') && isCurrentStartEnd) {\n            this.previousStart = start;\n            this.previousEnd = end;\n        }\n        else if (isCurrentStartEnd) {\n            this.previousStart = Math.round(start);\n            this.previousEnd = Math.ceil(end);\n        }\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = Math.round(start);\n                end = Math.ceil(end);\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = new Date(start);\n                end = new Date(end);\n                break;\n        }\n        return range = { minimum: start, maximum: end };\n    };\n    /**\n     * To render scroll bar\n     * @private\n     */\n    ScrollBar.prototype.render = function (isScrollExist) {\n        if (this.component.zoomModule || (isScrollExist && this.axis.scrollbarSettings.enable)) {\n            this.getDefaults();\n        }\n        this.getTheme();\n        this.removeScrollSvg();\n        createScrollSvg(this, this.component.svgRenderer);\n        this.wireEvents(this.svgObject);\n        this.svgObject.appendChild(this.scrollElements.renderElements(this, this.component.svgRenderer));\n        return this.svgObject;\n    };\n    /**\n     * Theming for scrollabr\n     */\n    ScrollBar.prototype.getTheme = function () {\n        this.scrollbarThemeStyle = getScrollbarThemeColor(this.component.theme);\n    };\n    /**\n     * Method to remove existing scrollbar\n     */\n    ScrollBar.prototype.removeScrollSvg = function () {\n        if (document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name)) {\n            remove(document.getElementById(this.component.element.id + '_scrollBar_svg' + this.axis.name));\n        }\n    };\n    /**\n     * Method to set cursor fpr scrollbar\n     * @param target\n     */\n    ScrollBar.prototype.setCursor = function (target) {\n        var id = target.id;\n        this.svgObject.style.cursor = id.indexOf('scrollBarThumb_') > -1 || id.indexOf('_gripCircle') > -1 ?\n            '-webkit-grab' : (id.indexOf('Circle_') > -1 || id.indexOf('Arrow_') > -1) ? this.isVertical ? 'ns-resize' :\n            'ew-resize' : 'auto';\n    };\n    /**\n     * Method to set theme for sollbar\n     * @param target\n     */\n    ScrollBar.prototype.setTheme = function (target) {\n        var id = target.id;\n        var isLeftHover = id.indexOf('_leftCircle_') > -1 || id.indexOf('_leftArrow_') > -1;\n        var isRightHover = id.indexOf('_rightCircle_') > -1 || id.indexOf('_rightArrow_') > -1;\n        var style = this.scrollbarThemeStyle;\n        var leftArrowEle = this.scrollElements.leftArrowEle;\n        var rightArrowEle = this.scrollElements.rightArrowEle;\n        var leftCircleEle = this.scrollElements.leftCircleEle;\n        var rightCircleEle = this.scrollElements.rightCircleEle;\n        var isAxis = this.isCurrentAxis(target, leftArrowEle);\n        leftCircleEle.style.fill = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.fill = isRightHover && isAxis ? style.circleHover : style.circle;\n        leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n        rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        if (this.component.theme === 'HighContrastLight') {\n            leftArrowEle.style.fill = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            leftArrowEle.style.stroke = isLeftHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.fill = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            rightArrowEle.style.stroke = isRightHover && isAxis ? style.arrowHover : style.arrow;\n            leftCircleEle.style.stroke = isLeftHover && isAxis ? style.circleHover : style.circle;\n            rightCircleEle.style.stroke = isRightHover && isAxis ? style.circleHover : style.circle;\n        }\n    };\n    /**\n     * To check current axis\n     * @param target\n     * @param ele\n     */\n    ScrollBar.prototype.isCurrentAxis = function (target, ele) {\n        return (target.id.split('_')[2] === ele.id.split('_')[2]);\n    };\n    /**\n     * Method to resize thumb\n     * @param e\n     */\n    ScrollBar.prototype.resizeThumb = function (e) {\n        var currentWidth;\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        var thumbX = this.previousRectX;\n        // let mouseXY: number = this.isVertical ? this.mouseY : this.mouseX;\n        var mouseXY = (this.isVertical && this.axis.isInversed) ? this.mouseY : this.isVertical ? this.width -\n            this.mouseY : this.axis.isInversed ? this.width - this.mouseX : this.mouseX;\n        var diff = Math.abs(this.previousXY - mouseXY);\n        if (this.isResizeLeft && mouseXY >= 0) {\n            var currentX = thumbX + (mouseXY > this.previousXY ? diff : -diff);\n            currentWidth = currentX - circleRadius >= 0 ? this.previousWidth + (mouseXY > this.previousXY ? -diff : diff) :\n                this.previousWidth;\n            currentX = currentX - circleRadius >= 0 ? currentX : thumbX;\n            if (currentWidth >= minThumbWidth && mouseXY < currentX + currentWidth) {\n                this.scrollElements.thumbRectX = this.previousRectX = currentX;\n                this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n                this.previousXY = mouseXY;\n                this.positionThumb(currentX, currentWidth);\n                this.setZoomFactorPosition(currentX, currentWidth);\n            }\n        }\n        else if (this.isResizeRight) {\n            currentWidth = mouseXY >= minThumbWidth + this.scrollElements.thumbRectX && mouseXY <= this.width - circleRadius ?\n                mouseXY - this.scrollElements.thumbRectX : this.previousWidth;\n            this.scrollElements.thumbRectWidth = this.previousWidth = currentWidth;\n            this.previousXY = mouseXY;\n            this.positionThumb(this.startX, currentWidth);\n            this.setZoomFactorPosition(this.startX, currentWidth);\n            if (!this.isLazyLoad) {\n                this.setZoomFactorPosition(this.startX, currentWidth);\n            }\n        }\n    };\n    /**\n     * Method to position the scrollbar thumb\n     * @param currentX\n     * @param currentWidth\n     */\n    ScrollBar.prototype.positionThumb = function (currentX, currentWidth) {\n        var circlePadding = 3;\n        var elem = this.scrollElements;\n        var gripWidth = 14;\n        var gripCircleDiameter = 2;\n        var padding = gripWidth / 2 - gripCircleDiameter;\n        elem.slider.setAttribute('x', currentX.toString());\n        elem.slider.setAttribute('width', currentWidth.toString());\n        elem.leftCircleEle.setAttribute('cx', currentX.toString());\n        elem.rightCircleEle.setAttribute('cx', (currentX + currentWidth).toString());\n        elem.setArrowDirection(currentX, currentWidth, this.height);\n        elem.gripCircle.setAttribute('transform', 'translate(' + (currentX + currentWidth / 2 + ((this.isVertical ? 1 : -1) * padding)) +\n            ',' + (this.isVertical ? '10' : '5') + ') rotate(' + (this.isVertical ? '180' : '0') + ')');\n    };\n    /**\n     * Method to get default values\n     */\n    ScrollBar.prototype.getDefaults = function () {\n        var axis = this.axis;\n        if (this.axis.scrollbarSettings.enable) {\n            this.isLazyLoad = true;\n            this.getLazyDefaults(axis);\n        }\n        var circleRadius = 8;\n        var padding = 5;\n        var gripWidth = 14;\n        var minThumbWidth = circleRadius * 2 + padding * 2 + gripWidth;\n        this.isVertical = axis.orientation === 'Vertical';\n        var lazyRange = axis.scrollbarSettings.range;\n        this.zoomFactor = this.isLazyLoad ? this.zoomFactor : axis.zoomFactor;\n        this.zoomPosition = this.isLazyLoad ? this.zoomPosition : axis.zoomPosition;\n        var currentWidth = this.zoomFactor * (this.isVertical ? axis.rect.height : axis.rect.width);\n        currentWidth = currentWidth > minThumbWidth ? currentWidth : minThumbWidth;\n        this.scrollX = axis.rect.x;\n        this.scrollY = axis.rect.y;\n        this.width = this.isVertical ? axis.rect.height : axis.rect.width;\n        this.height = 16;\n        var currentX = this.zoomPosition * (this.isVertical ? axis.rect.height : this.width);\n        var minThumbX = (this.width - minThumbWidth - circleRadius);\n        this.scrollElements.thumbRectX = currentX > minThumbX ? minThumbX : currentX < circleRadius ? circleRadius : currentX;\n        this.scrollElements.thumbRectWidth = ((currentWidth + this.scrollElements.thumbRectX) < this.width - (circleRadius * 2))\n            ? currentWidth : this.width - this.scrollElements.thumbRectX - circleRadius;\n    };\n    /**\n     * Lazy load default values\n     */\n    ScrollBar.prototype.getLazyDefaults = function (axis) {\n        var start;\n        var end;\n        var valueType = axis.valueType;\n        var scrollbarSettings = axis.scrollbarSettings;\n        this.valueType = valueType = (!scrollbarSettings.range.minimum || !scrollbarSettings.range.maximum) &&\n            scrollbarSettings.pointsLength ? 'Double' : valueType;\n        var range = axis.scrollbarSettings.range;\n        var visibleRange = axis.visibleRange;\n        var pointsLength = axis.scrollbarSettings.pointsLength;\n        var zoomFactor;\n        var zoomPosition;\n        var option = {\n            skeleton: 'full',\n            type: 'dateTime'\n        };\n        var dateParser = this.component.intl.getDateParser(option);\n        var dateFormatter = this.component.intl.getDateFormat(option);\n        switch (valueType) {\n            case 'Double':\n            case 'Category':\n            case 'Logarithmic':\n                start = range.minimum ? range.minimum : pointsLength ? 0 : visibleRange.min;\n                end = range.maximum ? range.maximum : pointsLength ? (pointsLength - 1) : visibleRange.max;\n                break;\n            case 'DateTime':\n            case 'DateTimeCategory':\n                start = range.minimum ? Date.parse(dateParser(dateFormatter(range.minimum))) : visibleRange.min;\n                end = range.maximum ? Date.parse(dateParser(dateFormatter(range.maximum))) : visibleRange.max;\n                break;\n        }\n        start = Math.min(start, visibleRange.min);\n        end = Math.max(end, visibleRange.max);\n        zoomFactor = (visibleRange.max - visibleRange.min) / (end - start);\n        zoomPosition = (visibleRange.min - start) / (end - start);\n        this.zoomFactor = range.minimum || range.maximum ? zoomFactor : (this.axis.maxPointLength / axis.scrollbarSettings.pointsLength);\n        this.zoomPosition = range.minimum || range.maximum ? zoomPosition : axis.zoomPosition;\n        this.scrollRange.min = start;\n        this.scrollRange.max = end;\n        this.scrollRange.delta = end - start;\n        this.previousStart = visibleRange.min;\n        this.previousEnd = visibleRange.max;\n    };\n    /**\n     * Method to get log range\n     */\n    ScrollBar.prototype.getLogRange = function (axis) {\n        var logRange;\n        var range = axis.scrollbarSettings.range;\n        var start = logBase(range.minimum, axis.logBase);\n        start = isFinite(start) ? start : range.minimum;\n        var end = logBase(range.maximum, axis.logBase);\n        end = isFinite(start) ? end : range.maximum;\n        logRange = { minimum: Math.floor(start / 1), maximum: Math.ceil(end / 1) };\n        return logRange;\n    };\n    /**\n     * Method for injecting scrollbar module\n     * @param axis\n     * @param component\n     */\n    ScrollBar.prototype.injectTo = function (axis, component) {\n        axis.zoomingScrollBar = new ScrollBar(component, axis);\n    };\n    /**\n     * Method to destroy scrollbar\n     */\n    ScrollBar.prototype.destroy = function () {\n        var _this = this;\n        if (this.axes) {\n            this.axes.map(function (axis) {\n                axis.zoomingScrollBar.destroy();\n            });\n        }\n        else {\n            this.elements.map(function (element) {\n                _this.unWireEvents(element);\n                remove(element.firstChild);\n            });\n            this.elements = [];\n        }\n    };\n    /**\n     * Method to get scrollbar module name\n     */\n    ScrollBar.prototype.getModuleName = function () {\n        return 'ScrollBar';\n    };\n    ScrollBar.prototype.getArgs = function (eventName, range, zoomPosition, zoomFactor, currentRanges) {\n        var scrollArgs = {\n            axis: (this.component.isBlazor ? {} : this.axis),\n            name: eventName,\n            range: this.axis.visibleRange,\n            zoomFactor: this.axis.zoomFactor,\n            zoomPosition: this.axis.zoomPosition,\n            previousRange: range,\n            previousZoomFactor: zoomFactor,\n            previousZoomPosition: zoomPosition,\n            currentRange: currentRanges\n        };\n        return scrollArgs;\n    };\n    return ScrollBar;\n}());\nexport { ScrollBar };\n"]},"metadata":{},"sourceType":"module"}