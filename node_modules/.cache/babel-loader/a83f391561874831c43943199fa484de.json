{"ast":null,"code":"import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\n\nvar PdfSectionCollection =\n/** @class */\nfunction () {\n  //constructor\n\n  /**\n   * Initializes a new instance of the `PdfSectionCollection` class.\n   * @private\n   */\n  function PdfSectionCollection(document) {\n    /**\n     * @hidden\n     * @private\n     */\n    this.sections = [];\n    /**\n     * @hidden\n     * @private\n     */\n\n    this.dictionaryProperties = new DictionaryProperties(); // if (document === null) {\n    //     throw new Error('ArgumentNullException : document');\n    // }\n\n    this.pdfDocument = document.clone();\n    this.initialize();\n  }\n\n  Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n    //Properties\n\n    /**\n     * Gets the `Section` collection.\n     */\n    get: function () {\n      return this.sections;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n    /**\n     * Gets a parent `document`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDocument;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n    /**\n     * Gets the `number of sections` in a document.\n     * @private\n     */\n    get: function () {\n      return this.sections.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n    /**\n     * Gets the wrapped `element`.\n     * @private\n     */\n    get: function () {\n      return this.pages;\n    },\n    enumerable: true,\n    configurable: true\n  }); //Methods\n\n  /**\n   * `Initializes the object`.\n   * @private\n   */\n\n  PdfSectionCollection.prototype.initialize = function () {\n    this.sectionCount = new PdfNumber(0);\n    this.sectionCollection = new PdfArray();\n    this.pages = new PdfDictionary();\n    this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n    this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n    this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n    this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n    this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n    this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n  };\n  /**\n   * Initializes a new instance of the `PdfSectionCollection` class.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n    if (index < 0 || index >= this.count) {\n      throw new Error('IndexOutOfRangeException()');\n    }\n\n    return this.sections[index];\n  };\n  /**\n   * In fills dictionary by the data from `Page settings`.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n    // if (container === null) {\n    //     throw new Error('ArgumentNullException : container');\n    // }\n    // if (pageSettings === null) {\n    //     throw new Error('ArgumentNullException : pageSettings');\n    // }\n    var bounds = new RectangleF(new PointF(), pageSettings.size);\n    container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n  };\n  /**\n   * `Adds` the specified section.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.add = function (section) {\n    if (typeof section === 'undefined') {\n      var section_1 = new PdfSection(this.pdfDocument);\n      this.add(section_1);\n      return section_1;\n    } else {\n      // if (section === null) {\n      //     throw new Error('ArgumentNullException : section');\n      // }\n      var r = this.checkSection(section);\n      this.sections.push(section);\n      section.parent = this;\n      this.sectionCollection.add(r);\n      return this.sections.indexOf(section);\n    }\n  };\n  /**\n   * `Checks` if the section is within the collection.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.checkSection = function (section) {\n    var r = new PdfReferenceHolder(section);\n    var contains = this.sectionCollection.contains(r); // if (contains) {\n    //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n    // }\n\n    return r;\n  };\n  /**\n   * Catches the Save event of the dictionary to `count the pages`.\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.countPages = function () {\n    var count = 0;\n    this.sections.forEach(function (n) {\n      return count += n.count;\n    });\n    return count;\n  };\n  /**\n   * Catches the Save event of the dictionary to `count the pages`.\n   * @hidden\n   * @private\n   */\n\n\n  PdfSectionCollection.prototype.beginSave = function () {\n    this.sectionCount.intValue = this.countPages();\n  }; //Fields\n\n  /**\n   * Rotate factor for page `rotation`.\n   * @default 90\n   * @private\n   */\n\n\n  PdfSectionCollection.rotateFactor = 90;\n  return PdfSectionCollection;\n}();\n\nexport { PdfSectionCollection };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-section-collection.js"],"names":["PdfNumber","PdfName","PdfArray","PdfDictionary","SaveSectionCollectionEventHandler","PdfReferenceHolder","RectangleF","PointF","PdfSection","DictionaryProperties","PdfSectionCollection","document","sections","dictionaryProperties","pdfDocument","clone","initialize","Object","defineProperty","prototype","get","enumerable","configurable","length","pages","sectionCount","sectionCollection","beginSave","items","setValue","type","kids","count","resources","setPageSettings","pageSettings","pdfSectionCollection","index","Error","container","bounds","size","mediaBox","fromRectangle","add","section","section_1","r","checkSection","push","parent","indexOf","contains","countPages","forEach","n","intValue","rotateFactor"],"mappings":"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","sourcesContent":["import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n"]},"metadata":{},"sourceType":"module"}