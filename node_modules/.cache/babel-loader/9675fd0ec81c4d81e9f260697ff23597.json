{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\n\nvar BaseSelection =\n/** @class */\nfunction () {\n  function BaseSelection(control) {\n    this.control = control;\n  }\n  /**\n   * To create selection styles for series\n   */\n\n\n  BaseSelection.prototype.seriesStyles = function () {\n    var seriesclass;\n    var style = document.getElementById(this.styleId);\n    var pattern = '{}';\n    var fill;\n    var opacity;\n    var selectionPattern = this.control.selectionPattern;\n    var highlightPattern = this.control.highlightPattern;\n\n    if (isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n      style = document.createElement('style');\n      style.setAttribute('id', this.styleId);\n\n      for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n        var series = _a[_i];\n        var visibleSeries = this.control.visibleSeries[series.index] || this.control.visibleSeries[series.index];\n\n        if ((!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) && (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n          var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n\n          if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' || visibleSeries.type === 'Pyramid') {\n            for (var i = 0; i < visibleSeries.points.length; i++) {\n              opacity = visibleSeries.opacity;\n              fill = this.pattern(this.control, visibleSeries.points[i].color, series.index, patternName, opacity);\n              pattern = '{ fill:' + fill + '}';\n            }\n          } else if (visibleSeries.type) {\n            opacity = visibleSeries.opacity;\n            fill = this.pattern(this.control, visibleSeries.interior, series.index, patternName, opacity);\n            pattern = '{ fill:' + fill + '}';\n          }\n        }\n\n        seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' + this.styleId + '_series_' + series.index + '> *';\n        pattern = pattern.indexOf('None') > -1 ? '{}' : pattern;\n        style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n      }\n\n      style.innerHTML += '.' + this.unselected + ' { opacity:' + 0.3 + ';} ';\n      document.body.appendChild(style);\n    }\n  };\n  /**\n   * To create the pattern for series/points\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n    var backgroundColor = '#ffffff';\n    var svg;\n    svg = chart.svgObject;\n    var pattern;\n    var pathOptions = [];\n    var patternGroup = {\n      'id': patternName + '_Selection' + '_' + index,\n      'patternUnits': 'userSpaceOnUse'\n    };\n    var heightStr = 'height';\n    var widthStr = 'width';\n    var width = 10;\n    var height = 12;\n    var patternNum = 6;\n\n    switch (patternName) {\n      case 'Dots':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 7,\n          'height': 7,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'cx': 3,\n          'cy': 3,\n          'r': 2,\n          'stroke-width': 1,\n          'fill': color,\n          'name': 'circle'\n        };\n        break;\n\n      case 'Pacman':\n        patternGroup[heightStr] = '18.384';\n        patternGroup[widthStr] = '17.917';\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': 17.917,\n          'height': 18.384,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        }; // tslint:disable-next-line:max-line-length\n\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Chessboard':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'x': 0,\n          'y': 0,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[2] = {\n          'x': 5,\n          'y': 5,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        break;\n\n      case 'Crosshatch':\n        patternGroup[heightStr] = patternGroup[widthStr] = '8';\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 8,\n          'height': 8,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M0 0L8 8ZM8 0L0 8Z',\n          'stroke-width': 1,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'DiagonalForward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'DiagonalBackward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'Grid':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n          'stroke-width': 1,\n          'stroke': color\n        };\n        break;\n\n      case 'Turquoise':\n        var turquoiseNum = 17;\n        var turstrokewidth = 1;\n        patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': turquoiseNum,\n          'height': turquoiseNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[5] = {\n          'name': 'path',\n          'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[6] = {\n          'name': 'path',\n          'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[7] = {\n          'name': 'path',\n          'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Star':\n        var starNum = 21;\n        patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': starNum,\n          'height': starNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          // tslint:disable-next-line:max-line-length\n          'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Triangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Circle':\n        var circleNum = 9;\n        patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': circleNum,\n          'height': circleNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.125,\n          'cy': 3.875,\n          'r': 3.625,\n          'stroke-width': 1,\n          'fill': color\n        };\n        break;\n\n      case 'Tile':\n        var tileNum = 18;\n        var strokeWidth = 1;\n        patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': tileNum,\n          'height': tileNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,9L0 0 9 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M9,9L9 0 18 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M0,18L0 9 9 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M9,18L9 9 18 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'HorizontalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'VerticalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Rectangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': height,\n          'height': height,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        pathOptions[2] = {\n          'name': 'rect',\n          'x': 7,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n\n      case 'Box':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': 13,\n          'height': 13,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1.5,\n          'y': 1.5,\n          'width': width,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n\n      case 'HorizontalStripe':\n        patternGroup[heightStr] = height;\n        patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'VerticalStripe':\n        patternGroup[heightStr] = width;\n        patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Bubble':\n        var bubNum = 20;\n        patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': bubNum,\n          'height': bubNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.217,\n          'cy': 11.325,\n          'r': 3.429,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        pathOptions[2] = {\n          'name': 'circle',\n          'cx': 13.328,\n          'cy': 6.24,\n          'r': 4.884,\n          'stroke-width': 1,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'circle',\n          'cx': 13.277,\n          'cy': 14.66,\n          'r': 3.018,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        break;\n    }\n\n    var svgRenderer = chart.svgRenderer || chart.renderer;\n    pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n    this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n    svg.appendChild(pattern);\n    return 'url(#' + patternName + '_' + 'Selection' + '_' + index + ')';\n  };\n  /**\n   * To load the pattern into svg\n   */\n\n\n  BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n    var i;\n\n    for (i = 0; i < options.length; i++) {\n      var path = svgRenderer.createPattern(options[i], options[i].name);\n      pattern.appendChild(path);\n    }\n  };\n  /**\n   * To concat indexes\n   */\n\n\n  BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n    return userIndexes.concat(localIndexes);\n  };\n  /**\n   * Selected points series visibility checking on legend click\n   */\n\n\n  BaseSelection.prototype.checkVisibility = function (selectedIndexes) {\n    if (!selectedIndexes) {\n      return false;\n    }\n\n    var visible = false;\n    var uniqueSeries = [];\n\n    for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n      var index = selectedIndexes_1[_i];\n\n      if (uniqueSeries.indexOf(index.series) === -1) {\n        uniqueSeries.push(index.series);\n      }\n    }\n\n    for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n      var index = uniqueSeries_1[_a];\n\n      if (this.control.series[index].visible) {\n        visible = true;\n        break;\n      }\n    }\n\n    return visible;\n  };\n  /**\n   * To add svg element style class\n   * @private\n   */\n\n\n  BaseSelection.prototype.addSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n    elementClassName += elementClassName !== '' ? ' ' : '';\n\n    if (elementClassName.indexOf(className) === -1) {\n      element.setAttribute('class', elementClassName + className);\n    }\n  };\n  /**\n   * To remove svg element style class\n   * @private\n   */\n\n\n  BaseSelection.prototype.removeSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n\n    if (elementClassName.indexOf(className) > -1) {\n      element.setAttribute('class', elementClassName.replace(className, ''));\n    }\n  };\n  /**\n   * To get children from parent element\n   */\n\n\n  BaseSelection.prototype.getChildren = function (parent) {\n    var children = [];\n\n    for (var i = 0; i < parent.childNodes.length; i++) {\n      if (parent.childNodes[i].tagName !== 'defs') {\n        children.push(parent.childNodes[i]);\n      }\n    }\n\n    return children;\n  };\n\n  return BaseSelection;\n}();\n\nexport { BaseSelection };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/common/user-interaction/selection.js"],"names":["isNullOrUndefined","BaseSelection","control","prototype","seriesStyles","seriesclass","style","document","getElementById","styleId","pattern","fill","opacity","selectionPattern","highlightPattern","createElement","setAttribute","_i","_a","visibleSeries","length","series","index","patternName","indexOf","type","i","points","color","interior","selectionStyle","innerHTML","unselected","body","appendChild","chart","backgroundColor","svg","svgObject","pathOptions","patternGroup","heightStr","widthStr","width","height","patternNum","turquoiseNum","turstrokewidth","starNum","circleNum","tileNum","strokeWidth","bubNum","svgRenderer","renderer","createPattern","loadPattern","options","path","name","concatIndexes","userIndexes","localIndexes","concat","checkVisibility","selectedIndexes","visible","uniqueSeries","selectedIndexes_1","push","uniqueSeries_1","addSvgClass","element","className","elementClassName","getAttribute","removeSvgClass","replace","getChildren","parent","children","childNodes","tagName"],"mappings":"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","sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\nvar BaseSelection = /** @class */ (function () {\n    function BaseSelection(control) {\n        this.control = control;\n    }\n    /**\n     * To create selection styles for series\n     */\n    BaseSelection.prototype.seriesStyles = function () {\n        var seriesclass;\n        var style = document.getElementById(this.styleId);\n        var pattern = '{}';\n        var fill;\n        var opacity;\n        var selectionPattern = this.control.selectionPattern;\n        var highlightPattern = this.control.highlightPattern;\n        if (isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n            style = document.createElement('style');\n            style.setAttribute('id', this.styleId);\n            for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n                var series = _a[_i];\n                var visibleSeries = this.control.visibleSeries[series.index] ||\n                    this.control.visibleSeries[series.index];\n                if ((!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) &&\n                    (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n                    var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n                    if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' ||\n                        visibleSeries.type === 'Pyramid') {\n                        for (var i = 0; i < visibleSeries.points.length; i++) {\n                            opacity = visibleSeries.opacity;\n                            fill = this.pattern(this.control, (visibleSeries.points[i]).color, series.index, patternName, opacity);\n                            pattern = '{ fill:' + fill + '}';\n                        }\n                    }\n                    else if (visibleSeries.type) {\n                        opacity = visibleSeries.opacity;\n                        fill = this.pattern(this.control, visibleSeries.interior, series.index, patternName, opacity);\n                        pattern = '{ fill:' + fill + '}';\n                    }\n                }\n                seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' +\n                    this.styleId + '_series_' + series.index + '> *';\n                pattern = (pattern.indexOf('None') > -1) ? '{}' : pattern;\n                style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n            }\n            style.innerHTML += '.' + this.unselected + ' { opacity:' + (0.3) + ';} ';\n            document.body.appendChild(style);\n        }\n    };\n    /**\n     * To create the pattern for series/points\n     */\n    // tslint:disable-next-line:max-func-body-length\n    BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n        var backgroundColor = '#ffffff';\n        var svg;\n        svg = chart.svgObject;\n        var pattern;\n        var pathOptions = [];\n        var patternGroup = { 'id': patternName + '_Selection' + '_' + index, 'patternUnits': 'userSpaceOnUse' };\n        var heightStr = 'height';\n        var widthStr = 'width';\n        var width = 10;\n        var height = 12;\n        var patternNum = 6;\n        switch (patternName) {\n            case 'Dots':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 7, 'height': 7, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'cx': 3,\n                    'cy': 3,\n                    'r': 2,\n                    'stroke-width': 1,\n                    'fill': color,\n                    'name': 'circle'\n                };\n                break;\n            case 'Pacman':\n                patternGroup[heightStr] = '18.384';\n                patternGroup[widthStr] = '17.917';\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': 17.917, 'height': 18.384,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                // tslint:disable-next-line:max-line-length\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z', 'stroke-width': 1, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Chessboard':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': width, 'height': width, 'fill': backgroundColor, 'opacity': opacity,\n                    'name': 'rect'\n                };\n                pathOptions[1] = { 'x': 0, 'y': 0, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                pathOptions[2] = { 'x': 5, 'y': 5, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                break;\n            case 'Crosshatch':\n                patternGroup[heightStr] = patternGroup[widthStr] = '8';\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 8, 'height': 8, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M0 0L8 8ZM8 0L0 8Z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalForward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalBackward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'Grid':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n                    'stroke-width': 1,\n                    'stroke': color\n                };\n                break;\n            case 'Turquoise':\n                var turquoiseNum = 17;\n                var turstrokewidth = 1;\n                patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': turquoiseNum, 'height': turquoiseNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[2] = {\n                    'name': 'path', 'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[3] = {\n                    'name': 'path', 'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[4] = {\n                    'name': 'path', 'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[5] = {\n                    'name': 'path', 'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[6] = {\n                    'name': 'path', 'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[7] = {\n                    'name': 'path', 'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Star':\n                var starNum = 21;\n                patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': starNum, 'height': starNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    // tslint:disable-next-line:max-line-length\n                    'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Triangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Circle':\n                var circleNum = 9;\n                patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': circleNum, 'height': circleNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'circle',\n                    'cx': 5.125,\n                    'cy': 3.875,\n                    'r': 3.625,\n                    'stroke-width': 1,\n                    'fill': color\n                };\n                break;\n            case 'Tile':\n                var tileNum = 18;\n                var strokeWidth = 1;\n                patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': tileNum, 'height': tileNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'path', 'd': 'M0,9L0 0 9 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[2] = { 'name': 'path', 'd': 'M9,9L9 0 18 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[3] = { 'name': 'path', 'd': 'M0,18L0 9 9 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[4] = { 'name': 'path', 'd': 'M9,18L9 9 18 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                break;\n            case 'HorizontalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Rectangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = { 'name': 'rect', 'width': height, 'height': height, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = { 'name': 'rect', 'x': 1, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                pathOptions[2] = { 'name': 'rect', 'x': 7, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                break;\n            case 'Box':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = { 'name': 'rect', 'width': 13, 'height': 13, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = {\n                    'name': 'rect', 'x': 1.5, 'y': 1.5, 'width': width, 'height': 9, 'fill': color,\n                    'opacity': opacity\n                };\n                break;\n            case 'HorizontalStripe':\n                patternGroup[heightStr] = height;\n                patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': height,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalStripe':\n                patternGroup[heightStr] = width;\n                patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Bubble':\n                var bubNum = 20;\n                patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': bubNum, 'height': bubNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'circle', 'cx': 5.217, 'cy': 11.325, 'r': 3.429, 'stroke-width': 1, 'fill': '#D0A6D1' };\n                pathOptions[2] = { 'name': 'circle', 'cx': 13.328, 'cy': 6.24, 'r': 4.884, 'stroke-width': 1, 'fill': color };\n                pathOptions[3] = {\n                    'name': 'circle', 'cx': 13.277, 'cy': 14.66, 'r': 3.018, 'stroke-width': 1,\n                    'fill': '#D0A6D1'\n                };\n                break;\n        }\n        var svgRenderer = (chart.svgRenderer || chart.renderer);\n        pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n        this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n        svg.appendChild(pattern);\n        return 'url(#' + patternName + '_' + 'Selection' + '_' + index + ')';\n    };\n    /**\n     * To load the pattern into svg\n     */\n    BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n        var i;\n        for (i = 0; i < options.length; i++) {\n            var path = svgRenderer.createPattern(options[i], options[i].name);\n            pattern.appendChild(path);\n        }\n    };\n    /**\n     * To concat indexes\n     */\n    BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n        return userIndexes.concat(localIndexes);\n    };\n    /**\n     * Selected points series visibility checking on legend click\n     */\n    BaseSelection.prototype.checkVisibility = function (selectedIndexes) {\n        if (!selectedIndexes) {\n            return false;\n        }\n        var visible = false;\n        var uniqueSeries = [];\n        for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n            var index = selectedIndexes_1[_i];\n            if (uniqueSeries.indexOf(index.series) === -1) {\n                uniqueSeries.push(index.series);\n            }\n        }\n        for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n            var index = uniqueSeries_1[_a];\n            if (this.control.series[index].visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    };\n    /**\n     * To add svg element style class\n     * @private\n     */\n    BaseSelection.prototype.addSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        elementClassName += ((elementClassName !== '') ? ' ' : '');\n        if (elementClassName.indexOf(className) === -1) {\n            element.setAttribute('class', elementClassName + className);\n        }\n    };\n    /**\n     * To remove svg element style class\n     * @private\n     */\n    BaseSelection.prototype.removeSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(className) > -1) {\n            element.setAttribute('class', elementClassName.replace(className, ''));\n        }\n    };\n    /**\n     * To get children from parent element\n     */\n    BaseSelection.prototype.getChildren = function (parent) {\n        var children = [];\n        for (var i = 0; i < parent.childNodes.length; i++) {\n            if (parent.childNodes[i].tagName !== 'defs') {\n                children.push(parent.childNodes[i]);\n            }\n        }\n        return children;\n    };\n    return BaseSelection;\n}());\nexport { BaseSelection };\n"]},"metadata":{},"sourceType":"module"}