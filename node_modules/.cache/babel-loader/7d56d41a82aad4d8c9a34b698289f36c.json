{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\n\nvar PdfStream =\n/** @class */\nfunction (_super) {\n  __extends(PdfStream, _super);\n\n  function PdfStream(dictionary, data) {\n    var _this = _super.call(this, dictionary) || this; //Constants\n\n    /**\n     * @hidden\n     * @private\n     */\n\n\n    _this.dicPrefix = 'stream';\n    /**\n     * @hidden\n     * @private\n     */\n\n    _this.dicSuffix = 'endstream';\n    /**\n     * Internal variable to hold `cloned object`.\n     * @private\n     */\n\n    _this.clonedObject2 = null;\n    /**\n     * @hidden\n     * @private\n     */\n\n    _this.bCompress = true;\n    /**\n     * @hidden\n     * @private\n     */\n\n    _this.isImageStream = false;\n    /**\n     * @hidden\n     * @private\n     */\n\n    _this.isFontStream = false;\n\n    if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n      _this.dataStream2 = [];\n      _this.dataStream2 = data;\n      _this.bCompress2 = false;\n    } else {\n      _this.dataStream2 = [];\n      _this.bCompress2 = true; //Pending\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n    /**\n     * Gets the `internal` stream.\n     * @private\n     */\n    get: function () {\n      return this.dataStream2;\n    },\n    set: function (value) {\n      this.dataStream2 = [];\n      this.dataStream2 = value;\n      this.modify();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStream.prototype, \"isImage\", {\n    /**\n     * Gets or sets 'is image' flag.\n     * @private\n     */\n    get: function () {\n      return this.isImageStream;\n    },\n    set: function (value) {\n      this.isImageStream = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStream.prototype, \"isFont\", {\n    /**\n     * Gets or sets 'is font' flag.\n     * @private\n     */\n    get: function () {\n      return this.isFontStream;\n    },\n    set: function (value) {\n      this.isFontStream = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStream.prototype, \"compress\", {\n    /**\n     * Gets or sets `compression` flag.\n     * @private\n     */\n    get: function () {\n      return this.bCompress;\n    },\n    set: function (value) {\n      this.bCompress = value;\n      this.modify();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStream.prototype, \"data\", {\n    /**\n     * Gets or sets the `data`.\n     * @private\n     */\n    get: function () {\n      return this.dataStream2;\n    },\n    set: function (value) {\n      this.dataStream2 = [];\n      this.dataStream2 = value;\n      this.modify();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Clear` the internal stream.\n   * @private\n   */\n\n  PdfStream.prototype.clearStream = function () {\n    this.internalStream = [];\n\n    if (this.items.containsKey(this.dictionaryProperties.filter)) {\n      this.remove(this.dictionaryProperties.filter);\n    }\n\n    this.bCompress = true;\n    this.modify();\n  };\n  /**\n   * `Writes` the specified string.\n   * @private\n   */\n\n\n  PdfStream.prototype.write = function (text) {\n    if (text == null) {\n      throw new Error('ArgumentNullException:text');\n    }\n\n    if (text.length <= 0) {\n      throw new Error('ArgumentException: Can not write an empty string, text');\n    }\n\n    this.dataStream2.push(text);\n    this.modify();\n  };\n  /**\n   * `Writes` the specified bytes.\n   * @private\n   */\n\n\n  PdfStream.prototype.writeBytes = function (data) {\n    if (data === null) {\n      throw new Error('ArgumentNullException:data');\n    }\n\n    if (data.length <= 0) {\n      throw new Error('ArgumentException: Can not write an empty bytes, data');\n    }\n\n    var text = '';\n\n    for (var i = 0; i < data.length; i++) {\n      text += String.fromCharCode(data[i]);\n    }\n\n    this.dataStream2.push(text);\n    this.modify();\n  };\n  /**\n   * Raises event `Cmap BeginSave`.\n   * @private\n   */\n\n\n  PdfStream.prototype.onCmapBeginSave = function () {\n    this.cmapBeginSave.sender.cmapBeginSave();\n  };\n  /**\n   * Raises event `Font Program BeginSave`.\n   * @private\n   */\n\n\n  PdfStream.prototype.onFontProgramBeginSave = function () {\n    this.fontProgramBeginSave.sender.fontProgramBeginSave();\n  };\n  /**\n   * `Compresses the content` if it's required.\n   * @private\n   */\n\n\n  PdfStream.prototype.compressContent = function (data, writer) {\n    if (this.bCompress) {\n      var byteArray = [];\n\n      for (var i = 0; i < data.length; i++) {\n        byteArray.push(data.charCodeAt(i));\n      }\n\n      var dataArray = new Uint8Array(byteArray);\n      var sw = new CompressedStreamWriter(); // data = 'Hello World!!!';\n\n      sw.write(dataArray, 0, dataArray.length);\n      sw.close();\n      data = sw.getCompressedString;\n      this.addFilter(this.dictionaryProperties.flatedecode);\n    }\n\n    return data;\n  };\n  /**\n   * `Adds a filter` to the filter array.\n   * @private\n   */\n\n\n  PdfStream.prototype.addFilter = function (filterName) {\n    var obj = this.items.getValue(this.dictionaryProperties.filter);\n\n    if (obj instanceof PdfReferenceHolder) {\n      var rh = obj;\n      obj = rh.object;\n    }\n\n    var array = obj;\n    var name = obj;\n\n    if (name != null) {\n      array = new PdfArray();\n      array.insert(0, name);\n      this.items.setValue(this.dictionaryProperties.filter, array);\n    }\n\n    name = new PdfName(filterName);\n\n    if (array == null) {\n      this.items.setValue(this.dictionaryProperties.filter, name);\n    } else {\n      array.insert(0, name);\n    }\n  };\n  /**\n   * `Saves` the object using the specified writer.\n   * @private\n   */\n\n\n  PdfStream.prototype.save = function (writer) {\n    if (typeof this.cmapBeginSave !== 'undefined') {\n      this.onCmapBeginSave();\n    }\n\n    if (typeof this.fontProgramBeginSave !== 'undefined') {\n      this.onFontProgramBeginSave();\n    }\n\n    var data = '';\n\n    for (var i = 0; i < this.data.length; i++) {\n      data = data + this.data[i];\n    }\n\n    if (data.length > 1 && !this.isImage && !this.isFont) {\n      data = 'q\\r\\n' + data + 'Q\\r\\n';\n    }\n\n    data = this.compressContent(data, writer);\n    var length = data.length;\n    this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n\n    _super.prototype.save.call(this, writer, false);\n\n    writer.write(this.dicPrefix);\n    writer.write(Operators.newLine);\n\n    if (data.length > 0) {\n      writer.write(data);\n    }\n\n    writer.write(Operators.newLine);\n    writer.write(this.dicSuffix);\n    writer.write(Operators.newLine);\n  };\n  /**\n   * Converts `bytes to string`.\n   * @private\n   */\n\n\n  PdfStream.bytesToString = function (byteArray) {\n    var output = '';\n\n    for (var i = 0; i < byteArray.length; i++) {\n      output = output + String.fromCharCode(byteArray[i]);\n    }\n\n    return output;\n  };\n\n  return PdfStream;\n}(PdfDictionary);\n\nexport { PdfStream };\n\nvar SaveCmapEventHandler =\n/** @class */\nfunction () {\n  /**\n   * New instance for `save section collection event handler` class.\n   * @private\n   */\n  function SaveCmapEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveCmapEventHandler;\n}();\n\nexport { SaveCmapEventHandler };\n\nvar SaveFontProgramEventHandler =\n/** @class */\nfunction () {\n  /**\n   * New instance for `save section collection event handler` class.\n   * @private\n   */\n  function SaveFontProgramEventHandler(sender) {\n    this.sender = sender;\n  }\n\n  return SaveFontProgramEventHandler;\n}();\n\nexport { SaveFontProgramEventHandler };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/primitives/pdf-stream.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfDictionary","PdfNumber","Operators","PdfName","PdfArray","PdfReferenceHolder","CompressedStreamWriter","PdfStream","_super","dictionary","data","_this","call","dicPrefix","dicSuffix","clonedObject2","bCompress","isImageStream","isFontStream","dataStream2","bCompress2","defineProperty","get","set","value","modify","enumerable","configurable","clearStream","internalStream","items","containsKey","dictionaryProperties","filter","remove","write","text","Error","length","push","writeBytes","i","String","fromCharCode","onCmapBeginSave","cmapBeginSave","sender","onFontProgramBeginSave","fontProgramBeginSave","compressContent","writer","byteArray","charCodeAt","dataArray","Uint8Array","sw","close","getCompressedString","addFilter","flatedecode","filterName","obj","getValue","rh","object","array","name","insert","setValue","save","isImage","isFont","newLine","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isImageStream = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isFontStream = false;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isImage\", {\n        /**\n         * Gets or sets 'is image' flag.\n         * @private\n         */\n        get: function () {\n            return this.isImageStream;\n        },\n        set: function (value) {\n            this.isImageStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"isFont\", {\n        /**\n         * Gets or sets 'is font' flag.\n         * @private\n         */\n        get: function () {\n            return this.isFontStream;\n        },\n        set: function (value) {\n            this.isFontStream = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isImage && !this.isFont) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n"]},"metadata":{},"sourceType":"module"}