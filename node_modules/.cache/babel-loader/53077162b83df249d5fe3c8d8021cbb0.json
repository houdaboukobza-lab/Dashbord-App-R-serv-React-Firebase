{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power GSM\\\\Desktop\\\\React-Fito-v1.0-9-April-2021V\\\\React-Fito-v1.0-9-April-2021V\\\\react-fito\\\\src\\\\jsx\\\\components\\\\charts\\\\Chartjs\\\\realtime.js\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar createReactClass = require(\"create-react-class\");\n\nconst data = {\n  datasets: [{\n    label: \"My First dataset\",\n    pointBackgroundColor: \"#fff\",\n    borderColor: \"#435EE0\",\n    backgroundColor: \"#435EE0\",\n    lineTension: 0,\n    data: [],\n    pointBorderWidth: 0,\n    pointRadius: 0\n  }]\n};\nconst options = {\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      display: false\n    }],\n    xAxes: [{\n      display: false,\n      type: \"realtime\",\n      realtime: {\n        onRefresh: function () {\n          data.datasets[0].data.push({\n            x: Date.now(),\n            y: Math.random() * 100\n          });\n        },\n        delay: 2000\n      }\n    }]\n  },\n  title: {\n    display: false\n  }\n};\nexport default createReactClass({\n  displayName: \"LineExample\",\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: data,\n        options: options,\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }, this);\n  }\n\n});","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/src/jsx/components/charts/Chartjs/realtime.js"],"names":["React","Line","createReactClass","require","data","datasets","label","pointBackgroundColor","borderColor","backgroundColor","lineTension","pointBorderWidth","pointRadius","options","tooltips","enabled","legend","display","scales","yAxes","xAxes","type","realtime","onRefresh","push","x","Date","now","y","Math","random","delay","title","displayName","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,0BAAP;;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,MAAMC,IAAI,GAAG;AACVC,EAAAA,QAAQ,EAAE,CACP;AACGC,IAAAA,KAAK,EAAE,kBADV;AAEGC,IAAAA,oBAAoB,EAAE,MAFzB;AAGGC,IAAAA,WAAW,EAAE,SAHhB;AAIGC,IAAAA,eAAe,EAAE,SAJpB;AAKGC,IAAAA,WAAW,EAAE,CALhB;AAMGN,IAAAA,IAAI,EAAE,EANT;AAOGO,IAAAA,gBAAgB,EAAE,CAPrB;AAQGC,IAAAA,WAAW,EAAE;AARhB,GADO;AADA,CAAb;AAeA,MAAMC,OAAO,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADG;AAIbC,EAAAA,MAAM,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GAJK;AAObC,EAAAA,MAAM,EAAE;AACLC,IAAAA,KAAK,EAAE,CACJ;AACGF,MAAAA,OAAO,EAAE;AADZ,KADI,CADF;AAMLG,IAAAA,KAAK,EAAE,CACJ;AACGH,MAAAA,OAAO,EAAE,KADZ;AAEGI,MAAAA,IAAI,EAAE,UAFT;AAGGC,MAAAA,QAAQ,EAAE;AACPC,QAAAA,SAAS,EAAE,YAAY;AACpBnB,UAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBD,IAAjB,CAAsBoB,IAAtB,CAA2B;AACxBC,YAAAA,CAAC,EAAEC,IAAI,CAACC,GAAL,EADqB;AAExBC,YAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAFK,WAA3B;AAIF,SANM;AAOPC,QAAAA,KAAK,EAAE;AAPA;AAHb,KADI;AANF,GAPK;AA6BbC,EAAAA,KAAK,EAAE;AACJf,IAAAA,OAAO,EAAE;AADL;AA7BM,CAAhB;AAkCA,eAAef,gBAAgB,CAAC;AAC7B+B,EAAAA,WAAW,EAAE,aADgB;;AAE7BC,EAAAA,MAAM,GAAG;AACN,wBACG;AAAA,6BACG,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE9B,IAAZ;AAAkB,QAAA,OAAO,EAAES,OAA3B;AAAoC,QAAA,MAAM,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADH;AAKF;;AAR4B,CAAD,CAA/B","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nvar createReactClass = require(\"create-react-class\");\n\nconst data = {\n   datasets: [\n      {\n         label: \"My First dataset\",\n         pointBackgroundColor: \"#fff\",\n         borderColor: \"#435EE0\",\n         backgroundColor: \"#435EE0\",\n         lineTension: 0,\n         data: [],\n         pointBorderWidth: 0,\n         pointRadius: 0,\n      },\n   ],\n};\n\nconst options = {\n   tooltips: {\n      enabled: false,\n   },\n   legend: {\n      display: false,\n   },\n   scales: {\n      yAxes: [\n         {\n            display: false,\n         },\n      ],\n      xAxes: [\n         {\n            display: false,\n            type: \"realtime\",\n            realtime: {\n               onRefresh: function () {\n                  data.datasets[0].data.push({\n                     x: Date.now(),\n                     y: Math.random() * 100,\n                  });\n               },\n               delay: 2000,\n            },\n         },\n      ],\n   },\n   title: {\n      display: false,\n   },\n};\n\nexport default createReactClass({\n   displayName: \"LineExample\",\n   render() {\n      return (\n         <div>\n            <Line data={data} options={options} height={100} />\n         </div>\n      );\n   },\n});\n"]},"metadata":{},"sourceType":"module"}