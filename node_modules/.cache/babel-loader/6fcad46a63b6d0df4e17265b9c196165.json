{"ast":null,"code":"/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter =\n/** @class */\nfunction () {\n  /**\n   * Initialize an instance of `PdfWriter` class.\n   * @private\n   */\n  function PdfWriter(stream) {\n    this.streamWriter = stream;\n  }\n\n  Object.defineProperty(PdfWriter.prototype, \"document\", {\n    //properties\n\n    /**\n     * Gets and Sets the `document`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDocument;\n    },\n    set: function (value) {\n      this.pdfDocument = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"position\", {\n    /**\n     * Gets the `position`.\n     * @private\n     */\n    get: function () {\n      return this.streamWriter.buffer.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"length\", {\n    /**\n     * Gets  the `length` of the stream'.\n     * @private\n     */\n    get: function () {\n      return this.streamWriter.buffer.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfWriter.prototype, \"stream\", {\n    /**\n     * Gets the `stream`.\n     * @private\n     */\n    get: function () {\n      var result = this.streamWriter;\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  }); //public Methods\n\n  /**\n   * `Writes the specified data`.\n   * @private\n   */\n\n  PdfWriter.prototype.write = function (overload) {\n    var data = [];\n    var tempOverload = overload;\n    this.streamWriter.write(tempOverload);\n  };\n\n  return PdfWriter;\n}();\n\nexport { PdfWriter };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-writer.js"],"names":["PdfWriter","stream","streamWriter","Object","defineProperty","prototype","get","pdfDocument","set","value","enumerable","configurable","buffer","size","result","write","overload","data","tempOverload"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,SAAS;AAAG;AAAe,YAAY;AACvC;AACJ;AACA;AACA;AACI,WAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACvB,SAAKC,YAAL,GAAoBD,MAApB;AACH;;AACDE,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,SAAS,CAACK,SAAhC,EAA2C,UAA3C,EAAuD;AACnD;;AACA;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,WAAZ;AACH,KARkD;AASnDC,IAAAA,GAAG,EAAE,UAAUC,KAAV,EAAiB;AAClB,WAAKF,WAAL,GAAmBE,KAAnB;AACH,KAXkD;AAYnDC,IAAAA,UAAU,EAAE,IAZuC;AAanDC,IAAAA,YAAY,EAAE;AAbqC,GAAvD;AAeAR,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,SAAS,CAACK,SAAhC,EAA2C,UAA3C,EAAuD;AACnD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,YAAL,CAAkBU,MAAlB,CAAyBC,IAAhC;AACH,KAPkD;AAQnDH,IAAAA,UAAU,EAAE,IARuC;AASnDC,IAAAA,YAAY,EAAE;AATqC,GAAvD;AAWAR,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,SAAS,CAACK,SAAhC,EAA2C,QAA3C,EAAqD;AACjD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKJ,YAAL,CAAkBU,MAAlB,CAAyBC,IAAhC;AACH,KAPgD;AAQjDH,IAAAA,UAAU,EAAE,IARqC;AASjDC,IAAAA,YAAY,EAAE;AATmC,GAArD;AAWAR,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,SAAS,CAACK,SAAhC,EAA2C,QAA3C,EAAqD;AACjD;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIQ,MAAM,GAAG,KAAKZ,YAAlB;AACA,aAAOY,MAAP;AACH,KARgD;AASjDJ,IAAAA,UAAU,EAAE,IATqC;AAUjDC,IAAAA,YAAY,EAAE;AAVmC,GAArD,EA7CuC,CAyDvC;;AACA;AACJ;AACA;AACA;;AACIX,EAAAA,SAAS,CAACK,SAAV,CAAoBU,KAApB,GAA4B,UAAUC,QAAV,EAAoB;AAC5C,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,YAAY,GAAGF,QAAnB;AACA,SAAKd,YAAL,CAAkBa,KAAlB,CAAwBG,YAAxB;AACH,GAJD;;AAKA,SAAOlB,SAAP;AACH,CApE8B,EAA/B;;AAqEA,SAASA,SAAT","sourcesContent":["/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriter` class.\n     * @private\n     */\n    function PdfWriter(stream) {\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        //properties\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter.buffer.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            var result = this.streamWriter;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public Methods\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (overload) {\n        var data = [];\n        var tempOverload = overload;\n        this.streamWriter.write(tempOverload);\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n"]},"metadata":{},"sourceType":"module"}