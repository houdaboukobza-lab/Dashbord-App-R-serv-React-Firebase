{"ast":null,"code":"import { ChartLocation, RectOption, isCollide, isOverlap } from '../../common/utils/helper';\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\nimport { getPoint, getRotatedRectangleCoordinates, isRotatedRectIntersect } from '../../common/utils/helper';\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\n\nvar DataLabel =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the data label module.\n   * @private\n   */\n  function DataLabel(chart) {\n    this.errorHeight = 0;\n    this.chart = chart;\n  }\n\n  DataLabel.prototype.initPrivateVariables = function (series, marker) {\n    var transform = '';\n    var clipPath = '';\n    var render = series.chart.renderer;\n    var index = series.index === undefined ? series.category : series.index;\n\n    if (series.chart.chartAreaType === 'Cartesian') {\n      transform = 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')';\n      clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\n    }\n\n    if (marker.dataLabel.visible) {\n      series.shapeElement = render.createGroup({\n        'id': this.chart.element.id + 'ShapeGroup' + index,\n        'transform': transform,\n        'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\n      });\n      series.textElement = render.createGroup({\n        'id': this.chart.element.id + 'TextGroup' + index,\n        'transform': transform,\n        'clip-path': clipPath\n      });\n    }\n\n    this.markerHeight = series.type === 'Scatter' || marker.visible ? marker.height / 2 : 0;\n    this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\n    this.calculateErrorHeight(series, series.marker.dataLabel.position);\n    this.chartBackground = this.chart.chartArea.background === 'transparent' ? this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n  };\n\n  DataLabel.prototype.calculateErrorHeight = function (series, position) {\n    if (!series.errorBar.visible) {\n      return null;\n    } else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n      var direction = series.errorBar.direction;\n      var positiveHeight = this.chart.errorBarModule.positiveHeight;\n      var negativeHeight = this.chart.errorBarModule.negativeHeight;\n\n      if (this.isRectSeries(series)) {\n        if (position === 'Top' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n\n        if (position === 'Outer' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Plus') {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      } else {\n        if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n          if ((direction === 'Both' || direction === 'Plus') && !series.chart.isTransposed) {\n            this.errorHeight = positiveHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n\n        if (position === 'Bottom' || position === 'Auto') {\n          if (direction === 'Both' || direction === 'Minus') {\n            this.errorHeight = negativeHeight;\n          } else {\n            this.errorHeight = 0;\n          }\n        }\n      }\n    } else {\n      this.errorHeight = 0;\n    }\n  };\n\n  DataLabel.prototype.isRectSeries = function (series) {\n    return series.isRectSeries || series.type === 'RangeArea';\n  };\n  /**\n   * Render the data label for series.\n   * @return {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  DataLabel.prototype.render = function (series, chart, dataLabel) {\n    // initialize the private variable\n    this.initPrivateVariables(series, series.marker);\n    var rect;\n    var labelLocation = {\n      x: 0,\n      y: 0\n    };\n    var rgbValue;\n    var contrast;\n    var argsData;\n    var border;\n    var textSize;\n    var angle;\n    var degree;\n    this.inverted = chart.requireInvertedAxis;\n    this.yAxisInversed = series.yAxis.isInversed;\n    var redraw = chart.redraw;\n    var isDataLabelOverlap = false;\n    var coordinatesAfterRotation = [];\n    var templateId = chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\n    var element = createElement('div', {\n      id: templateId\n    });\n    var visiblePoints = getVisiblePoints(series);\n    var point;\n    var rectCenterX;\n    var rectCenterY; // Data label point iteration started\n\n    for (var i = 0; i < visiblePoints.length; i++) {\n      point = visiblePoints[i];\n\n      if (!dataLabel.showZero && (point.y !== 0 || point.y === 0 && series.emptyPointSettings.mode === 'Zero')) {\n        return null;\n      }\n\n      this.margin = dataLabel.margin;\n      var labelText = [];\n      var labelLength = void 0;\n      var xPos = void 0;\n      var yPos = void 0;\n      var xValue = void 0;\n      var yValue = void 0;\n      var isRender = true;\n      var clip = series.clipRect;\n      var shapeRect = void 0;\n      isDataLabelOverlap = false;\n      angle = degree = dataLabel.angle;\n      border = {\n        width: dataLabel.border.width,\n        color: dataLabel.border.color\n      };\n      var argsFont = extend({}, getValue('properties', dataLabel.font), null, true);\n\n      if (point.symbolLocations.length && point.symbolLocations[0] || series.type === 'BoxAndWhisker' && point.regions.length) {\n        labelText = getLabelText(point, series, chart);\n        labelLength = labelText.length;\n\n        for (var i_1 = 0; i_1 < labelLength; i_1++) {\n          argsData = {\n            cancel: false,\n            name: textRender,\n            series: series,\n            point: point,\n            text: labelText[i_1],\n            border: border,\n            color: dataLabel.fill,\n            template: dataLabel.template,\n            font: argsFont,\n            location: labelLocation,\n            textSize: measureText(labelText[i_1], dataLabel.font)\n          };\n          chart.trigger(textRender, argsData);\n\n          if (!argsData.cancel) {\n            this.fontBackground = argsData.color;\n            this.isDataLabelShape(argsData);\n            this.markerHeight = series.type === 'Bubble' ? point.regions[0].height / 2 : this.markerHeight;\n\n            if (argsData.template !== null) {\n              this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i_1, redraw);\n            } else {\n              textSize = measureText(argsData.text, dataLabel.font);\n              rect = this.calculateTextPosition(point, series, textSize, dataLabel, i_1); // To check whether the polar radar chart datalabel intersects the axis label or not\n\n              if (chart.chartAreaType === 'PolarRadar') {\n                for (var _i = 0, _a = chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\n                  var rectRegion = _a[_i];\n\n                  if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\n                    isRender = false;\n                    break;\n                  }\n                }\n              }\n\n              var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height); //let notOverlapping: boolean;\n\n              if (dataLabel.enableRotation) {\n                var rectCoordinates = this.getRectanglePoints(rect);\n                rectCenterX = rect.x + rect.width / 2;\n                rectCenterY = rect.y + rect.height / 2;\n                coordinatesAfterRotation = getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle);\n                isDataLabelOverlap = this.isDataLabelOverlapWithChartBound(coordinatesAfterRotation, chart, clip);\n\n                if (!isDataLabelOverlap) {\n                  this.chart.rotatedDataLabelCollections.push(coordinatesAfterRotation);\n                  var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\n\n                  for (var index = currentPointIndex; index >= 0; index--) {\n                    if (this.chart.rotatedDataLabelCollections[currentPointIndex] && this.chart.rotatedDataLabelCollections[index - 1] && isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\n                      isDataLabelOverlap = true;\n                      this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\n                      break;\n                    }\n                  }\n                }\n              } else {\n                isDataLabelOverlap = isCollide(rect, chart.dataLabelCollections, clip);\n              }\n\n              if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\n                chart.dataLabelCollections.push(actualRect);\n\n                if (this.isShape) {\n                  shapeRect = chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i_1, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry), new Int32Array([clip.x, clip.y]));\n\n                  if (series.shapeElement) {\n                    series.shapeElement.appendChild(shapeRect);\n                  }\n                } // Checking the font color\n\n\n                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                xPos = rect.x + this.margin.left + textSize.width / 2 + labelLocation.x;\n                yPos = rect.y + this.margin.top + textSize.height * 3 / 4 + labelLocation.y;\n                labelLocation = {\n                  x: 0,\n                  y: 0\n                };\n\n                if (angle !== 0 && dataLabel.enableRotation) {\n                  // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\n                  xValue = rectCenterX; //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\n                  // (dataLabel.margin.bottom) / 2;\n\n                  yValue = rectCenterY;\n                  degree = angle > 360 ? angle - 360 : angle < -360 ? angle + 360 : angle;\n                } else {\n                  degree = 0;\n                  xValue = rect.x;\n                  yValue = rect.y;\n                }\n\n                textElement(chart.renderer, new TextOption(this.commonId + point.index + '_Text_' + i_1, xPos, yPos, 'middle', argsData.text, 'rotate(' + degree + ',' + xValue + ',' + yValue + ')', 'auto', degree), argsData.font, argsData.font.color || (contrast >= 128 || series.type === 'Hilo' ? 'black' : 'white'), series.textElement, false, redraw, true, false, series.chart.duration, series.clipRect);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (element.childElementCount) {\n      if (!chart.enableCanvas) {\n        appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw, // tslint:disable-next-line:align\n        false, 'x', 'y', null, '', false, false, null, chart.duration);\n      } else {\n        getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n      }\n    }\n  };\n  /**\n   * Get rect coordinates\n   */\n\n\n  DataLabel.prototype.getRectanglePoints = function (rect) {\n    var loc1 = new ChartLocation(rect.x, rect.y);\n    var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [loc1, loc2, loc3, loc4];\n  };\n\n  DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\n    for (var index = 0; index < rectCoordinates.length; index++) {\n      if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Render the data label template.\n   * @return {void}\n   * @private\n   */\n\n\n  DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\n    this.margin = {\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    };\n    var clip = series.clipRect;\n    var childElement = createTemplate(createElement('div', {\n      id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_' + point.index + (labelIndex ? '_' + labelIndex : ''),\n      styles: 'position: absolute;background-color:' + data.color + ';' + getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n    }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\n    this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\n  };\n\n  DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\n    var elementRect = measureElementRect(childElement, redraw);\n    var rect = this.calculateTextPosition(point, series, {\n      width: elementRect.width,\n      height: elementRect.height\n    }, dataLabel, labelIndex);\n    var clipWidth = 0;\n    var clipHeight = 0;\n\n    if (isReactCallback) {\n      clipWidth = series.clipRect.x + rect.x + elementRect.width > parentElement.clientWidth ? parentElement.clientWidth - (series.clipRect.x + rect.x) : 0;\n      clipHeight = series.points.length - 1 === point.index ? elementRect.height / 2 : 0;\n    }\n\n    childElement.style.left = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth + 'px';\n    childElement.style.top = (this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight + 'px';\n    var rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n    var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n    var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n    childElement.style.color = dataLabel.font.color || (Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000) >= 128 ? 'black' : 'white');\n\n    if (childElement.childElementCount && (!isCollide(rect, this.chart.dataLabelCollections, clip) || dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined || withIn(point.yValue, series.yAxis.visibleRange) || series.type.indexOf('Stacking') > -1 || series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange)) && withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y && parseFloat(childElement.style.left) >= hAxis.rect.x && parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height && parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n      this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n      appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\n\n      if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\n        this.doDataLabelAnimation(series, childElement);\n      } else if (this.chart.enableCanvas) {\n        parentElement.appendChild(childElement);\n      }\n    }\n  };\n\n  DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\n    var labelRegion = labelIndex > 1 ? series.type === 'Candle' ? point.regions[1] : point.regions[0] : point.regions[0];\n\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n\n    var location;\n    location = this.getLabelLocation(point, series, textSize, labelIndex);\n    var padding = 5;\n    var clipRect = series.clipRect;\n    var rect; // calculating alignment\n\n    if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n      this.locationX = location.x;\n      var alignmentValue = textSize.height + this.borderWidth * 2 + this.markerHeight + this.margin.bottom + this.margin.top + padding;\n      location.y = dataLabel.position === 'Auto' ? location.y : this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false); // calculating position\n\n      location.y = !this.isRectSeries(series) || series.type === 'BoxAndWhisker' ? this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) : this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n\n      if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n        location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\n      }\n    } else {\n      this.locationY = location.y;\n      var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n      location.x = dataLabel.position === 'Auto' ? location.x : this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n      location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n    }\n\n    rect = calculateRect(location, textSize, this.margin); // Checking the condition whether data Label has been exist the clip rect\n\n    if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) && !(rect.y > clipRect.y + clipRect.height || rect.x > clipRect.x + clipRect.width || rect.x + rect.width < 0 || rect.y + rect.height < 0)) {\n      rect.x = rect.x < 0 ? padding : rect.x;\n      rect.y = rect.y < 0 && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\n      rect.x -= rect.x + rect.width > clipRect.x + clipRect.width ? rect.x + rect.width - (clipRect.x + clipRect.width) + padding : 0;\n      rect.y -= rect.y + rect.height > clipRect.y + clipRect.height ? rect.y + rect.height - (clipRect.y + clipRect.height) + padding : 0;\n      this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n    }\n\n    return rect;\n  }; // Calculation label location for polar column draw types\n\n\n  DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\n    var padding = 5;\n    var columnRadius;\n    var chartWidth = this.chart.availableSize.width;\n    var alignmentSign = alignment === 'Center' ? 0 : alignment === 'Far' ? 1 : -1;\n    var angle = point.regionData.startAngle - 0.5 * Math.PI + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n\n    if (labelIndex === 0) {\n      columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    } else {\n      columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius : point.regionData.radius;\n    }\n\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n\n    if (series.drawType.indexOf('Stacking') > -1) {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.drawType.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    }\n\n    if (position === 'Outer') {\n      columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight : columnRadius - 2 * padding - this.markerHeight;\n    } else if (position === 'Middle') {\n      columnRadius = columnRadius / 2 + padding;\n\n      if (series.drawType === 'StackingColumn') {\n        columnRadius = point.regionData.innerRadius + (point.regionData.radius - point.regionData.innerRadius) / 2 + padding - size.height / 2;\n      }\n    } else if (position === 'Top') {\n      columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight : columnRadius + 2 * padding + this.markerHeight;\n    } else if (position === 'Bottom') {\n      columnRadius = 2 * padding;\n      columnRadius += series.drawType === 'StackingColumn' ? point.regionData.innerRadius + this.markerHeight : 0;\n    } else {\n      if (labelIndex === 0) {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding : series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n      } else {\n        columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n      }\n    }\n\n    columnRadius += alignmentValue * alignmentSign;\n    location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle); // To change x location based on text anchor for column and stackingcolumn chart\n\n    if (series.drawType === 'StackingColumn') {\n      location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 : location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x;\n    } else if (series.drawType === 'Column') {\n      location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 : location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x;\n    }\n\n    location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n    return location;\n  };\n  /**\n   * Get the label location\n   */\n\n\n  DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\n    var location = new ChartLocation(0, 0);\n    var labelRegion = series.type === 'Candle' && labelIndex > 1 ? point.regions[1] : point.regions[0];\n\n    if (series.type === 'HiloOpenClose') {\n      labelRegion = labelIndex === 2 ? point.regions[1] : point.regions[2];\n    }\n\n    var xAxis = series.xAxis;\n    var yAxis = series.yAxis;\n    var isInverted = series.chart.requireInvertedAxis;\n\n    if (series.type === 'BoxAndWhisker') {\n      this.markerHeight = 0;\n\n      switch (labelIndex) {\n        case 0:\n          location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n          break;\n\n        case 1:\n          location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n          break;\n\n        case 2:\n          location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n          break;\n\n        case 3:\n          location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n          break;\n\n        case 4:\n          location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n          break;\n\n        default:\n          {\n            location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n            this.markerHeight = series.marker.height / 2;\n            break;\n          }\n      }\n\n      if (isInverted) {\n        location.y = point.regions[0].y + point.regions[0].height / 2;\n      } else {\n        location.x = point.regions[0].x + point.regions[0].width / 2;\n      }\n    } else if (labelIndex === 0 || labelIndex === 1) {\n      location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n    } else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n      location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n    } else if (isInverted) {\n      location = {\n        x: labelRegion.x + labelRegion.width / 2,\n        y: labelRegion.y\n      };\n    } else {\n      location = {\n        x: labelRegion.x + labelRegion.width,\n        y: labelRegion.y + labelRegion.height / 2\n      };\n    } //Aligning the label at the beginning of the tick, when tick size is less than text size\n\n\n    if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n      if (series.chart.requireInvertedAxis) {\n        var height = labelRegion.height;\n        location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      } else {\n        var width = labelRegion.width;\n        location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n      }\n    }\n\n    return location;\n  };\n\n  DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n    if (series.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n\n    var padding = 5;\n    var margin = this.margin;\n    var textLength = !this.inverted ? textSize.height : textSize.width;\n    var extraSpace = this.borderWidth + textLength / 2 + padding;\n\n    if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\n      position = position === 'Outer' ? 'Top' : position;\n    } else if (series.type.indexOf('Range') > -1) {\n      position = position === 'Outer' || position === 'Top' ? position : 'Auto';\n    } else if (series.type === 'Waterfall') {\n      position = position === 'Auto' ? 'Middle' : position;\n    }\n\n    switch (position) {\n      case 'Bottom':\n        labelLocation = !this.inverted ? isMinus ? labelLocation - rect.height + extraSpace + margin.top : labelLocation + rect.height - extraSpace - margin.bottom : isMinus ? labelLocation + rect.width - extraSpace - margin.left : labelLocation - rect.width + extraSpace + margin.right;\n        break;\n\n      case 'Middle':\n        labelLocation = labelLocation = !this.inverted ? isMinus ? labelLocation - rect.height / 2 : labelLocation + rect.height / 2 : isMinus ? labelLocation + rect.width / 2 : labelLocation - rect.width / 2;\n        break;\n\n      case 'Auto':\n        labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n        break;\n\n      default:\n        extraSpace += this.errorHeight;\n        labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n        break;\n    }\n\n    var check = !this.inverted ? labelLocation < rect.y || labelLocation > rect.y + rect.height : labelLocation < rect.x || labelLocation > rect.x + rect.width;\n    this.fontBackground = check ? this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground : this.fontBackground === 'transparent' ? point.color || series.interior : this.fontBackground;\n    var seriesLength = series.chart.series.length;\n\n    if (position === 'Outer' && series.type.indexOf('Stacking') > -1 && seriesLength - 1 > series.index) {\n      var nextSeries = void 0;\n      var nextSeriesPoint = void 0;\n\n      for (var i = series.index + 1; i < seriesLength; i++) {\n        nextSeries = series.chart.series[i];\n        nextSeriesPoint = nextSeries.points[point.index];\n\n        if (nextSeries.type.indexOf('Stacking') > -1 && nextSeries.type.indexOf('100') === -1) {\n          this.fontBackground = nextSeriesPoint && (nextSeriesPoint.yValue < 0 && point.yValue < 0 || nextSeriesPoint.yValue > 0 && point.yValue > 0) ? nextSeriesPoint ? nextSeriesPoint.color : nextSeries.interior : this.fontBackground;\n          break;\n        }\n      }\n    }\n\n    return labelLocation;\n  };\n\n  DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\n    var padding = 5;\n\n    if (series.type.indexOf('Area') > -1 && series.type !== 'RangeArea' && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n      position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n    }\n\n    this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n\n    switch (position) {\n      case 'Top':\n      case 'Outer':\n        labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding - this.errorHeight;\n        break;\n\n      case 'Bottom':\n        labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding + this.errorHeight;\n        break;\n\n      case 'Auto':\n        labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n        break;\n    }\n\n    return labelLocation;\n  };\n\n  DataLabel.prototype.isDataLabelShape = function (style) {\n    this.isShape = style.color !== 'transparent' || style.border.width > 0;\n    this.borderWidth = style.border.width;\n\n    if (!this.isShape) {\n      this.margin = {\n        left: 0,\n        right: 0,\n        bottom: 0,\n        top: 0\n      };\n    }\n  };\n\n  DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\n    var location;\n    var labelRect;\n    var isOverLap = true;\n    var position = 0;\n    var collection = this.chart.dataLabelCollections;\n    var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n\n    while (isOverLap && position < finalPosition) {\n      var actualPosition = this.getPosition(position);\n\n      if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\n        actualPosition = 'Top';\n        position++;\n      }\n\n      location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\n\n      if (!this.inverted) {\n        labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n        isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n      } else {\n        labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n        isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.x + labelRect.width > series.clipRect.width;\n      }\n\n      position++;\n    }\n\n    return location;\n  }; // alignment calculation assigned here\n\n\n  DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\n    switch (alignment) {\n      case 'Far':\n        labelLocation = !this.inverted ? isMinus ? labelLocation + value : labelLocation - value : isMinus ? labelLocation - value : labelLocation + value;\n        break;\n\n      case 'Near':\n        labelLocation = !this.inverted ? isMinus ? labelLocation - value : labelLocation + value : isMinus ? labelLocation + value : labelLocation - value;\n        break;\n\n      case 'Center':\n        labelLocation = labelLocation;\n        break;\n    }\n\n    return labelLocation;\n  }; //calculation for top and outer position of datalabel for rect series\n\n\n  DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus) {\n    var margin = this.margin;\n    var top;\n\n    switch (series.type) {\n      case 'RangeColumn':\n      case 'RangeArea':\n      case 'Hilo':\n        top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        break;\n\n      case 'Candle':\n        top = (index === 0 || index === 2) && !this.yAxisInversed || (index === 1 || index === 3) && this.yAxisInversed;\n        location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n        break;\n\n      case 'HiloOpenClose':\n        if (index <= 1) {\n          top = index === 0 && !this.yAxisInversed || index === 1 && this.yAxisInversed;\n          location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n        } else {\n          if (this.yAxisInversed) {\n            location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n          } else {\n            location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n          }\n        }\n\n        break;\n\n      default:\n        if (isMinus && position === 'Top' || !isMinus && position === 'Outer') {\n          location = !this.inverted ? location - extraSpace - margin.bottom - this.markerHeight : location + extraSpace + margin.left + this.markerHeight;\n        } else {\n          location = !this.inverted ? location + extraSpace + margin.top + this.markerHeight : location - extraSpace - margin.right - this.markerHeight;\n        }\n\n        break;\n    }\n\n    return location;\n  };\n  /**\n   * Updates the label location\n   */\n\n\n  DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\n    if (inside === void 0) {\n      inside = false;\n    }\n\n    if (!this.inverted) {\n      if (top) {\n        location = position === 'Outer' && !inside ? location - extraSpace - margin.bottom - this.markerHeight : location + extraSpace + margin.top + this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location + rect.height + extraSpace + margin.top + this.markerHeight : location + rect.height - extraSpace - margin.bottom - this.markerHeight;\n      }\n    } else {\n      if (top) {\n        location = position === 'Outer' && !inside ? location + extraSpace + margin.left + this.markerHeight : location - extraSpace - margin.right - this.markerHeight;\n      } else {\n        location = position === 'Outer' && !inside ? location - rect.width - extraSpace - margin.right - this.markerHeight : location - rect.width + extraSpace + margin.left + this.markerHeight;\n      }\n    }\n\n    return location;\n  };\n\n  DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\n    var points = series.points;\n    var index = point.index;\n    var yValue = points[index].yValue;\n    var position;\n    var nextPoint = points.length - 1 > index ? points[index + 1] : null;\n    var previousPoint = index > 0 ? points[index - 1] : null;\n    var yLocation;\n    var isOverLap = true;\n    var labelRect;\n    var isBottom;\n    var positionIndex;\n    var collection = this.chart.dataLabelCollections;\n\n    if (series.type === 'Bubble') {\n      position = 'Top';\n    } else if (series.type.indexOf('Step') > -1) {\n      position = 'Top';\n\n      if (index) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue !== this.yAxisInversed || yValue === previousPoint.yValue ? 'Top' : 'Bottom';\n      }\n    } else if (series.type === 'BoxAndWhisker') {\n      if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n        position = series.yAxis.isInversed ? 'Bottom' : 'Top';\n      } else if (labelIndex === 2 || labelIndex === 4) {\n        position = series.yAxis.isInversed ? 'Top' : 'Bottom';\n      } else {\n        isOverLap = false;\n        position = 'Middle';\n        yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n      }\n    } else {\n      if (index === 0) {\n        position = !nextPoint || !nextPoint.visible || yValue > nextPoint.yValue || yValue < nextPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else if (index === points.length - 1) {\n        position = !previousPoint || !previousPoint.visible || yValue > previousPoint.yValue || yValue < previousPoint.yValue && this.yAxisInversed ? 'Top' : 'Bottom';\n      } else {\n        if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n          position = 'Top';\n        } else if (!nextPoint.visible || !previousPoint) {\n          position = nextPoint.yValue > yValue || previousPoint && previousPoint.yValue > yValue ? 'Bottom' : 'Top';\n        } else {\n          var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n          var intersectY = slope * index + (nextPoint.yValue - slope * (index + 1));\n          position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' : intersectY < yValue ? 'Bottom' : 'Top';\n        }\n      }\n    }\n\n    isBottom = position === 'Bottom';\n    positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n\n    while (isOverLap && positionIndex < 4) {\n      yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n      labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n      isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y + labelRect.height > series.clipRect.height;\n      positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n      isBottom = false;\n    }\n\n    return yLocation;\n  };\n  /**\n   * Animates the data label.\n   * @param  {Series} series - Data label of the series gets animated.\n   * @return {void}\n   */\n\n\n  DataLabel.prototype.doDataLabelAnimation = function (series, element) {\n    var shapeElements = series.shapeElement.childNodes;\n    var textNode = series.textElement.childNodes;\n    var delay = series.animation.delay + series.animation.duration;\n    var duration = series.chart.animated ? series.chart.duration : 200;\n    var location;\n    var length = element ? 1 : textNode.length;\n    var tempElement;\n\n    for (var i = 0; i < length; i++) {\n      tempElement = textNode[i];\n\n      if (element) {\n        element.style.visibility = 'hidden';\n        templateAnimate(element, delay, duration, 'ZoomIn');\n      } else {\n        location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n        markerAnimate(tempElement, delay, duration, series, null, location, true);\n\n        if (shapeElements[i]) {\n          tempElement = shapeElements[i];\n          location = new ChartLocation(+tempElement.getAttribute('x') + +tempElement.getAttribute('width') / 2, +tempElement.getAttribute('y') + +tempElement.getAttribute('height') / 2);\n          markerAnimate(tempElement, delay, duration, series, null, location, true);\n        }\n      }\n    }\n  };\n\n  DataLabel.prototype.getPosition = function (index) {\n    return ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index];\n  };\n  /**\n   * Get module name.\n   */\n\n\n  DataLabel.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'DataLabel';\n  };\n  /**\n   * To destroy the dataLabel for series.\n   * @return {void}\n   * @private\n   */\n\n\n  DataLabel.prototype.destroy = function (chart) {// Destroy method performed here\n  };\n\n  return DataLabel;\n}();\n\nexport { DataLabel };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/data-label.js"],"names":["ChartLocation","RectOption","isCollide","isOverlap","markerAnimate","appendChildElement","getVisiblePoints","getLabelText","convertHexToColor","calculateRect","textElement","colorNameToHex","measureText","TextOption","Rect","textRender","createTemplate","getFontStyle","getElement","measureElementRect","templateAnimate","withIn","withInBounds","createElement","getValue","extend","getPoint","getRotatedRectangleCoordinates","isRotatedRectIntersect","DataLabel","chart","errorHeight","prototype","initPrivateVariables","series","marker","transform","clipPath","render","renderer","index","undefined","category","chartAreaType","clipRect","x","y","element","id","dataLabel","visible","shapeElement","createGroup","markerHeight","type","height","commonId","calculateErrorHeight","position","chartBackground","chartArea","background","themeStyle","errorBar","direction","positiveHeight","errorBarModule","negativeHeight","isRectSeries","isTransposed","rect","labelLocation","rgbValue","contrast","argsData","border","textSize","angle","degree","inverted","requireInvertedAxis","yAxisInversed","yAxis","isInversed","redraw","isDataLabelOverlap","coordinatesAfterRotation","templateId","visiblePoints","point","rectCenterX","rectCenterY","i","length","showZero","emptyPointSettings","mode","margin","labelText","labelLength","xPos","yPos","xValue","yValue","isRender","clip","shapeRect","width","color","argsFont","font","symbolLocations","regions","i_1","cancel","name","text","fill","template","location","trigger","fontBackground","isDataLabelShape","createDataLabelTemplate","calculateTextPosition","_i","_a","chartAxisLayoutPanel","visibleAxisLabelRect","rectRegion","actualRect","enableRotation","rectCoordinates","getRectanglePoints","isDataLabelOverlapWithChartBound","rotatedDataLabelCollections","push","currentPointIndex","dataLabelCollections","labelIntersectAction","isShape","drawRectangle","opacity","rx","ry","Int32Array","appendChild","Math","round","r","g","b","left","top","duration","childElementCount","enableCanvas","loc1","loc2","loc3","loc4","initialClipRect","parentElement","data","labelIndex","right","bottom","childElement","styles","calculateTemplateLabelSize","isReactCallback","elementRect","clipWidth","clipHeight","clientWidth","points","style","vAxis","xAxis","hAxis","seriesType","visibleRange","indexOf","stackedValues","endValues","parseFloat","animation","enable","animateSeries","doDataLabelAnimation","labelRegion","getLabelLocation","padding","locationX","alignmentValue","borderWidth","calculateAlignment","alignment","calculatePathPosition","calculateRectPosition","calculatePolarRectPosition","locationY","size","columnRadius","chartWidth","availableSize","alignmentSign","regionData","startAngle","PI","endAngle","radius","innerRadius","drawType","cos","sin","isInverted","median","maximum","minimum","upperQuartile","lowerQuartile","outliers","isMinus","textLength","extraSpace","calculateRectActualPosition","calculateTopAndOuterPosition","check","interior","seriesLength","nextSeries","nextSeriesPoint","calculatePathActualPosition","labelRect","isOverLap","collection","finalPosition","actualPosition","getPosition","value","updateLabelLocation","inside","markerSize","nextPoint","previousPoint","yLocation","isBottom","positionIndex","slope","intersectY","shapeElements","childNodes","textNode","delay","animated","tempElement","visibility","getAttribute","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { ChartLocation, RectOption, isCollide, isOverlap } from '../../common/utils/helper';\nimport { markerAnimate, appendChildElement, getVisiblePoints } from '../../common/utils/helper';\nimport { getLabelText, convertHexToColor, calculateRect, textElement, colorNameToHex } from '../../common/utils/helper';\nimport { measureText, TextOption, Rect } from '@syncfusion/ej2-svg-base';\nimport { textRender } from '../../common/model/constants';\nimport { createTemplate, getFontStyle, getElement, measureElementRect, templateAnimate, withIn, withInBounds } from '../../common/utils/helper';\nimport { createElement, getValue, extend } from '@syncfusion/ej2-base';\nimport { getPoint, getRotatedRectangleCoordinates, isRotatedRectIntersect } from '../../common/utils/helper';\n/**\n * `DataLabel` module is used to render data label for the data point.\n */\nvar DataLabel = /** @class */ (function () {\n    /**\n     * Constructor for the data label module.\n     * @private\n     */\n    function DataLabel(chart) {\n        this.errorHeight = 0;\n        this.chart = chart;\n    }\n    DataLabel.prototype.initPrivateVariables = function (series, marker) {\n        var transform = '';\n        var clipPath = '';\n        var render = series.chart.renderer;\n        var index = (series.index === undefined) ? series.category : series.index;\n        if (series.chart.chartAreaType === 'Cartesian') {\n            transform = 'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')';\n            clipPath = 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')';\n        }\n        if (marker.dataLabel.visible) {\n            series.shapeElement = render.createGroup({\n                'id': this.chart.element.id + 'ShapeGroup' + index,\n                'transform': transform,\n                'clip-path': 'url(#' + this.chart.element.id + '_ChartSeriesClipRect_' + index + ')'\n            });\n            series.textElement = render.createGroup({\n                'id': this.chart.element.id + 'TextGroup' + index,\n                'transform': transform,\n                'clip-path': clipPath\n            });\n        }\n        this.markerHeight = ((series.type === 'Scatter' || marker.visible)) ? (marker.height / 2) : 0;\n        this.commonId = this.chart.element.id + '_Series_' + index + '_Point_';\n        this.calculateErrorHeight(series, series.marker.dataLabel.position);\n        this.chartBackground = this.chart.chartArea.background === 'transparent' ?\n            this.chart.background || this.chart.themeStyle.background : this.chart.chartArea.background;\n    };\n    DataLabel.prototype.calculateErrorHeight = function (series, position) {\n        if (!series.errorBar.visible) {\n            return null;\n        }\n        else if (series.errorBar.visible && this.chart.chartAreaType !== 'PolarRadar') {\n            var direction = series.errorBar.direction;\n            var positiveHeight = this.chart.errorBarModule.positiveHeight;\n            var negativeHeight = this.chart.errorBarModule.negativeHeight;\n            if (this.isRectSeries(series)) {\n                if (position === 'Top' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Outer' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Plus') {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n            else {\n                if (position === 'Top' || position === 'Outer' || position === 'Auto') {\n                    if ((direction === 'Both' || direction === 'Plus') && (!series.chart.isTransposed)) {\n                        this.errorHeight = positiveHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n                if (position === 'Bottom' || position === 'Auto') {\n                    if (direction === 'Both' || direction === 'Minus') {\n                        this.errorHeight = negativeHeight;\n                    }\n                    else {\n                        this.errorHeight = 0;\n                    }\n                }\n            }\n        }\n        else {\n            this.errorHeight = 0;\n        }\n    };\n    DataLabel.prototype.isRectSeries = function (series) {\n        return series.isRectSeries || series.type === 'RangeArea';\n    };\n    /**\n     * Render the data label for series.\n     * @return {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    DataLabel.prototype.render = function (series, chart, dataLabel) {\n        // initialize the private variable\n        this.initPrivateVariables(series, series.marker);\n        var rect;\n        var labelLocation = { x: 0, y: 0 };\n        var rgbValue;\n        var contrast;\n        var argsData;\n        var border;\n        var textSize;\n        var angle;\n        var degree;\n        this.inverted = chart.requireInvertedAxis;\n        this.yAxisInversed = series.yAxis.isInversed;\n        var redraw = chart.redraw;\n        var isDataLabelOverlap = false;\n        var coordinatesAfterRotation = [];\n        var templateId = chart.element.id + '_Series_' +\n            (series.index === undefined ? series.category : series.index) + '_DataLabelCollections';\n        var element = createElement('div', {\n            id: templateId\n        });\n        var visiblePoints = getVisiblePoints(series);\n        var point;\n        var rectCenterX;\n        var rectCenterY;\n        // Data label point iteration started\n        for (var i = 0; i < visiblePoints.length; i++) {\n            point = visiblePoints[i];\n            if (!dataLabel.showZero && ((point.y !== 0) || (point.y === 0 && series.emptyPointSettings.mode === 'Zero'))) {\n                return null;\n            }\n            this.margin = dataLabel.margin;\n            var labelText = [];\n            var labelLength = void 0;\n            var xPos = void 0;\n            var yPos = void 0;\n            var xValue = void 0;\n            var yValue = void 0;\n            var isRender = true;\n            var clip = series.clipRect;\n            var shapeRect = void 0;\n            isDataLabelOverlap = false;\n            angle = degree = dataLabel.angle;\n            border = { width: dataLabel.border.width, color: dataLabel.border.color };\n            var argsFont = (extend({}, getValue('properties', dataLabel.font), null, true));\n            if ((point.symbolLocations.length && point.symbolLocations[0]) ||\n                (series.type === 'BoxAndWhisker' && point.regions.length)) {\n                labelText = getLabelText(point, series, chart);\n                labelLength = labelText.length;\n                for (var i_1 = 0; i_1 < labelLength; i_1++) {\n                    argsData = {\n                        cancel: false, name: textRender, series: series,\n                        point: point, text: labelText[i_1], border: border,\n                        color: dataLabel.fill, template: dataLabel.template, font: argsFont, location: labelLocation,\n                        textSize: measureText(labelText[i_1], dataLabel.font)\n                    };\n                    chart.trigger(textRender, argsData);\n                    if (!argsData.cancel) {\n                        this.fontBackground = argsData.color;\n                        this.isDataLabelShape(argsData);\n                        this.markerHeight = series.type === 'Bubble' ? (point.regions[0].height / 2) : this.markerHeight;\n                        if (argsData.template !== null) {\n                            this.createDataLabelTemplate(element, series, dataLabel, point, argsData, i_1, redraw);\n                        }\n                        else {\n                            textSize = measureText(argsData.text, dataLabel.font);\n                            rect = this.calculateTextPosition(point, series, textSize, dataLabel, i_1);\n                            // To check whether the polar radar chart datalabel intersects the axis label or not\n                            if (chart.chartAreaType === 'PolarRadar') {\n                                for (var _i = 0, _a = chart.chartAxisLayoutPanel.visibleAxisLabelRect; _i < _a.length; _i++) {\n                                    var rectRegion = _a[_i];\n                                    if (isOverlap(new Rect(rect.x, rect.y, rect.width, rect.height), rectRegion)) {\n                                        isRender = false;\n                                        break;\n                                    }\n                                }\n                            }\n                            var actualRect = new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height);\n                            //let notOverlapping: boolean;\n                            if (dataLabel.enableRotation) {\n                                var rectCoordinates = this.getRectanglePoints(rect);\n                                rectCenterX = rect.x + (rect.width / 2);\n                                rectCenterY = (rect.y + (rect.height / 2));\n                                coordinatesAfterRotation = getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle);\n                                isDataLabelOverlap = this.isDataLabelOverlapWithChartBound(coordinatesAfterRotation, chart, clip);\n                                if (!isDataLabelOverlap) {\n                                    this.chart.rotatedDataLabelCollections.push(coordinatesAfterRotation);\n                                    var currentPointIndex = this.chart.rotatedDataLabelCollections.length - 1;\n                                    for (var index = currentPointIndex; index >= 0; index--) {\n                                        if (this.chart.rotatedDataLabelCollections[currentPointIndex] &&\n                                            this.chart.rotatedDataLabelCollections[index - 1] &&\n                                            isRotatedRectIntersect(this.chart.rotatedDataLabelCollections[currentPointIndex], this.chart.rotatedDataLabelCollections[index - 1])) {\n                                            isDataLabelOverlap = true;\n                                            this.chart.rotatedDataLabelCollections[currentPointIndex] = null;\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                isDataLabelOverlap = isCollide(rect, chart.dataLabelCollections, clip);\n                            }\n                            if ((!isDataLabelOverlap || dataLabel.labelIntersectAction === 'None') && isRender) {\n                                chart.dataLabelCollections.push(actualRect);\n                                if (this.isShape) {\n                                    shapeRect = chart.renderer.drawRectangle(new RectOption(this.commonId + point.index + '_TextShape_' + i_1, argsData.color, argsData.border, dataLabel.opacity, rect, dataLabel.rx, dataLabel.ry), new Int32Array([clip.x, clip.y]));\n                                    if (series.shapeElement) {\n                                        series.shapeElement.appendChild(shapeRect);\n                                    }\n                                }\n                                // Checking the font color\n                                rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n                                contrast = Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000);\n                                xPos = (rect.x + this.margin.left + textSize.width / 2) + labelLocation.x;\n                                yPos = (rect.y + this.margin.top + textSize.height * 3 / 4) + labelLocation.y;\n                                labelLocation = { x: 0, y: 0 };\n                                if (angle !== 0 && dataLabel.enableRotation) {\n                                    // xValue = xPos - (dataLabel.margin.left) / 2 + (dataLabel.margin.right / 2);\n                                    xValue = rectCenterX;\n                                    //yValue = yPos - (dataLabel.margin.top) / 2 - (textSize.height / dataLabel.margin.top) +\n                                    // (dataLabel.margin.bottom) / 2;\n                                    yValue = rectCenterY;\n                                    degree = (angle > 360) ? angle - 360 : (angle < -360) ? angle + 360 : angle;\n                                }\n                                else {\n                                    degree = 0;\n                                    xValue = rect.x;\n                                    yValue = rect.y;\n                                }\n                                textElement(chart.renderer, new TextOption(this.commonId + point.index + '_Text_' + i_1, xPos, yPos, 'middle', argsData.text, 'rotate(' + degree + ',' + (xValue) + ',' + (yValue) + ')', 'auto', degree), argsData.font, argsData.font.color ||\n                                    ((contrast >= 128 || series.type === 'Hilo') ? 'black' : 'white'), series.textElement, false, redraw, true, false, series.chart.duration, series.clipRect);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (element.childElementCount) {\n            if (!chart.enableCanvas) {\n                appendChildElement(chart.enableCanvas, getElement(chart.element.id + '_Secondary_Element'), element, chart.redraw, \n                // tslint:disable-next-line:align\n                false, 'x', 'y', null, '', false, false, null, chart.duration);\n            }\n            else {\n                getElement(chart.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Get rect coordinates\n     */\n    DataLabel.prototype.getRectanglePoints = function (rect) {\n        var loc1 = new ChartLocation(rect.x, rect.y);\n        var loc2 = new ChartLocation(rect.x + rect.width, rect.y);\n        var loc3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n        var loc4 = new ChartLocation(rect.x, rect.y + rect.height);\n        return [loc1, loc2, loc3, loc4];\n    };\n    DataLabel.prototype.isDataLabelOverlapWithChartBound = function (rectCoordinates, chart, clip) {\n        for (var index = 0; index < rectCoordinates.length; index++) {\n            if (!withInBounds(rectCoordinates[index].x + clip.x, rectCoordinates[index].y + clip.y, chart.initialClipRect)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Render the data label template.\n     * @return {void}\n     * @private\n     */\n    DataLabel.prototype.createDataLabelTemplate = function (parentElement, series, dataLabel, point, data, labelIndex, redraw) {\n        this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        var clip = series.clipRect;\n        var childElement = createTemplate(createElement('div', {\n            id: this.chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabel_'\n                + point.index + (labelIndex ? ('_' + labelIndex) : ''),\n            styles: 'position: absolute;background-color:' + data.color + ';' +\n                getFontStyle(dataLabel.font) + ';border:' + data.border.width + 'px solid ' + data.border.color + ';'\n        }), point.index, data.template, this.chart, point, series, this.chart.element.id + '_DataLabel', labelIndex);\n        this.calculateTemplateLabelSize(parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw);\n    };\n    DataLabel.prototype.calculateTemplateLabelSize = function (parentElement, childElement, point, series, dataLabel, labelIndex, clip, redraw, isReactCallback) {\n        var elementRect = measureElementRect(childElement, redraw);\n        var rect = this.calculateTextPosition(point, series, { width: elementRect.width, height: elementRect.height }, dataLabel, labelIndex);\n        var clipWidth = 0;\n        var clipHeight = 0;\n        if (isReactCallback) {\n            clipWidth = ((series.clipRect.x + rect.x) + elementRect.width) > parentElement.clientWidth ?\n                (parentElement.clientWidth - (series.clipRect.x + rect.x)) : 0;\n            clipHeight = (series.points.length - 1 === point.index) ? elementRect.height / 2 : 0;\n        }\n        childElement.style.left = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.x) + rect.x - clipWidth) + 'px';\n        childElement.style.top = ((this.chart.chartAreaType === 'PolarRadar' ? 0 : series.clipRect.y) + rect.y + clipHeight) + 'px';\n        var rgbValue = convertHexToColor(colorNameToHex(this.fontBackground));\n        var vAxis = series.chart.requireInvertedAxis ? series.xAxis : series.yAxis;\n        var hAxis = series.chart.requireInvertedAxis ? series.yAxis : series.xAxis;\n        childElement.style.color = dataLabel.font.color ||\n            ((Math.round((rgbValue.r * 299 + rgbValue.g * 587 + rgbValue.b * 114) / 1000)) >= 128 ? 'black' : 'white');\n        if (childElement.childElementCount && (!isCollide(rect, this.chart.dataLabelCollections, clip) ||\n            dataLabel.labelIntersectAction === 'None') && (series.seriesType !== 'XY' || point.yValue === undefined ||\n            withIn(point.yValue, series.yAxis.visibleRange) || (series.type.indexOf('Stacking') > -1) ||\n            (series.type.indexOf('100') > -1 && withIn(series.stackedValues.endValues[point.index], series.yAxis.visibleRange))) &&\n            withIn(point.xValue, series.xAxis.visibleRange) && parseFloat(childElement.style.top) >= vAxis.rect.y &&\n            parseFloat(childElement.style.left) >= hAxis.rect.x &&\n            parseFloat(childElement.style.top) <= vAxis.rect.y + vAxis.rect.height &&\n            parseFloat(childElement.style.left) <= hAxis.rect.x + hAxis.rect.width) {\n            this.chart.dataLabelCollections.push(new Rect(rect.x + clip.x, rect.y + clip.y, rect.width, rect.height));\n            appendChildElement(this.chart.enableCanvas, parentElement, childElement, redraw, true, 'left', 'top');\n            if (series.animation.enable && this.chart.animateSeries && !this.chart.enableCanvas) {\n                this.doDataLabelAnimation(series, childElement);\n            }\n            else if (this.chart.enableCanvas) {\n                parentElement.appendChild(childElement);\n            }\n        }\n    };\n    DataLabel.prototype.calculateTextPosition = function (point, series, textSize, dataLabel, labelIndex) {\n        var labelRegion = labelIndex > 1 ? (series.type === 'Candle') ? point.regions[1] : point.regions[0] : point.regions[0];\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        var location;\n        location = this.getLabelLocation(point, series, textSize, labelIndex);\n        var padding = 5;\n        var clipRect = series.clipRect;\n        var rect;\n        // calculating alignment\n        if (!this.chart.requireInvertedAxis || !this.isRectSeries(series) || series.type === 'BoxAndWhisker') {\n            this.locationX = location.x;\n            var alignmentValue = textSize.height + (this.borderWidth * 2) + this.markerHeight +\n                this.margin.bottom + this.margin.top + padding;\n            location.y = (dataLabel.position === 'Auto') ? location.y :\n                this.calculateAlignment(alignmentValue, location.y, dataLabel.alignment, this.isRectSeries(series) ? point.yValue < 0 : false);\n            // calculating position\n            location.y = (!this.isRectSeries(series) || series.type === 'BoxAndWhisker') ?\n                this.calculatePathPosition(location.y, dataLabel.position, series, point, textSize, labelIndex) :\n                this.calculateRectPosition(location.y, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n            if (this.isRectSeries(series) && this.chart.chartAreaType === 'PolarRadar') {\n                location = this.calculatePolarRectPosition(location, dataLabel.position, series, point, textSize, labelIndex, dataLabel.alignment, alignmentValue);\n            }\n        }\n        else {\n            this.locationY = location.y;\n            var alignmentValue = textSize.width + this.borderWidth + this.margin.left + this.margin.right - padding;\n            location.x = dataLabel.position === 'Auto' ? location.x :\n                this.calculateAlignment(alignmentValue, location.x, dataLabel.alignment, point.yValue < 0);\n            location.x = this.calculateRectPosition(location.x, labelRegion, point.yValue < 0 !== this.yAxisInversed, dataLabel.position, series, textSize, labelIndex, point);\n        }\n        rect = calculateRect(location, textSize, this.margin);\n        // Checking the condition whether data Label has been exist the clip rect\n        if (!(dataLabel.enableRotation === true && dataLabel.angle !== 0) &&\n            !((rect.y > (clipRect.y + clipRect.height)) || (rect.x > (clipRect.x + clipRect.width)) ||\n                (rect.x + rect.width < 0) || (rect.y + rect.height < 0))) {\n            rect.x = rect.x < 0 ? padding : rect.x;\n            rect.y = (rect.y < 0) && !(dataLabel.labelIntersectAction === 'None') ? padding : rect.y;\n            rect.x -= (rect.x + rect.width) > (clipRect.x + clipRect.width) ? (rect.x + rect.width)\n                - (clipRect.x + clipRect.width) + padding : 0;\n            rect.y -= (rect.y + rect.height) > (clipRect.y + clipRect.height) ? (rect.y + rect.height)\n                - (clipRect.y + clipRect.height) + padding : 0;\n            this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        }\n        return rect;\n    };\n    // Calculation label location for polar column draw types\n    DataLabel.prototype.calculatePolarRectPosition = function (location, position, series, point, size, labelIndex, alignment, alignmentValue) {\n        var padding = 5;\n        var columnRadius;\n        var chartWidth = this.chart.availableSize.width;\n        var alignmentSign = (alignment === 'Center') ? 0 : (alignment === 'Far' ? 1 : -1);\n        var angle = (point.regionData.startAngle - 0.5 * Math.PI) + (point.regionData.endAngle - point.regionData.startAngle) / 2;\n        if (labelIndex === 0) {\n            columnRadius = point.regionData.radius < point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        else {\n            columnRadius = point.regionData.radius > point.regionData.innerRadius ? point.regionData.innerRadius\n                : point.regionData.radius;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        if (series.drawType.indexOf('Stacking') > -1) {\n            position = position === 'Outer' ? 'Top' : position;\n        }\n        else if (series.drawType.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        if (position === 'Outer') {\n            columnRadius = labelIndex === 0 ? columnRadius + 2 * padding + this.markerHeight :\n                columnRadius - 2 * padding - this.markerHeight;\n        }\n        else if (position === 'Middle') {\n            columnRadius = columnRadius / 2 + padding;\n            if (series.drawType === 'StackingColumn') {\n                columnRadius = point.regionData.innerRadius + ((point.regionData.radius - point.regionData.innerRadius) / 2)\n                    + padding - (size.height / 2);\n            }\n        }\n        else if (position === 'Top') {\n            columnRadius = labelIndex === 0 ? columnRadius - 2 * padding - this.markerHeight :\n                columnRadius + 2 * padding + this.markerHeight;\n        }\n        else if (position === 'Bottom') {\n            columnRadius = 2 * padding;\n            columnRadius += (series.drawType === 'StackingColumn') ? (point.regionData.innerRadius + this.markerHeight) : 0;\n        }\n        else {\n            if (labelIndex === 0) {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius - padding :\n                    series.drawType === 'StackingColumn' ? columnRadius - 2 * padding : columnRadius + 2 * padding;\n            }\n            else {\n                columnRadius = columnRadius >= series.chart.radius ? columnRadius + padding : columnRadius - 2 * padding;\n            }\n        }\n        columnRadius += (alignmentValue * alignmentSign);\n        location.x = series.clipRect.width / 2 + series.clipRect.x + columnRadius * Math.cos(angle);\n        // To change x location based on text anchor for column and stackingcolumn chart\n        if (series.drawType === 'StackingColumn') {\n            location.x = location.x < chartWidth / 2 ? location.x + size.width / 2 :\n                (location.x > chartWidth / 2 ? location.x - size.width / 2 : location.x);\n        }\n        else if (series.drawType === 'Column') {\n            location.x = location.x < chartWidth / 2 ? location.x - size.width / 2 :\n                (location.x > chartWidth / 2 ? location.x + size.width / 2 : location.x);\n        }\n        location.y = series.clipRect.height / 2 + series.clipRect.y + columnRadius * Math.sin(angle);\n        return location;\n    };\n    /**\n     * Get the label location\n     */\n    DataLabel.prototype.getLabelLocation = function (point, series, textSize, labelIndex) {\n        var location = new ChartLocation(0, 0);\n        var labelRegion = (series.type === 'Candle' && labelIndex > 1) ? point.regions[1] : point.regions[0];\n        if (series.type === 'HiloOpenClose') {\n            labelRegion = (labelIndex === 2) ? point.regions[1] : point.regions[2];\n        }\n        var xAxis = series.xAxis;\n        var yAxis = series.yAxis;\n        var isInverted = series.chart.requireInvertedAxis;\n        if (series.type === 'BoxAndWhisker') {\n            this.markerHeight = 0;\n            switch (labelIndex) {\n                case 0:\n                    location = getPoint(point.xValue, point.median, xAxis, yAxis, isInverted);\n                    break;\n                case 1:\n                    location = getPoint(point.xValue, point.maximum, xAxis, yAxis, isInverted);\n                    break;\n                case 2:\n                    location = getPoint(point.xValue, point.minimum, xAxis, yAxis, isInverted);\n                    break;\n                case 3:\n                    location = getPoint(point.xValue, point.upperQuartile, xAxis, yAxis, isInverted);\n                    break;\n                case 4:\n                    location = getPoint(point.xValue, point.lowerQuartile, xAxis, yAxis, isInverted);\n                    break;\n                default: {\n                    location = getPoint(point.xValue, point.outliers[labelIndex - 5], xAxis, yAxis, isInverted);\n                    this.markerHeight = series.marker.height / 2;\n                    break;\n                }\n            }\n            if (isInverted) {\n                location.y = point.regions[0].y + (point.regions[0].height / 2);\n            }\n            else {\n                location.x = point.regions[0].x + (point.regions[0].width / 2);\n            }\n        }\n        else if (labelIndex === 0 || labelIndex === 1) {\n            location = new ChartLocation(point.symbolLocations[0].x, point.symbolLocations[0].y);\n        }\n        else if ((labelIndex === 2 || labelIndex === 3) && series.type === 'Candle') {\n            location = new ChartLocation(point.symbolLocations[1].x, point.symbolLocations[1].y);\n        }\n        else if (isInverted) {\n            location = { x: labelRegion.x + (labelRegion.width) / 2, y: labelRegion.y };\n        }\n        else {\n            location = { x: labelRegion.x + labelRegion.width, y: labelRegion.y + (labelRegion.height) / 2 };\n        }\n        //Aligning the label at the beginning of the tick, when tick size is less than text size\n        if (labelIndex > 1 && series.type === 'HiloOpenClose') {\n            if (series.chart.requireInvertedAxis) {\n                var height = labelRegion.height;\n                location.y = labelRegion.y + height / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n            else {\n                var width = labelRegion.width;\n                location.x = labelRegion.x + width / 2 + 2 * (labelIndex === 2 ? 1 : -1);\n            }\n        }\n        return location;\n    };\n    DataLabel.prototype.calculateRectPosition = function (labelLocation, rect, isMinus, position, series, textSize, labelIndex, point) {\n        if (series.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        var padding = 5;\n        var margin = this.margin;\n        var textLength = !this.inverted ? textSize.height : textSize.width;\n        var extraSpace = this.borderWidth + textLength / 2 + padding;\n        if (series.type === 'StackingColumn100' || series.type === 'StackingBar100') {\n            position = (position === 'Outer') ? 'Top' : position;\n        }\n        else if (series.type.indexOf('Range') > -1) {\n            position = (position === 'Outer' || position === 'Top') ? position : 'Auto';\n        }\n        else if (series.type === 'Waterfall') {\n            position = position === 'Auto' ? 'Middle' : position;\n        }\n        switch (position) {\n            case 'Bottom':\n                labelLocation = !this.inverted ?\n                    isMinus ? (labelLocation - rect.height + extraSpace + margin.top) :\n                        (labelLocation + rect.height - extraSpace - margin.bottom) :\n                    isMinus ? (labelLocation + rect.width - extraSpace - margin.left) :\n                        (labelLocation - rect.width + extraSpace + margin.right);\n                break;\n            case 'Middle':\n                labelLocation = labelLocation = !this.inverted ?\n                    (isMinus ? labelLocation - (rect.height / 2) : labelLocation + (rect.height / 2)) :\n                    (isMinus ? labelLocation + (rect.width / 2) : labelLocation - (rect.width / 2));\n                break;\n            case 'Auto':\n                labelLocation = this.calculateRectActualPosition(labelLocation, rect, isMinus, series, textSize, labelIndex, point);\n                break;\n            default:\n                extraSpace += this.errorHeight;\n                labelLocation = this.calculateTopAndOuterPosition(labelLocation, rect, position, series, labelIndex, extraSpace, isMinus);\n                break;\n        }\n        var check = !this.inverted ? (labelLocation < rect.y || labelLocation > rect.y + rect.height) :\n            (labelLocation < rect.x || labelLocation > rect.x + rect.width);\n        this.fontBackground = check ?\n            (this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground)\n            : this.fontBackground === 'transparent' ? (point.color || series.interior) : this.fontBackground;\n        var seriesLength = series.chart.series.length;\n        if (position === 'Outer' && (series.type.indexOf('Stacking') > -1) && ((seriesLength - 1) > series.index)) {\n            var nextSeries = void 0;\n            var nextSeriesPoint = void 0;\n            for (var i = series.index + 1; i < seriesLength; i++) {\n                nextSeries = series.chart.series[i];\n                nextSeriesPoint = nextSeries.points[point.index];\n                if ((nextSeries.type.indexOf('Stacking') > -1) && (nextSeries.type.indexOf('100') === -1)) {\n                    this.fontBackground = (nextSeriesPoint && ((nextSeriesPoint.yValue < 0 && point.yValue < 0) ||\n                        (nextSeriesPoint.yValue > 0 && point.yValue > 0))) ? (nextSeriesPoint ? nextSeriesPoint.color :\n                        nextSeries.interior) : this.fontBackground;\n                    break;\n                }\n            }\n        }\n        return labelLocation;\n    };\n    DataLabel.prototype.calculatePathPosition = function (labelLocation, position, series, point, size, labelIndex) {\n        var padding = 5;\n        if ((series.type.indexOf('Area') > -1 && series.type !== 'RangeArea')\n            && this.yAxisInversed && series.marker.dataLabel.position !== 'Auto') {\n            position = position === 'Top' ? 'Bottom' : position === 'Bottom' ? 'Top' : position;\n        }\n        this.fontBackground = this.fontBackground === 'transparent' ? this.chartBackground : this.fontBackground;\n        switch (position) {\n            case 'Top':\n            case 'Outer':\n                labelLocation = labelLocation - this.markerHeight - this.borderWidth - size.height / 2 - this.margin.bottom - padding -\n                    this.errorHeight;\n                break;\n            case 'Bottom':\n                labelLocation = labelLocation + this.markerHeight + this.borderWidth + size.height / 2 + this.margin.top + padding +\n                    this.errorHeight;\n                break;\n            case 'Auto':\n                labelLocation = this.calculatePathActualPosition(labelLocation, this.markerHeight, series, point, size, labelIndex);\n                break;\n        }\n        return labelLocation;\n    };\n    DataLabel.prototype.isDataLabelShape = function (style) {\n        this.isShape = (style.color !== 'transparent' || style.border.width > 0);\n        this.borderWidth = style.border.width;\n        if (!this.isShape) {\n            this.margin = { left: 0, right: 0, bottom: 0, top: 0 };\n        }\n    };\n    DataLabel.prototype.calculateRectActualPosition = function (labelLocation, rect, isMinus, series, size, labelIndex, point) {\n        var location;\n        var labelRect;\n        var isOverLap = true;\n        var position = 0;\n        var collection = this.chart.dataLabelCollections;\n        var finalPosition = series.type.indexOf('Range') !== -1 || series.type === 'Hilo' ? 2 : 4;\n        while (isOverLap && position < finalPosition) {\n            var actualPosition = this.getPosition(position);\n            if (series.type.indexOf('Stacking') > -1 && actualPosition === 'Outer') {\n                actualPosition = 'Top';\n                position++;\n            }\n            location = this.calculateRectPosition(labelLocation, rect, isMinus, actualPosition, series, size, labelIndex, point);\n            if (!this.inverted) {\n                labelRect = calculateRect(new ChartLocation(this.locationX, location), size, this.margin);\n                isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect) || labelRect.y > series.clipRect.height;\n            }\n            else {\n                labelRect = calculateRect(new ChartLocation(location, this.locationY), size, this.margin);\n                isOverLap = labelRect.x < 0 || isCollide(labelRect, collection, series.clipRect) ||\n                    labelRect.x + labelRect.width > series.clipRect.width;\n            }\n            position++;\n        }\n        return location;\n    };\n    // alignment calculation assigned here\n    DataLabel.prototype.calculateAlignment = function (value, labelLocation, alignment, isMinus) {\n        switch (alignment) {\n            case 'Far':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation + value : labelLocation - value) :\n                    (isMinus ? labelLocation - value : labelLocation + value);\n                break;\n            case 'Near':\n                labelLocation = !this.inverted ? (isMinus ? labelLocation - value : labelLocation + value) :\n                    (isMinus ? labelLocation + value : labelLocation - value);\n                break;\n            case 'Center':\n                labelLocation = labelLocation;\n                break;\n        }\n        return labelLocation;\n    };\n    //calculation for top and outer position of datalabel for rect series\n    DataLabel.prototype.calculateTopAndOuterPosition = function (location, rect, position, series, index, extraSpace, isMinus) {\n        var margin = this.margin;\n        var top;\n        switch (series.type) {\n            case 'RangeColumn':\n            case 'RangeArea':\n            case 'Hilo':\n                top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                break;\n            case 'Candle':\n                top = (index === 0 || index === 2) && !this.yAxisInversed\n                    || (index === 1 || index === 3) && this.yAxisInversed;\n                location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top, index > 1);\n                break;\n            case 'HiloOpenClose':\n                if (index <= 1) {\n                    top = (index === 0 && !this.yAxisInversed) || (index === 1 && this.yAxisInversed);\n                    location = this.updateLabelLocation(position, location, extraSpace, margin, rect, top);\n                }\n                else {\n                    if (this.yAxisInversed) {\n                        location = !this.inverted ? location + extraSpace + margin.top : location - extraSpace - margin.right;\n                    }\n                    else {\n                        location = !this.inverted ? location - extraSpace - margin.bottom : location + extraSpace + margin.left;\n                    }\n                }\n                break;\n            default:\n                if ((isMinus && position === 'Top') || (!isMinus && position === 'Outer')) {\n                    location = !this.inverted ? location - extraSpace - margin.bottom - this.markerHeight :\n                        location + extraSpace + margin.left + this.markerHeight;\n                }\n                else {\n                    location = !this.inverted ? location + extraSpace + margin.top + this.markerHeight :\n                        location - extraSpace - margin.right - this.markerHeight;\n                }\n                break;\n        }\n        return location;\n    };\n    /**\n     * Updates the label location\n     */\n    DataLabel.prototype.updateLabelLocation = function (position, location, extraSpace, margin, rect, top, inside) {\n        if (inside === void 0) { inside = false; }\n        if (!this.inverted) {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location - extraSpace - margin.bottom - this.markerHeight :\n                    location + extraSpace + margin.top + this.markerHeight;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location + rect.height + extraSpace + margin.top + this.markerHeight :\n                    location + rect.height - extraSpace - margin.bottom - this.markerHeight;\n            }\n        }\n        else {\n            if (top) {\n                location = (position === 'Outer' && !inside) ? location + extraSpace + margin.left + this.markerHeight :\n                    location - extraSpace - margin.right - this.markerHeight;\n            }\n            else {\n                location = (position === 'Outer' && !inside) ? location - rect.width - extraSpace - margin.right - this.markerHeight :\n                    location - rect.width + extraSpace + margin.left + this.markerHeight;\n            }\n        }\n        return location;\n    };\n    DataLabel.prototype.calculatePathActualPosition = function (y, markerSize, series, point, size, labelIndex) {\n        var points = series.points;\n        var index = point.index;\n        var yValue = points[index].yValue;\n        var position;\n        var nextPoint = points.length - 1 > index ? points[index + 1] : null;\n        var previousPoint = index > 0 ? points[index - 1] : null;\n        var yLocation;\n        var isOverLap = true;\n        var labelRect;\n        var isBottom;\n        var positionIndex;\n        var collection = this.chart.dataLabelCollections;\n        if (series.type === 'Bubble') {\n            position = 'Top';\n        }\n        else if (series.type.indexOf('Step') > -1) {\n            position = 'Top';\n            if (index) {\n                position = (!previousPoint || !previousPoint.visible || (yValue > previousPoint.yValue !== this.yAxisInversed)\n                    || yValue === previousPoint.yValue) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (series.type === 'BoxAndWhisker') {\n            if (labelIndex === 1 || labelIndex === 3 || labelIndex > 4) {\n                position = series.yAxis.isInversed ? 'Bottom' : 'Top';\n            }\n            else if (labelIndex === 2 || labelIndex === 4) {\n                position = series.yAxis.isInversed ? 'Top' : 'Bottom';\n            }\n            else {\n                isOverLap = false;\n                position = 'Middle';\n                yLocation = this.calculatePathPosition(y, position, series, point, size, labelIndex);\n            }\n        }\n        else {\n            if (index === 0) {\n                position = (!nextPoint || !nextPoint.visible || yValue > nextPoint.yValue ||\n                    (yValue < nextPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else if (index === points.length - 1) {\n                position = (!previousPoint || !previousPoint.visible || yValue > previousPoint.yValue ||\n                    (yValue < previousPoint.yValue && this.yAxisInversed)) ? 'Top' : 'Bottom';\n            }\n            else {\n                if (!nextPoint.visible && !(previousPoint && previousPoint.visible)) {\n                    position = 'Top';\n                }\n                else if (!nextPoint.visible || !previousPoint) {\n                    position = (nextPoint.yValue > yValue || (previousPoint && previousPoint.yValue > yValue)) ?\n                        'Bottom' : 'Top';\n                }\n                else {\n                    var slope = (nextPoint.yValue - previousPoint.yValue) / 2;\n                    var intersectY = (slope * index) + (nextPoint.yValue - (slope * (index + 1)));\n                    position = !this.yAxisInversed ? intersectY < yValue ? 'Top' : 'Bottom' :\n                        intersectY < yValue ? 'Bottom' : 'Top';\n                }\n            }\n        }\n        isBottom = position === 'Bottom';\n        positionIndex = ['Outer', 'Top', 'Bottom', 'Middle', 'Auto'].indexOf(position);\n        while (isOverLap && positionIndex < 4) {\n            yLocation = this.calculatePathPosition(y, this.getPosition(positionIndex), series, point, size, labelIndex);\n            labelRect = calculateRect(new ChartLocation(this.locationX, yLocation), size, this.margin);\n            isOverLap = labelRect.y < 0 || isCollide(labelRect, collection, series.clipRect)\n                || (labelRect.y + labelRect.height) > series.clipRect.height;\n            positionIndex = isBottom ? positionIndex - 1 : positionIndex + 1;\n            isBottom = false;\n        }\n        return yLocation;\n    };\n    /**\n     * Animates the data label.\n     * @param  {Series} series - Data label of the series gets animated.\n     * @return {void}\n     */\n    DataLabel.prototype.doDataLabelAnimation = function (series, element) {\n        var shapeElements = series.shapeElement.childNodes;\n        var textNode = series.textElement.childNodes;\n        var delay = series.animation.delay + series.animation.duration;\n        var duration = series.chart.animated ? series.chart.duration : 200;\n        var location;\n        var length = element ? 1 : textNode.length;\n        var tempElement;\n        for (var i = 0; i < length; i++) {\n            tempElement = textNode[i];\n            if (element) {\n                element.style.visibility = 'hidden';\n                templateAnimate(element, delay, duration, 'ZoomIn');\n            }\n            else {\n                location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\n                markerAnimate(tempElement, delay, duration, series, null, location, true);\n                if (shapeElements[i]) {\n                    tempElement = shapeElements[i];\n                    location = new ChartLocation((+tempElement.getAttribute('x')) + ((+tempElement.getAttribute('width')) / 2), (+tempElement.getAttribute('y')) + ((+tempElement.getAttribute('height')) / 2));\n                    markerAnimate(tempElement, delay, duration, series, null, location, true);\n                }\n            }\n        }\n    };\n    DataLabel.prototype.getPosition = function (index) {\n        return (['Outer', 'Top', 'Bottom', 'Middle', 'Auto'][index]);\n    };\n    /**\n     * Get module name.\n     */\n    DataLabel.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'DataLabel';\n    };\n    /**\n     * To destroy the dataLabel for series.\n     * @return {void}\n     * @private\n     */\n    DataLabel.prototype.destroy = function (chart) {\n        // Destroy method performed here\n    };\n    return DataLabel;\n}());\nexport { DataLabel };\n"]},"metadata":{},"sourceType":"module"}