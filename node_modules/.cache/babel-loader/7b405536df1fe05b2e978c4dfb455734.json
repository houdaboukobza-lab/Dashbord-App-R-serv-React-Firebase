{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { getPoint, withInRange } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StepLineSeries` module is used to render the step line series.\n */\n\nvar StepLineSeries =\n/** @class */\nfunction (_super) {\n  __extends(StepLineSeries, _super);\n\n  function StepLineSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render the Step line series.\n   * @return {void}\n   * @private\n   */\n\n\n  StepLineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var direction = '';\n    var startPoint = 'M';\n    var prevPoint = null;\n    var pathOptions;\n    var lineLength;\n    var point1;\n    var point2;\n    var visiblePoints = this.enableComplexProperty(series);\n\n    if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n      lineLength = 0.5;\n    } else {\n      lineLength = 0;\n    }\n\n    for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n      var point = visiblePoints_1[_i];\n      point.symbolLocations = [];\n      point.regions = [];\n\n      if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n        if (prevPoint != null) {\n          point2 = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n          point1 = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n          direction = direction.concat(startPoint + ' ' + point1.x + ' ' + point1.y + ' ' + 'L' + ' ' + point2.x + ' ' + point1.y + ' L' + ' ' + point2.x + ' ' + point2.y + ' ');\n          startPoint = 'L';\n        } else {\n          point1 = getPoint(point.xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n          direction = direction.concat(startPoint + ' ' + point1.x + ' ' + point1.y + ' ');\n          startPoint = 'L';\n        }\n\n        this.storePointLocation(point, series, isInverted, getPoint);\n        prevPoint = point;\n      } else {\n        prevPoint = series.emptyPointSettings.mode === 'Drop' ? prevPoint : null;\n        startPoint = series.emptyPointSettings.mode === 'Drop' ? startPoint : 'M';\n      }\n    }\n\n    if (visiblePoints.length > 0) {\n      point1 = getPoint(visiblePoints[visiblePoints.length - 1].xValue + lineLength, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted);\n      direction = direction.concat(startPoint + ' ' + point1.x + ' ' + point1.y + ' ');\n    }\n\n    pathOptions = new PathOption(series.chart.element.id + '_Series_' + series.index, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n    this.appendLinePath(pathOptions, series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  StepLineSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n  /**\n   * To destroy the step line series.\n   * @return {void}\n   * @private\n   */\n\n\n  StepLineSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  StepLineSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'StepLineSeries';\n  };\n\n  return StepLineSeries;\n}(LineBase);\n\nexport { StepLineSeries };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/step-line-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","PathOption","LineBase","StepLineSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","direction","startPoint","prevPoint","pathOptions","lineLength","point1","point2","visiblePoints","enableComplexProperty","valueType","labelPlacement","_i","visiblePoints_1","length","point","symbolLocations","regions","visible","index","xValue","yValue","concat","x","y","storePointLocation","emptyPointSettings","mode","chart","element","id","width","interior","opacity","dashArray","appendLinePath","renderMarker","doAnimation","option","animation","doLinearAnimation","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getPoint, withInRange } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { LineBase } from './line-base';\n/**\n * `StepLineSeries` module is used to render the step line series.\n */\nvar StepLineSeries = /** @class */ (function (_super) {\n    __extends(StepLineSeries, _super);\n    function StepLineSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render the Step line series.\n     * @return {void}\n     * @private\n     */\n    StepLineSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var direction = '';\n        var startPoint = 'M';\n        var prevPoint = null;\n        var pathOptions;\n        var lineLength;\n        var point1;\n        var point2;\n        var visiblePoints = this.enableComplexProperty(series);\n        if (xAxis.valueType === 'Category' && xAxis.labelPlacement === 'BetweenTicks') {\n            lineLength = 0.5;\n        }\n        else {\n            lineLength = 0;\n        }\n        for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n            var point = visiblePoints_1[_i];\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                if (prevPoint != null) {\n                    point2 = getPoint(point.xValue, point.yValue, xAxis, yAxis, isInverted);\n                    point1 = getPoint(prevPoint.xValue, prevPoint.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ' + 'L' + ' ' +\n                        (point2.x) + ' ' + (point1.y) + ' L' + ' ' + (point2.x) + ' ' + (point2.y) + ' ');\n                    startPoint = 'L';\n                }\n                else {\n                    point1 = getPoint(point.xValue - lineLength, point.yValue, xAxis, yAxis, isInverted);\n                    direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n                    startPoint = 'L';\n                }\n                this.storePointLocation(point, series, isInverted, getPoint);\n                prevPoint = point;\n            }\n            else {\n                prevPoint = series.emptyPointSettings.mode === 'Drop' ? prevPoint : null;\n                startPoint = series.emptyPointSettings.mode === 'Drop' ? startPoint : 'M';\n            }\n        }\n        if (visiblePoints.length > 0) {\n            point1 = getPoint(visiblePoints[visiblePoints.length - 1].xValue + lineLength, visiblePoints[visiblePoints.length - 1].yValue, xAxis, yAxis, isInverted);\n            direction = direction.concat(startPoint + ' ' + (point1.x) + ' ' + (point1.y) + ' ');\n        }\n        pathOptions = new PathOption(series.chart.element.id + '_Series_' + series.index, 'transparent', series.width, series.interior, series.opacity, series.dashArray, direction);\n        this.appendLinePath(pathOptions, series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    StepLineSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    /**\n     * To destroy the step line series.\n     * @return {void}\n     * @private\n     */\n    StepLineSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    StepLineSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'StepLineSeries';\n    };\n    return StepLineSeries;\n}(LineBase));\nexport { StepLineSeries };\n"]},"metadata":{},"sourceType":"module"}