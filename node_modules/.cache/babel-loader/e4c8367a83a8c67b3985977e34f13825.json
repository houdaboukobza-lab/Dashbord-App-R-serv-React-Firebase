{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Power GSM\\\\Desktop\\\\React-Fito-v1.0-9-April-2021V\\\\React-Fito-v1.0-9-April-2021V\\\\react-fito\\\\src\\\\jsx\\\\components\\\\charts\\\\Chartjs\\\\bar4.js\";\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar createReactClass = require(\"create-react-class\");\n\nconst data = {\n  labels: [\"4\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"9\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"],\n  datasets: [{\n    label: \"My First dataset\",\n    backgroundColor: \"rgba(105,255,147,1)\",\n    strokeColor: \"rgba(105,255,147,1)\",\n    pointColor: \"rgba(0,0,0,0)\",\n    pointStrokeColor: \"rgba(105,255,147,1)\",\n    pointHighlightFill: \"rgba(105,255,147,1)\",\n    pointHighlightStroke: \"rgba(105,255,147,1)\",\n    data: []\n  }]\n};\nconst options = {\n  tooltips: {\n    enabled: false\n  },\n  legend: {\n    display: false\n  },\n  scales: {\n    yAxes: [{\n      display: false\n    }],\n    xAxes: [{\n      display: false,\n      type: \"realtime\",\n      realtime: {\n        onRefresh: function () {\n          data.datasets[0].data.push({\n            x: Date.now(),\n            y: Math.random() * 100\n          });\n        },\n        delay: 2000\n      }\n    }]\n  },\n  title: {\n    display: false\n  },\n  plugins: {\n    streaming: {\n      // per-chart option\n      frameRate: 0 // chart is drawn 30 times every second\n\n    }\n  }\n};\nexport default createReactClass({\n  displayName: \"LineExample\",\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options,\n      height: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n});","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/src/jsx/components/charts/Chartjs/bar4.js"],"names":["React","Bar","createReactClass","require","data","labels","datasets","label","backgroundColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","options","tooltips","enabled","legend","display","scales","yAxes","xAxes","type","realtime","onRefresh","push","x","Date","now","y","Math","random","delay","title","plugins","streaming","frameRate","displayName","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAO,0BAAP;;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAA9B;;AAEA,MAAMC,IAAI,GAAG;AACVC,EAAAA,MAAM,EAAE,CACL,GADK,EAEL,GAFK,EAGL,GAHK,EAIL,GAJK,EAKL,GALK,EAML,GANK,EAOL,GAPK,EAQL,GARK,EASL,GATK,EAUL,GAVK,EAWL,GAXK,EAYL,GAZK,EAaL,GAbK,EAcL,GAdK,CADE;AAiBVC,EAAAA,QAAQ,EAAE,CACP;AACGC,IAAAA,KAAK,EAAE,kBADV;AAEGC,IAAAA,eAAe,EAAE,qBAFpB;AAGGC,IAAAA,WAAW,EAAE,qBAHhB;AAIGC,IAAAA,UAAU,EAAE,eAJf;AAKGC,IAAAA,gBAAgB,EAAE,qBALrB;AAMGC,IAAAA,kBAAkB,EAAE,qBANvB;AAOGC,IAAAA,oBAAoB,EAAE,qBAPzB;AAQGT,IAAAA,IAAI,EAAE;AART,GADO;AAjBA,CAAb;AA+BA,MAAMU,OAAO,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GADG;AAIbC,EAAAA,MAAM,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GAJK;AAObC,EAAAA,MAAM,EAAE;AACLC,IAAAA,KAAK,EAAE,CACJ;AACGF,MAAAA,OAAO,EAAE;AADZ,KADI,CADF;AAMLG,IAAAA,KAAK,EAAE,CACJ;AACGH,MAAAA,OAAO,EAAE,KADZ;AAEGI,MAAAA,IAAI,EAAE,UAFT;AAGGC,MAAAA,QAAQ,EAAE;AACPC,QAAAA,SAAS,EAAE,YAAY;AACpBpB,UAAAA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiBF,IAAjB,CAAsBqB,IAAtB,CAA2B;AACxBC,YAAAA,CAAC,EAAEC,IAAI,CAACC,GAAL,EADqB;AAExBC,YAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAFK,WAA3B;AAIF,SANM;AAOPC,QAAAA,KAAK,EAAE;AAPA;AAHb,KADI;AANF,GAPK;AA6BbC,EAAAA,KAAK,EAAE;AACJf,IAAAA,OAAO,EAAE;AADL,GA7BM;AAgCbgB,EAAAA,OAAO,EAAE;AACNC,IAAAA,SAAS,EAAE;AACR;AACAC,MAAAA,SAAS,EAAE,CAFH,CAEM;;AAFN;AADL;AAhCI,CAAhB;AAwCA,eAAelC,gBAAgB,CAAC;AAC7BmC,EAAAA,WAAW,EAAE,aADgB;;AAE7BC,EAAAA,MAAM,GAAG;AACN,wBACM,QAAC,GAAD;AAAK,MAAA,IAAI,EAAElC,IAAX;AAAiB,MAAA,OAAO,EAAEU,OAA1B;AAAmC,MAAA,MAAM,EAAE;AAA3C;AAAA;AAAA;AAAA;AAAA,YADN;AAGF;;AAN4B,CAAD,CAA/B","sourcesContent":["import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chartjs-plugin-streaming\";\nvar createReactClass = require(\"create-react-class\");\n\nconst data = {\n   labels: [\n      \"4\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"9\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n   ],\n   datasets: [\n      {\n         label: \"My First dataset\",\n         backgroundColor: \"rgba(105,255,147,1)\",\n         strokeColor: \"rgba(105,255,147,1)\",\n         pointColor: \"rgba(0,0,0,0)\",\n         pointStrokeColor: \"rgba(105,255,147,1)\",\n         pointHighlightFill: \"rgba(105,255,147,1)\",\n         pointHighlightStroke: \"rgba(105,255,147,1)\",\n         data: [],\n      },\n   ],\n};\n\nconst options = {\n   tooltips: {\n      enabled: false,\n   },\n   legend: {\n      display: false,\n   },\n   scales: {\n      yAxes: [\n         {\n            display: false,\n         },\n      ],\n      xAxes: [\n         {\n            display: false,\n            type: \"realtime\",\n            realtime: {\n               onRefresh: function () {\n                  data.datasets[0].data.push({\n                     x: Date.now(),\n                     y: Math.random() * 100,\n                  });\n               },\n               delay: 2000,\n            },\n         },\n      ],\n   },\n   title: {\n      display: false,\n   },\n   plugins: {\n      streaming: {\n         // per-chart option\n         frameRate: 0, // chart is drawn 30 times every second\n      },\n   },\n};\n\nexport default createReactClass({\n   displayName: \"LineExample\",\n   render() {\n      return (\n            <Bar data={data} options={options} height={150}/>\n      );\n   },\n});\n"]},"metadata":{},"sourceType":"module"}