{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `BollingerBands` module is used to render bollinger band indicator.\n */\n\nvar BollingerBands =\n/** @class */\nfunction (_super) {\n  __extends(BollingerBands, _super);\n\n  function BollingerBands() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Initializes the series collection to represent bollinger band\n   */\n\n\n  BollingerBands.prototype.initSeriesCollection = function (indicator, chart) {\n    indicator.targetSeries = [];\n    var rangeArea = new Series(indicator, 'targetSeries', {}, true);\n    rangeArea.type = 'RangeArea';\n\n    if (indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none') {\n      this.setSeriesProperties(rangeArea, indicator, 'BollingerBand', indicator.bandColor, 0, chart);\n    }\n\n    var signalLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(signalLine, indicator, 'BollingerBand', indicator.fill, indicator.width, chart);\n    var upperLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n    var lowerLine = new Series(indicator, 'targetSeries', {}, true);\n    this.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n  };\n  /**\n   * Defines the predictions using Bollinger Band Approach\n   * @private\n   */\n\n\n  BollingerBands.prototype.initDataSource = function (indicator, chart) {\n    var enableBand = indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none';\n    var start = enableBand ? 1 : 0;\n    var signalCollection = [];\n    var upperCollection = [];\n    var lowerCollection = [];\n    var bandCollection = [];\n    var upperSeries = indicator.targetSeries[start + 1];\n    var lowerSeries = indicator.targetSeries[start + 2];\n    var signalSeries = indicator.targetSeries[start];\n    var rangeAreaSeries = enableBand ? indicator.targetSeries[0] : null; //prepare data\n\n    var validData = indicator.points;\n\n    if (validData.length && validData.length >= indicator.period) {\n      var sum = 0;\n      var deviationSum = 0;\n      var multiplier = indicator.standardDeviation;\n      var limit = validData.length;\n      var length_1 = Math.round(indicator.period);\n      var smaPoints = [];\n      var deviations = [];\n      var bollingerPoints = [];\n\n      for (var i_1 = 0; i_1 < length_1; i_1++) {\n        sum += Number(validData[i_1].close);\n      }\n\n      var sma = sum / indicator.period;\n\n      for (var i_2 = 0; i_2 < limit; i_2++) {\n        var y = Number(validData[i_2].close);\n\n        if (i_2 >= length_1 - 1 && i_2 < limit) {\n          if (i_2 - indicator.period >= 0) {\n            var diff = y - Number(validData[i_2 - length_1].close);\n            sum = sum + diff;\n            sma = sum / indicator.period;\n            smaPoints[i_2] = sma;\n            deviations[i_2] = Math.pow(y - sma, 2);\n            deviationSum += deviations[i_2] - deviations[i_2 - length_1];\n          } else {\n            smaPoints[i_2] = sma;\n            deviations[i_2] = Math.pow(y - sma, 2);\n            deviationSum += deviations[i_2];\n          }\n\n          var range = Math.sqrt(deviationSum / indicator.period);\n          var lowerBand = smaPoints[i_2] - multiplier * range;\n          var upperBand = smaPoints[i_2] + multiplier * range;\n\n          if (i_2 + 1 === length_1) {\n            for (var j_1 = 0; j_1 < length_1 - 1; j_1++) {\n              bollingerPoints[j_1] = {\n                'X': validData[j_1].x,\n                'mb': smaPoints[i_2],\n                'lb': lowerBand,\n                'ub': upperBand,\n                visible: true\n              };\n            }\n          }\n\n          bollingerPoints[i_2] = {\n            'X': validData[i_2].x,\n            'mb': smaPoints[i_2],\n            'lb': lowerBand,\n            'ub': upperBand,\n            visible: true\n          };\n        } else {\n          if (i_2 < indicator.period - 1) {\n            smaPoints[i_2] = sma;\n            deviations[i_2] = Math.pow(y - sma, 2);\n            deviationSum += deviations[i_2];\n          }\n        }\n      }\n\n      var i = -1;\n      var j = -1;\n\n      for (var k = 0; k < limit; k++) {\n        if (k >= length_1 - 1) {\n          var ub = 'ub';\n          var lb = 'lb';\n          var mb = 'mb';\n          upperCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][ub], validData[k], upperSeries, upperCollection.length));\n          lowerCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][lb], validData[k], lowerSeries, lowerCollection.length));\n          signalCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][mb], validData[k], signalSeries, signalCollection.length));\n\n          if (enableBand) {\n            bandCollection.push(this.getRangePoint(validData[k].x, upperCollection[++i].y, lowerCollection[++j].y, validData[k], rangeAreaSeries, bandCollection.length));\n          }\n        }\n      }\n    }\n\n    if (enableBand) {\n      this.setSeriesRange(bandCollection, indicator, indicator.targetSeries[0]);\n    }\n\n    this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[start]);\n    this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[start + 1]);\n    this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[start + 2]);\n  };\n  /**\n   * To destroy the Bollinger Band.\n   * @return {void}\n   * @private\n   */\n\n\n  BollingerBands.prototype.destroy = function (chart) {\n    /**\n     * Destroys the bollinger band\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  BollingerBands.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'BollingerBandsIndicator';\n  };\n\n  return BollingerBands;\n}(TechnicalAnalysis);\n\nexport { BollingerBands };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/bollinger-bands.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Series","TechnicalAnalysis","BollingerBands","_super","apply","arguments","initSeriesCollection","indicator","chart","targetSeries","rangeArea","type","bandColor","setSeriesProperties","signalLine","fill","width","upperLine","color","lowerLine","initDataSource","enableBand","start","signalCollection","upperCollection","lowerCollection","bandCollection","upperSeries","lowerSeries","signalSeries","rangeAreaSeries","validData","points","length","period","sum","deviationSum","multiplier","standardDeviation","limit","length_1","Math","round","smaPoints","deviations","bollingerPoints","i_1","Number","close","sma","i_2","y","diff","pow","range","sqrt","lowerBand","upperBand","j_1","x","visible","i","j","k","ub","lb","mb","push","getDataPoint","getRangePoint","setSeriesRange","destroy","getModuleName"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Series } from '../series/chart-series';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `BollingerBands` module is used to render bollinger band indicator.\n */\nvar BollingerBands = /** @class */ (function (_super) {\n    __extends(BollingerBands, _super);\n    function BollingerBands() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the series collection to represent bollinger band\n     */\n    BollingerBands.prototype.initSeriesCollection = function (indicator, chart) {\n        indicator.targetSeries = [];\n        var rangeArea = new Series(indicator, 'targetSeries', {}, true);\n        rangeArea.type = 'RangeArea';\n        if (indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none') {\n            this.setSeriesProperties(rangeArea, indicator, 'BollingerBand', indicator.bandColor, 0, chart);\n        }\n        var signalLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(signalLine, indicator, 'BollingerBand', indicator.fill, indicator.width, chart);\n        var upperLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(upperLine, indicator, 'UpperLine', indicator.upperLine.color, indicator.upperLine.width, chart);\n        var lowerLine = new Series(indicator, 'targetSeries', {}, true);\n        this.setSeriesProperties(lowerLine, indicator, 'LowerLine', indicator.lowerLine.color, indicator.lowerLine.width, chart);\n    };\n    /**\n     * Defines the predictions using Bollinger Band Approach\n     * @private\n     */\n    BollingerBands.prototype.initDataSource = function (indicator, chart) {\n        var enableBand = indicator.bandColor !== 'transparent' && indicator.bandColor !== 'none';\n        var start = enableBand ? 1 : 0;\n        var signalCollection = [];\n        var upperCollection = [];\n        var lowerCollection = [];\n        var bandCollection = [];\n        var upperSeries = indicator.targetSeries[start + 1];\n        var lowerSeries = indicator.targetSeries[start + 2];\n        var signalSeries = indicator.targetSeries[start];\n        var rangeAreaSeries = enableBand ? indicator.targetSeries[0] : null;\n        //prepare data\n        var validData = indicator.points;\n        if (validData.length && validData.length >= indicator.period) {\n            var sum = 0;\n            var deviationSum = 0;\n            var multiplier = indicator.standardDeviation;\n            var limit = validData.length;\n            var length_1 = Math.round(indicator.period);\n            var smaPoints = [];\n            var deviations = [];\n            var bollingerPoints = [];\n            for (var i_1 = 0; i_1 < length_1; i_1++) {\n                sum += Number(validData[i_1].close);\n            }\n            var sma = sum / indicator.period;\n            for (var i_2 = 0; i_2 < limit; i_2++) {\n                var y = Number(validData[i_2].close);\n                if (i_2 >= length_1 - 1 && i_2 < limit) {\n                    if (i_2 - indicator.period >= 0) {\n                        var diff = y - Number(validData[i_2 - length_1].close);\n                        sum = sum + diff;\n                        sma = sum / (indicator.period);\n                        smaPoints[i_2] = sma;\n                        deviations[i_2] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i_2] - deviations[i_2 - length_1];\n                    }\n                    else {\n                        smaPoints[i_2] = sma;\n                        deviations[i_2] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i_2];\n                    }\n                    var range = Math.sqrt(deviationSum / (indicator.period));\n                    var lowerBand = smaPoints[i_2] - (multiplier * range);\n                    var upperBand = smaPoints[i_2] + (multiplier * range);\n                    if (i_2 + 1 === length_1) {\n                        for (var j_1 = 0; j_1 < length_1 - 1; j_1++) {\n                            bollingerPoints[j_1] = {\n                                'X': validData[j_1].x, 'mb': smaPoints[i_2],\n                                'lb': lowerBand, 'ub': upperBand, visible: true\n                            };\n                        }\n                    }\n                    bollingerPoints[i_2] = {\n                        'X': validData[i_2].x, 'mb': smaPoints[i_2],\n                        'lb': lowerBand, 'ub': upperBand, visible: true\n                    };\n                }\n                else {\n                    if (i_2 < indicator.period - 1) {\n                        smaPoints[i_2] = sma;\n                        deviations[i_2] = Math.pow(y - sma, 2);\n                        deviationSum += deviations[i_2];\n                    }\n                }\n            }\n            var i = -1;\n            var j = -1;\n            for (var k = 0; k < limit; k++) {\n                if (k >= (length_1 - 1)) {\n                    var ub = 'ub';\n                    var lb = 'lb';\n                    var mb = 'mb';\n                    upperCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][ub], validData[k], upperSeries, upperCollection.length));\n                    lowerCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][lb], validData[k], lowerSeries, lowerCollection.length));\n                    signalCollection.push(this.getDataPoint(validData[k].x, bollingerPoints[k][mb], validData[k], signalSeries, signalCollection.length));\n                    if (enableBand) {\n                        bandCollection.push(this.getRangePoint(validData[k].x, upperCollection[++i].y, lowerCollection[++j].y, validData[k], rangeAreaSeries, bandCollection.length));\n                    }\n                }\n            }\n        }\n        if (enableBand) {\n            this.setSeriesRange(bandCollection, indicator, indicator.targetSeries[0]);\n        }\n        this.setSeriesRange(signalCollection, indicator, indicator.targetSeries[start]);\n        this.setSeriesRange(upperCollection, indicator, indicator.targetSeries[start + 1]);\n        this.setSeriesRange(lowerCollection, indicator, indicator.targetSeries[start + 2]);\n    };\n    /**\n     * To destroy the Bollinger Band.\n     * @return {void}\n     * @private\n     */\n    BollingerBands.prototype.destroy = function (chart) {\n        /**\n         * Destroys the bollinger band\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BollingerBands.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'BollingerBandsIndicator';\n    };\n    return BollingerBands;\n}(TechnicalAnalysis));\nexport { BollingerBands };\n"]},"metadata":{},"sourceType":"module"}