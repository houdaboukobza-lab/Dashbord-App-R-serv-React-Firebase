{"ast":null,"code":"import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement, rotateTextSize } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\n\nvar axisPadding = 10;\n\nvar CartesianAxisLayoutPanel =\n/** @class */\nfunction () {\n  /** @private */\n  function CartesianAxisLayoutPanel(chartModule) {\n    this.chart = chartModule;\n    this.padding = 5;\n  }\n  /**\n   * Measure the axis size.\n   * @return {void}\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n    var chart = this.chart;\n    this.crossAt(chart);\n    this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n    this.initialClipRect = rect;\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0; //Measure Axis size with initial Rect\n\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n\n    if (!this.chart.delayRedraw) {\n      this.calculateAxisSize(this.initialClipRect);\n    }\n\n    this.leftSize = 0;\n    this.rightSize = 0;\n    this.topSize = 0;\n    this.bottomSize = 0; //Measure Axis size with series Rect\n\n    this.measureRowAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n    this.measureColumnAxis(chart, this.initialClipRect);\n    this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n\n    if (!this.chart.delayRedraw) {\n      chart.refreshAxis();\n      this.calculateAxisSize(this.seriesClipRect);\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n    var row;\n    this.calculateRowSize(rect);\n\n    for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n      var item = _a[_i];\n      row = item;\n      row.nearSizes = [];\n      row.farSizes = [];\n      this.arrangeAxis(row);\n      this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n\n      if (this.leftSize < sum(row.nearSizes)) {\n        this.leftSize = sum(row.nearSizes);\n      }\n\n      if (this.rightSize < sum(row.farSizes)) {\n        this.rightSize = sum(row.farSizes);\n      }\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n    var column;\n    this.calculateColumnSize(rect);\n\n    for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n      var item = _a[_i];\n      column = item;\n      column.farSizes = [];\n      column.nearSizes = [];\n      this.arrangeAxis(column);\n      this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n\n      if (this.bottomSize < sum(column.nearSizes)) {\n        this.bottomSize = sum(column.nearSizes);\n      }\n\n      if (this.topSize < sum(column.farSizes)) {\n        this.topSize = sum(column.farSizes);\n      }\n    }\n  };\n  /**\n   * Measure the column and row in chart.\n   * @return {void}\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size, clipRect) {\n    var ele = 16; // scrollbar element height is 16.\n\n    for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n      var axis = _a[_i];\n      axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n      axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable) ? ele : 0;\n      axis.getModule(chart);\n      axis.baseModule.calculateRangeAndInterval(size, axis);\n      definition.computeSize(axis, clipRect, axis.scrollBarHeight);\n    }\n\n    if (definition.farSizes.length > 0) {\n      definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n    }\n\n    if (definition.nearSizes.length > 0) {\n      definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n    }\n  };\n  /**\n   * Measure the axis.\n   * @return {void}\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var axis;\n    var nearCount = 0;\n    var farCount = 0;\n    var size = 0;\n    var x;\n    var y;\n    var axisOffset;\n    this.calculateRowSize(rect);\n\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n      nearCount = 0;\n      farCount = 0;\n\n      for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n        axis = row.axes[j];\n        axisOffset = axis.plotOffset;\n\n        if (axis.rect.height === 0) {\n          axis.rect.height = row.computedHeight;\n          size = 0;\n\n          for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n            definition = chart.rows[k];\n            size += definition.computedHeight;\n          }\n\n          axis.rect.y = row.computedTop - size + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n          axis.rect.height = axis.rect.height + size - this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset);\n          axis.rect.width = 0;\n        }\n\n        if (axis.opposedPosition) {\n          x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n          axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n          farCount++;\n        } else {\n          x = rect.x - sum(subArray(row.nearSizes, nearCount));\n          axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n          nearCount++;\n        }\n      }\n    }\n\n    this.calculateColumnSize(rect);\n\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n      nearCount = 0;\n      farCount = 0;\n\n      for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n        axis = column.axes[j];\n        axisOffset = axis.plotOffset;\n\n        if (axis.rect.width === 0) {\n          for (var k = i, len_4 = i + axis.span; k < len_4; k++) {\n            definition = chart.columns[k];\n            axis.rect.width += definition.computedWidth;\n          }\n\n          axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n          axis.rect.width -= this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset);\n          axis.rect.height = 0;\n        }\n\n        if (axis.opposedPosition) {\n          y = rect.y - sum(subArray(column.farSizes, farCount));\n          axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n          farCount++;\n        } else {\n          y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n          axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n          nearCount++;\n        }\n      }\n    }\n  };\n  /**\n   * Measure the axis.\n   * @return {void}\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.measure = function () {\n    var chart = this.chart;\n    var row;\n    var column;\n    var definition;\n    var actualIndex;\n    var span;\n\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i]; //definition.Axes = axis;\n\n      if (axis.orientation === 'Vertical') {\n        chart.verticalAxes.push(axis);\n        actualIndex = this.getActualRow(axis);\n        row = chart.rows[actualIndex];\n        this.pushAxis(row, axis);\n        span = actualIndex + axis.span > chart.rows.length ? chart.rows.length : actualIndex + axis.span;\n\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.rows[j];\n          definition.axes[row.axes.length - 1] = axis;\n          chart.rows[j] = definition;\n        }\n\n        chart.rows[actualIndex] = row;\n      } else {\n        chart.horizontalAxes.push(axis);\n        actualIndex = this.getActualColumn(axis);\n        column = chart.columns[actualIndex];\n        this.pushAxis(column, axis);\n        span = actualIndex + axis.span > chart.columns.length ? chart.columns.length : actualIndex + axis.span;\n\n        for (var j = actualIndex + 1; j < span; j++) {\n          definition = chart.columns[j];\n          definition.axes[column.axes.length - 1] = axis;\n          chart.columns[j] = definition;\n        }\n\n        chart.columns[actualIndex] = column;\n      }\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n    var rangeOffset = position1 ? position1 + (position2 ? position2 : plotOffset) : position2 ? position2 + plotOffset : 2 * plotOffset;\n    return rangeOffset;\n  };\n\n  CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n    for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n      var axis = _a[_i];\n\n      if (axis.crossesAt === null) {\n        continue;\n      }\n\n      if (!axis.crossesInAxis) {\n        if (chart.requireInvertedAxis) {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryXAxis : chart.primaryYAxis;\n        } else {\n          axis.crossInAxis = axis.orientation === 'Horizontal' ? chart.primaryYAxis : chart.primaryXAxis;\n        }\n\n        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n        continue;\n      } else {\n        for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n          if (axis.crossesInAxis === chart.axisCollections[i].name) {\n            axis.crossInAxis = chart.axisCollections[i];\n            axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n            continue;\n          }\n        }\n      }\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n    switch (axis.valueType) {\n      case 'DateTime':\n        var option = {\n          skeleton: 'full',\n          type: 'dateTime'\n        };\n        var dateParser = this.chart.intl.getDateParser(option);\n        var dateFormatter = this.chart.intl.getDateFormat(option);\n        return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({\n          val: crossAt\n        }).val))));\n\n      case 'Category':\n        return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n\n      case 'Logarithmic':\n        return logBase(crossAt, axis.logBase);\n\n      default:\n        return crossAt;\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (!definition.axes[i]) {\n        definition.axes[i] = axis;\n        break;\n      }\n    }\n  };\n\n  CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n    var axisCollection = [];\n\n    for (var i = 0, len = definition.axes.length; i <= len; i++) {\n      if (definition.axes[i]) {\n        axisCollection.push(definition.axes[i]);\n      }\n    }\n\n    definition.axes = axisCollection;\n  };\n\n  CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n    var actualLength = this.chart.columns.length;\n    var pos = axis.columnIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n\n  CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n    var actualLength = this.chart.rows.length;\n    var pos = axis.rowIndex;\n    var result = pos >= actualLength ? actualLength - 1 : pos < 0 ? 0 : pos;\n    return result;\n  };\n  /**\n   * Measure the row size.\n   * @return {void}\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n    /*! Calculate row size */\n    var chart = this.chart;\n    var row;\n    var rowTop = rect.y + rect.height;\n    var height = 0;\n    var remainingHeight = Math.max(0, rect.height);\n\n    for (var i = 0, len = chart.rows.length; i < len; i++) {\n      row = chart.rows[i];\n\n      if (row.height.indexOf('%') !== -1) {\n        height = Math.min(remainingHeight, rect.height * parseInt(row.height, 10) / 100);\n      } else {\n        height = Math.min(remainingHeight, parseInt(row.height, 10));\n      }\n\n      height = i !== len - 1 ? height : remainingHeight;\n      row.computedHeight = height;\n      rowTop -= height;\n      row.computedTop = rowTop;\n      remainingHeight -= height;\n    }\n  };\n  /**\n   * Measure the row size.\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n    /*! Calculate column size */\n    var chart = this.chart;\n    var column;\n    var columnLeft = rect.x;\n    var width = 0;\n    var remainingWidth = Math.max(0, rect.width);\n\n    for (var i = 0, len = chart.columns.length; i < len; i++) {\n      column = chart.columns[i];\n\n      if (column.width.indexOf('%') !== -1) {\n        width = Math.min(remainingWidth, rect.width * parseInt(column.width, 10) / 100);\n      } else {\n        width = Math.min(remainingWidth, parseInt(column.width, 10));\n      }\n\n      width = i !== len - 1 ? width : remainingWidth;\n      column.computedWidth = width;\n      column.computedLeft = columnLeft;\n      columnLeft += width;\n      remainingWidth -= width;\n    }\n  };\n  /**\n   * To render the axis element.\n   * @return {void}\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n    var chart = this.chart;\n    var axis;\n    var axisElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisInsideCollection'\n    });\n    var axisLineElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisOutsideCollection'\n    });\n    var outsideElement;\n    var isInside;\n\n    for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n      axis = chart.axisCollections[i];\n      this.element = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Inside'\n      });\n      outsideElement = chart.renderer.createGroup({\n        id: chart.element.id + 'AxisGroup' + i + 'Outside'\n      });\n      isInside = this.findAxisPosition(axis);\n\n      if (axis.orientation === 'Horizontal') {\n        axis.updateCrossValue(chart);\n\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, axis.plotOffset, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawXAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawXAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      } else {\n        axis.updateCrossValue(chart);\n\n        if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n          this.drawAxisLine(axis, i, 0, axis.plotOffset, isInside ? outsideElement : this.element, axis.updatedRect);\n        }\n\n        if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n          this.drawYAxisGridLine(axis, i, isInside || axis.tickPosition === 'Inside' ? outsideElement : this.element, axis.updatedRect);\n        }\n\n        if (axis.visible && axis.internalVisibility) {\n          this.drawYAxisLabels(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisBorder(axis, i, isInside || axis.labelPosition === 'Inside' ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n          this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, axis.placeNextToAxisLine ? axis.updatedRect : axis.rect);\n        }\n      }\n\n      if (!this.chart.enableCanvas) {\n        axisElement.appendChild(this.element);\n\n        if (outsideElement && outsideElement.childNodes.length > 0) {\n          axisLineElement.appendChild(outsideElement);\n        }\n      }\n\n      if (chart.scrollBarModule && (chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming || axis.scrollbarSettings.enable)) {\n        this.renderScrollbar(chart, axis);\n      }\n    }\n\n    this.element = chart.renderer.createGroup({\n      id: chart.element.id + 'DefinitionLine'\n    });\n\n    for (var j = 0, len = chart.rows.length; j < len; j++) {\n      var row = chart.rows[j];\n\n      if (row.border.color) {\n        this.drawBottomLine(row, j, true);\n      }\n    }\n\n    for (var j = 0, len = chart.columns.length; j < len; j++) {\n      var column = chart.columns[j];\n\n      if (column.border.color) {\n        this.drawBottomLine(column, j, false);\n      }\n    }\n\n    if (!this.chart.enableCanvas) {\n      axisElement.appendChild(this.element);\n    }\n\n    appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n    return axisLineElement;\n  };\n  /**\n   * To render the axis scrollbar\n   * @param chart\n   * @param axis\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n    var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n\n    if ((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) || axis.scrollbarSettings.enable && (axis.zoomFactor <= 1 || axis.zoomPosition >= 0)) && !axis.zoomingScrollBar.isScrollUI) {\n      if (!chart.scrollElement) {\n        chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', {\n          id: chart.element.id + '_scrollElement'\n        });\n      }\n\n      appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n    } else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n      axis.zoomingScrollBar.destroy();\n    }\n\n    if (axis.zoomingScrollBar.isScrollUI) {\n      axis.zoomingScrollBar.isScrollUI = false;\n    }\n  };\n  /**\n   * To find the axis position\n   * @param axis\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n    return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n  };\n  /**\n   * To render the bootom line of the columns and rows\n   * @param definition\n   * @param index\n   * @param isRow\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var x1;\n    var x2;\n    var y1;\n    var y2;\n    var definitionName;\n\n    if (isRow) {\n      definition = definition;\n      y1 = y2 = definition.computedTop + definition.computedHeight;\n      x1 = this.seriesClipRect.x;\n      x2 = x1 + this.seriesClipRect.width;\n      definitionName = 'Row';\n    } else {\n      definition = definition;\n      x1 = x2 = definition.computedLeft;\n      y1 = this.seriesClipRect.y;\n      y2 = y1 + this.seriesClipRect.height;\n      definitionName = 'Column';\n    }\n\n    optionsLine = {\n      'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      'stroke-width': definition.border.width,\n      'stroke': definition.border.color\n    };\n    this.htmlObject = chart.renderer.drawLine(optionsLine);\n    this.element.appendChild(this.htmlObject);\n  };\n  /**\n   * To render the axis line\n   * @param axis\n   * @param index\n   * @param plotX\n   * @param plotY\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, parent, rect) {\n    var chart = this.chart;\n    var optionsLine = {};\n    var element = getElement(chart.element.id + 'AxisLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    element = null;\n    optionsLine = {\n      'id': chart.element.id + 'AxisLine_' + index,\n      'd': 'M ' + (rect.x - plotX) + ' ' + (rect.y - plotY) + ' L ' + (rect.x + rect.width + plotX) + ' ' + (rect.y + rect.height + plotY),\n      'stroke-dasharray': axis.lineStyle.dashArray,\n      'stroke-width': axis.lineStyle.width,\n      'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n    };\n    this.htmlObject = chart.renderer.drawPath(optionsLine);\n    appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n  };\n  /**\n   * To render the yAxis grid line\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointY = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorGridDirection;\n    var tickSize = axis.opposedPosition ? axis.majorTickLines.height : -axis.majorTickLines.height;\n    var axisLineSize = axis.opposedPosition ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n    var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.opposedPosition ? axis.scrollBarHeight : -axis.scrollBarHeight : 0;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.x - tickSize - axisLineSize : rect.x + tickSize + axisLineSize + scrollBarHeight;\n    var length = axis.visibleLabels.length;\n    var chartThemeStyle = this.chart.themeStyle;\n\n    if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n      length += 1;\n    }\n\n    var minorGridLines = axis.minorGridLines;\n    var minorTickLines = axis.minorTickLines; //Gridlines\n\n    for (var i = 0; i < length; i++) {\n      tempInterval = !axis.visibleLabels[i] ? axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel : axis.visibleLabels[i].value - ticksbwtLabel;\n      pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n      pointY = pointY * -1 + (rect.y + rect.height);\n\n      if (pointY >= rect.y && rect.y + rect.height >= pointY) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointY)) {\n          majorGrid = 'M ' + this.seriesClipRect.x + ' ' + pointY + ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n\n        majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY + ' L ' + ticks + ' ' + pointY;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n\n        if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n\n          minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To check the border of the axis\n   * @param axis\n   * @param index\n   * @param value\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n    var border = this.chart.chartArea.border;\n    var rect = this.seriesClipRect;\n    var orientation = axis.orientation;\n    var start = orientation === 'Horizontal' ? rect.x : rect.y;\n    var size = orientation === 'Horizontal' ? rect.width : rect.height;\n    var startIndex = orientation === 'Horizontal' ? 0 : axis.visibleLabels.length - 1;\n    var endIndex = orientation === 'Horizontal' ? axis.visibleLabels.length - 1 : 0;\n\n    if (axis.plotOffset > 0) {\n      return true;\n    } else if ((value === start || value === start + size) && (border.width <= 0 || border.color === 'transparent')) {\n      return true;\n    } else if (value !== start && index === startIndex || value !== start + size && index === endIndex) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * To render the yAxis label\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   * @private\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var elementSize;\n    var labelSpace = axis.labelPadding;\n    var options;\n    var isAxisBreakLabel;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.opposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    padding = axis.opposedPosition ? padding : -padding;\n    var defaultAnchor = isOpposed && isLabelInside || !isOpposed && !isLabelInside ? 'end' : 'start';\n    defaultAnchor = chart.isRtlEnabled ? axis.opposedPosition ? 'end' : 'start' : defaultAnchor;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n    var textHeight;\n    var textPadding;\n    var maxLineWidth;\n    var pixel = 10;\n\n    for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n      isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n      pointX = isLabelInside ? rect.x - padding : rect.x + padding + scrollBarHeight;\n      elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n      pointY = valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height + (chart.stockChart ? 7 : 0);\n      pointY = Math.floor(pointY * -1 + (rect.y + rect.height));\n      textHeight = elementSize.height / 8 * axis.visibleLabels[i].text.length / 2;\n      textPadding = elementSize.height / 4 * 3 + 3;\n      pointY = isAxisBreakLabel ? axis.labelPosition === 'Inside' ? pointY - elementSize.height / 2 - textHeight + textPadding : pointY - textHeight : axis.labelPosition === 'Inside' ? pointY + textPadding : pointY + elementSize.height / 4;\n\n      if (axis.majorGridLines.width > axis.majorTickLines.width) {\n        maxLineWidth = axis.majorGridLines.width;\n      } else {\n        maxLineWidth = axis.majorTickLines.width;\n      }\n\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointY = pointY - maxLineWidth - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointY = pointY + maxLineWidth + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        pointY = pointY;\n      }\n\n      pointX = isAxisBreakLabel ? this.getAxisLabelXvalue(pointX, axis, elementSize.width) : pointX;\n      var anchor = isAxisBreakLabel ? this.getAnchor(axis) : defaultAnchor;\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n\n      if (axis.edgeLabelPlacement) {\n        switch (axis.edgeLabelPlacement) {\n          case 'None':\n            break;\n\n          case 'Hide':\n            if ((i === 0 || axis.isInversed && i === len - 1) && options.y > rect.y + rect.height || (i === len - 1 || axis.isInversed && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n              options.text = '';\n            }\n\n            break;\n\n          case 'Shift':\n            if ((i === 0 || axis.isInversed && i === len - 1) && options.y > rect.y + rect.height) {\n              options.y = pointY = rect.y + rect.height;\n            } else if ((i === len - 1 || axis.isInversed && i === 0) && options.y - elementSize.height * 0.5 < rect.y) {\n              options.y = pointY = rect.y + elementSize.height * 0.5;\n            }\n\n            break;\n        }\n      }\n\n      textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n    }\n\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\n   * To get X value based on lineBreakAlignment for Y axis line break labels only.\n   * @param x\n   * @param axis\n   * @param textWidth\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n    var anchor = axis.lineBreakAlignment;\n    var isLabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.opposedPosition;\n\n    if (isOpposed && isLabelInside || !isOpposed && !isLabelInside) {\n      return anchor === 'Right' ? x : anchor === 'Center' ? x - textWidth / 2 : x - textWidth;\n    } else {\n      return anchor === 'Left' ? x : anchor === 'Center' ? x + textWidth / 2 : x + textWidth;\n    }\n  };\n  /**\n   * To render the yAxis label border.\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n    if (axis.border.width > 0) {\n      var startY = void 0;\n      var pointY = void 0;\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      scrollBarHeight = (axis.opposedPosition ? 1 : -1) * scrollBarHeight;\n      var gap = rect.height / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endY = void 0;\n      var length_1 = axis.maxLabelSize.width + 10 + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endX = axis.opposedPosition && axis.labelPosition === 'Inside' || !axis.opposedPosition && axis.labelPosition === 'Outside' ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointY = (axis.isInversed ? 1 - pointY : pointY) * rect.height;\n\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startY = pointY * -1 + (rect.y + rect.height);\n          endY = pointY * -1 - gap + (rect.y + rect.height);\n        } else {\n          startY = pointY * -1 + gap / 2 + (rect.y + rect.height);\n          endY = pointY * -1 - gap / 2 + (rect.y + rect.height);\n        }\n\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startY > rect.y + rect.height) {\n              labelBorder += 'M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(rect.y) > endY) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + rect.y + ' ';\n            } else {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n              }\n            }\n\n            break;\n\n          case 'WithoutTopandBottomBorder':\n            if (!(startY > rect.y + rect.height) && !(endY < Math.floor(rect.y))) {\n              labelBorder += 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY;\n            }\n\n            break;\n        }\n      }\n\n      labelBorder += axis.border.type === 'Rectangle' ? 'M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ' : '';\n\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n\n    if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n      this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n    }\n  };\n  /**\n   * To render the yAxis title\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var labelRotation = axis.opposedPosition ? 90 : -90;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding);\n      padding = axis.opposedPosition ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n      var x = rect.x + padding;\n      var y = rect.y + rect.height * 0.5;\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - axis.labelPadding - titleSize, 'middle', axis.titleCollection, 'rotate(' + labelRotation + ',' + x + ',' + y + ')', null, labelRotation);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n      element.setAttribute('tabindex', axis.tabIndex.toString());\n      element.setAttribute('aria-label', axis.description || axis.title);\n    }\n  };\n  /**\n   * xAxis grid line calculation performed here\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n    var isLogAxis = axis.valueType === 'Logarithmic';\n    var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n    var tempInterval;\n    var pointX = 0;\n    var majorGrid = '';\n    var majorTick = '';\n    var minorDirection;\n    var tickSize = axis.opposedPosition ? -axis.majorTickLines.height : axis.majorTickLines.height;\n    var axisLineSize = axis.opposedPosition ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n    var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.opposedPosition ? -axis.scrollBarHeight : axis.scrollBarHeight : 0;\n    var ticksbwtLabel = axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n    var length = axis.visibleLabels.length;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var ticks = isTickInside ? rect.y - tickSize - axisLineSize : rect.y + tickSize + axisLineSize + scrollBarHeight;\n    var chartThemeStyle = this.chart.themeStyle;\n\n    if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n      length += 1;\n    } //Gridlines\n\n\n    for (var i = 0; i < length; i++) {\n      if (axis.valueType !== 'DateTimeCategory') {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleLabels[i - 1].value + axis.visibleRange.interval - ticksbwtLabel;\n      } else {\n        tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n      }\n\n      pointX = valueToCoefficient(tempInterval, axis) * rect.width + rect.x;\n\n      if (pointX >= rect.x && rect.x + rect.width >= pointX) {\n        if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n          majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) + ' L ' + pointX + ' ' + this.seriesClipRect.y;\n          this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n        }\n\n        majorTick = 'M ' + pointX + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' L ' + pointX + ' ' + ticks;\n        this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n\n        if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n          if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n          }\n\n          minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n          this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n          this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n\n          if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n            this.renderMinorGridOnZooming(axis, tempInterval + axis.visibleRange.interval, rect, i, index, chartThemeStyle, parent);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * To render missing minor grid lines while zooming\n   * @param axis\n   * @param tempInterval\n   * @param rect\n   * @param i\n   * @param index\n   * @param chartThemeStyle\n   * @param parent\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n    var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n  };\n  /**\n   * To calcualte the axis minor line\n   * @param axis\n   * @param tempInterval\n   * @param rect\n   * @param labelIndex\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n    var value = tempInterval;\n    var coor = 0;\n    var position = 0;\n    var range = axis.visibleRange;\n    var isTickInside = axis.tickPosition === 'Inside';\n    var direction = [];\n    var tickSize = axis.opposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n    var logStart;\n    var logEnd;\n    var logInterval = 1;\n    var logPosition = 1;\n    var ticksX = isTickInside ? rect.y - tickSize : rect.y + tickSize;\n    var ticksY = isTickInside ? rect.x + tickSize : rect.x - tickSize;\n    var minorGird = '';\n    var minorTick = '';\n\n    if (axis.valueType === 'Logarithmic') {\n      logStart = Math.pow(axis.logBase, value - range.interval);\n      logEnd = Math.pow(axis.logBase, value);\n      logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n      logPosition = logStart + logInterval;\n    }\n\n    if (axis.orientation === 'Horizontal') {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n        logPosition += logInterval;\n\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((axis.isInversed ? 1 - position : position) * rect.width);\n          coor = Math.floor(position + rect.x);\n          minorGird = minorGird.concat('M' + ' ' + coor + ' ' + this.seriesClipRect.y + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n          coor = Math.floor(position + rect.x);\n          minorTick = minorTick.concat('M' + ' ' + coor + ' ' + rect.y + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n        }\n      }\n    } else {\n      for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n        value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n\n        if (inside(value, range)) {\n          position = (value - range.min) / (range.max - range.min);\n          position = Math.ceil((axis.isInversed ? 1 - position : position) * rect.height) * -1; // For inversed axis\n\n          coor = Math.floor(position + rect.y + rect.height);\n          minorGird = minorGird.concat('M' + ' ' + this.seriesClipRect.x + ' ' + coor + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n          coor = Math.floor(position + rect.y + rect.height);\n          minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) + ' ' + coor + ' ');\n        }\n\n        logPosition += logInterval;\n      }\n    }\n\n    direction.push(minorGird);\n    direction.push(minorTick);\n    return direction;\n  };\n  /**\n   * To find the numeric value of the log\n   * @param axis\n   * @param logPosition\n   * @param logInterval\n   * @param value\n   * @param labelIndex\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n    var range = axis.visibleRange;\n    var tempValue;\n\n    if (axis.valueType === 'Logarithmic') {\n      value = logBase(logPosition, axis.logBase);\n    } else if (axis.valueType === 'DateTime') {\n      tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    } else if (axis.valueType === 'DateTimeCategory') {\n      var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n      value += ((axis.visibleLabels[labelIndex + 1] ? axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) - (axis.visibleLabels[labelIndex] ? axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) / (axis.minorTicksPerInterval + 1);\n    } else {\n      tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n      value = isFirstLabel ? value - tempValue : value + tempValue;\n    }\n\n    return value;\n  };\n  /**\n   * To render the xAxis Labels\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   * @private\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n    var chart = this.chart;\n    var pointX = 0;\n    var pointY = 0;\n    var labelSpace = axis.labelPadding;\n    var labelHeight;\n    var elementSize;\n    var labelPadding;\n    var anchor;\n    var pixel = 10;\n    var labelElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels' + index\n    });\n    var islabelInside = axis.labelPosition === 'Inside';\n    var isOpposed = axis.opposedPosition;\n    var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n    var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n    var rotateSize;\n    var diffHeight;\n    var angle = axis.angle % 360; //I264474: Fix for X axis labels are not rendered in center of tick marks when angle is 270\n\n    var anglePadding = angle === 90 || angle === -270 ? -4 : angle === -90 || angle === 270 ? 4 : 0;\n    var isHorizontalAngle = angle === 0 || angle === -180 || angle === 180;\n    var options;\n    var yLocation;\n    var labelWidth;\n    var previousEnd = axis.isInversed ? rect.x + rect.width : rect.x;\n    var width = 0;\n    var length = axis.visibleLabels.length;\n    var intervalLength;\n    var label;\n    var isAxisBreakLabel;\n    var scrollBarHeight = axis.scrollbarSettings.enable || !islabelInside && isNullOrUndefined(axis.crossesAt) && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? axis.scrollBarHeight : 0;\n    var newPoints = [];\n    var isRotatedLabelIntersect = false;\n    padding += angle === 90 || angle === 270 || angle === -90 || angle === -270 ? islabelInside ? 5 : -5 : 0;\n    var isLabelUnderAxisLine = !isOpposed && !islabelInside || isOpposed && islabelInside;\n    var isEndAnchor = isLabelUnderAxisLine ? 360 >= angle && angle >= 180 || -1 >= angle && angle >= -180 : 1 <= angle && angle <= 180 || -181 >= angle && angle >= -360;\n\n    for (var i = 0, len = length; i < len; i++) {\n      label = axis.visibleLabels[i];\n      isAxisBreakLabel = isBreakLabel(label.originalText);\n      pointX = valueToCoefficient(label.value, axis) * rect.width + rect.x;\n      elementSize = label.size;\n      intervalLength = rect.width / length;\n      labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n      width = (axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 && labelWidth > intervalLength ? intervalLength : labelWidth;\n      labelHeight = elementSize.height / 4;\n      pointX -= isAxisBreakLabel || angle !== 0 ? 0 : width / 2; // label X value adjustment for label rotation (Start)\n\n      if (angle !== 0) {\n        if (isAxisBreakLabel) {\n          pointX -= axis.lineBreakAlignment === 'Left' ? label.breakLabelSize.width / 2 : axis.lineBreakAlignment === 'Right' ? -(label.breakLabelSize.width / 2) : 0;\n        } else {\n          pointX -= angle === -90 || angle === 270 ? -labelHeight : angle === 90 || angle === -270 ? labelHeight : 0;\n        }\n      } // label X value adjustment for label rotation (End)\n\n\n      if (axis.labelStyle.textAlignment === 'Far') {\n        pointX = pointX + width - pixel;\n      } else if (axis.labelStyle.textAlignment === 'Near') {\n        pointX = pointX - width + pixel;\n      } else if (axis.labelStyle.textAlignment === 'Center') {\n        pointX = pointX;\n      } // For line break label alignment like left, right & center in angle 0\n\n\n      if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n        pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : width / 2;\n      }\n\n      var paddingForBreakLabel = isAxisBreakLabel ? isHorizontalAngle ? elementSize.height : label.breakLabelSize.width / 2 : 0;\n      padding = isAxisBreakLabel ? tickSpace + labelSpace + axis.lineStyle.width * 0.5 : padding; // label Y value adjustment (Start)\n\n      if (islabelInside && angle) {\n        if (isAxisBreakLabel) {\n          pointY = isOpposed ? rect.y + padding + paddingForBreakLabel : rect.y - padding - paddingForBreakLabel;\n        } else {\n          pointY = isOpposed ? rect.y + padding + labelHeight : rect.y - padding - labelHeight;\n        }\n      } else {\n        if (isAxisBreakLabel) {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + paddingForBreakLabel) : padding + scrollBarHeight + (angle ? paddingForBreakLabel : 3 * labelHeight);\n        } else {\n          labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (angle ? labelHeight : label.index > 1 ? 2 * labelHeight : 0)) : padding + scrollBarHeight + (angle ? 1 : 3) * labelHeight;\n        }\n\n        pointY = rect.y + labelPadding * label.index;\n      } // label Y value adjustment (End)\n\n\n      if (isAxisBreakLabel) {\n        anchor = this.getAnchor(axis); // for break label self alignment\n      } else {\n        anchor = chart.isRtlEnabled || isEndAnchor ? 'end' : '';\n      }\n\n      options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n\n      if (axis.edgeLabelPlacement && angle === 0) {\n        switch (axis.edgeLabelPlacement) {\n          case 'None':\n            break;\n\n          case 'Hide':\n            if ((i === 0 || axis.isInversed && i === len - 1) && options.x < rect.x || (i === len - 1 || axis.isInversed && i === 0) && options.x + width > rect.x + rect.width) {\n              continue;\n            }\n\n            break;\n\n          case 'Shift':\n            if ((i === 0 || axis.isInversed && i === len - 1) && options.x < rect.x) {\n              intervalLength -= rect.x - options.x;\n              options.x = pointX = rect.x;\n            } else if ((i === len - 1 || axis.isInversed && i === 0) && options.x + width > rect.x + rect.width) {\n              if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                intervalLength -= options.x + width - (rect.x + rect.width);\n              } else {\n                intervalLength = width;\n              }\n\n              options.x = pointX = rect.x + rect.width - intervalLength;\n            }\n\n            break;\n        }\n      }\n\n      options.text = this.getLabelText(label, axis, intervalLength); // ------- Hide Calculation (Start) -------------    \n      // Currect label actual start value (Start)\n\n      var xValue = void 0;\n      var xValue2 = void 0;\n\n      if (isAxisBreakLabel && angle === 0) {\n        if (axis.lineBreakAlignment === 'Right') {\n          xValue = options.x - width;\n          xValue2 = options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          xValue = options.x - width / 2;\n          xValue2 = options.x + width / 2;\n        } else {\n          xValue = options.x;\n          xValue2 = options.x + width;\n        }\n      } else {\n        xValue = options.x;\n        xValue2 = options.x + width;\n      } // Currect label actual start value (End)\n\n\n      if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 && (!axis.isInversed ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n        continue;\n      } // Previous label actual end value (Start)\n\n\n      if (isAxisBreakLabel) {\n        if (axis.lineBreakAlignment === 'Right') {\n          previousEnd = axis.isInversed ? options.x - width : options.x;\n        } else if (axis.lineBreakAlignment === 'Center') {\n          previousEnd = axis.isInversed ? options.x - width / 2 : options.x + width / 2;\n        } else {\n          previousEnd = axis.isInversed ? options.x : options.x + width;\n        }\n      } else {\n        previousEnd = axis.isInversed ? options.x : options.x + width;\n      } // Previous label actual end value (End)\n      // ------- Hide Calculation (End) -------------\n      // label Rotataion calculation (Start)\n\n\n      if (angle !== 0) {\n        var height = void 0;\n        var rect_1 = void 0;\n\n        if (isAxisBreakLabel) {\n          var xAdjustment = 0;\n          var yAdjustment = 0;\n          height = label.breakLabelSize.height;\n          yAdjustment = label.breakLabelSize.height - 4; // 4 for label bound correction\n          // xAdjustment (Start)\n\n          if (axis.lineBreakAlignment === 'Center') {\n            xAdjustment = -(label.breakLabelSize.width / 2);\n          } else if (axis.lineBreakAlignment === 'Right') {\n            xAdjustment = -label.breakLabelSize.width;\n          } // xAdjustment (End)\n\n\n          if (isLabelUnderAxisLine) {\n            yAdjustment = label.breakLabelSize.height / (options.text.length + 1);\n          }\n\n          rect_1 = new Rect(options.x + xAdjustment, options.y - yAdjustment, label.breakLabelSize.width, height);\n        } else {\n          height = pointY - (options.y - (label.size.height / 2 + 10));\n          rect_1 = new Rect(options.x, options.y - (label.size.height / 2 - 5), label.size.width, height);\n        }\n\n        var rectCoordinates = this.getRectanglePoints(rect_1);\n        var rectCenterX = isAxisBreakLabel ? rect_1.x + rect_1.width / 2 : pointX;\n        var rectCenterY = isAxisBreakLabel ? rect_1.y + rect_1.height / 2 : pointY - height / 2;\n\n        if (isAxisBreakLabel) {\n          options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n        } else {\n          options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n        }\n\n        newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n        isRotatedLabelIntersect = false;\n\n        for (var index_1 = i; index_1 > 0; index_1--) {\n          if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n            isRotatedLabelIntersect = true;\n            newPoints[i] = null;\n            break;\n          }\n        }\n      } // label Rotataion calculation (End)\n\n\n      textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, axis.opposedPosition !== (axis.labelPosition === 'Inside'), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect);\n    }\n\n    if (!this.chart.enableCanvas) {\n      if (!chart.delayRedraw) {\n        parent.appendChild(labelElement);\n      } else if (axis.visible && axis.internalVisibility) {\n        this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n      }\n    }\n  };\n  /**\n   * To get text anchor value for line break labels.\n   * @param axis\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n    return axis.lineBreakAlignment === 'Center' ? 'middle' : axis.lineBreakAlignment === 'Left' ? 'start' : 'end';\n  };\n  /**\n   * Get rect coordinates\n   * @param label\n   * @param axis\n   * @param intervalLength\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n    var point1 = new ChartLocation(rect.x, rect.y);\n    var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n    var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n    var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n    return [point1, point2, point3, point4];\n  };\n  /**\n   * To get axis label text\n   * @param breakLabels\n   * @param label\n   * @param axis\n   * @param intervalLength\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n    if (isBreakLabel(label.originalText)) {\n      var result = [];\n      var str = void 0;\n\n      for (var index = 0; index < label.text.length; index++) {\n        str = this.findAxisLabel(axis, label.text[index], intervalLength);\n        result.push(str);\n      }\n\n      return result;\n    } else {\n      return this.findAxisLabel(axis, label.text, intervalLength);\n    }\n  };\n  /**\n   * To render the x-axis label border.\n   * @param axis\n   * @param index\n   * @param parent\n   * @param axisRect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n    if (axis.border.width > 0) {\n      var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n      var startX = void 0;\n      var startY = axisRect.y + (axis.opposedPosition ? -1 : 1) * scrollBarHeight;\n      var padding = 10;\n      var pointX = void 0;\n      var gap = axisRect.width / axis.visibleRange.delta * (axis.valueType === 'DateTime' ? axis.dateTimeInterval : axis.visibleRange.interval);\n      var endX = void 0;\n      var length_2 = axis.maxLabelSize.height + (axis.tickPosition === axis.labelPosition ? axis.majorTickLines.height : 0);\n      var labelBorder = '';\n      var ticksbwtLabel = axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks' ? -0.5 : 0;\n      var endY = axis.opposedPosition && axis.labelPosition === 'Inside' || !axis.opposedPosition && axis.labelPosition === 'Outside' ? axisRect.y + length_2 + padding + scrollBarHeight : axisRect.y - length_2 - padding - scrollBarHeight;\n\n      for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n        pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n        pointX = (axis.isInversed ? 1 - pointX : pointX) * axisRect.width;\n\n        if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n          startX = pointX + axisRect.x;\n          endX = pointX + gap + axisRect.x;\n        } else {\n          startX = pointX - gap * 0.5 + axisRect.x;\n          endX = pointX + gap * 0.5 + axisRect.x;\n        }\n\n        switch (axis.border.type) {\n          case 'Rectangle':\n          case 'WithoutTopBorder':\n            if (startX < axisRect.x) {\n              labelBorder += 'M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n            } else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ';\n            } else {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ';\n\n              if (i === 0) {\n                labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + startX + ' ' + endY + ' L ' + axisRect.x + ' ' + endY;\n              }\n\n              if (i === axis.visibleLabels.length - 1) {\n                labelBorder += 'M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' + 'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY;\n              }\n            }\n\n            break;\n\n          case 'WithoutTopandBottomBorder':\n            if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n              labelBorder += 'M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' + 'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY;\n            }\n\n            break;\n        }\n      }\n\n      labelBorder += axis.border.type === 'Rectangle' ? 'M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' + (axisRect.x + axisRect.width) + ' ' + startY : '';\n\n      if (labelBorder !== '') {\n        this.createAxisBorderElement(axis, index, labelBorder, parent);\n      }\n    }\n\n    if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n      this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n    }\n  };\n  /**\n   * To create border element of the axis\n   * @param axis\n   * @param index\n   * @param labelBorder\n   * @param parent\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n    var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n    var direction = element ? element.getAttribute('d') : '';\n    var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n    borderElement.setAttribute('style', 'pointer-events: none');\n    appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, true, 'x', 'y', null, direction, true);\n  };\n  /**\n   * To find the axis label of the intersect action\n   * @param axis\n   * @param label\n   * @param width\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n    return axis.labelIntersectAction === 'Trim' ? axis.angle % 360 === 0 && !axis.enableTrim ? textTrim(width, label, axis.labelStyle) : label : label;\n  };\n  /**\n   * X-Axis Title function performed\n   * @param axis\n   * @param index\n   * @param parent\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n    if (axis.title) {\n      var chart = this.chart;\n      var elementSize = measureText(axis.title, axis.titleStyle);\n      var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n      var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) + (axis.labelPosition === 'Inside' ? 0 : axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n      var titleSize = axis.titleSize.height * (axis.titleCollection.length - 1);\n      padding = axis.opposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : padding + 3 * elementSize.height / 4 + scrollBarHeight;\n      var options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width * 0.5, rect.y + padding, 'middle', axis.titleCollection);\n      var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n      element.setAttribute('aria-label', axis.description || axis.title);\n      element.setAttribute('tabindex', axis.tabIndex.toString());\n    }\n  };\n  /**\n   * To render the axis grid and tick lines(Both Major and Minor)\n   * @param axis\n   * @param index\n   * @param gridDirection\n   * @param gridModel\n   * @param gridId\n   * @param gridIndex\n   * @param parent\n   * @param themeColor\n   * @param dashArray\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n    if (dashArray === void 0) {\n      dashArray = null;\n    }\n\n    var chart = this.chart;\n    var direction;\n    var element;\n\n    if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n      element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n      direction = element ? element.getAttribute('d') : null;\n      element = null;\n      this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n      appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n    }\n  };\n  /**\n   * To Find the parent node of the axis\n   * @param chart\n   * @param label\n   * @param axis\n   * @param index\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, axis, index) {\n    if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n    } else {\n      return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n    }\n  };\n  /**\n   * Create Zooming Labels Function Called here\n   * @param chart\n   * @param labelElement\n   * @param axis\n   * @param index\n   * @param rect\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n    var parentNode = this.findParentNode(chart.element.id, labelElement, axis, index);\n    labelElement.setAttribute('opacity', '0.3');\n    var zoomElement = chart.renderer.createGroup({\n      id: chart.element.id + 'AxisLabels_Zoom' + index\n    });\n    zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n    parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n\n    if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n      parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n    } else {\n      parentNode.appendChild(zoomElement);\n    }\n  };\n  /**\n   * To get Rotate text size\n   * @param isBreakLabel\n   * @param axis\n   * @param label\n   * @param angle\n   * @param chart\n   */\n\n\n  CartesianAxisLayoutPanel.prototype.getRotateText = function (isBreakLabel, axis, label, angle, chart) {\n    if (isBreakLabel) {\n      return new Size(measureText(label.originalText, axis.labelStyle).height, measureText(label.originalText, axis.labelStyle).width);\n    } else {\n      return rotateTextSize(axis.labelStyle, label.text, angle, chart);\n    }\n  };\n\n  return CartesianAxisLayoutPanel;\n}();\n\nexport { CartesianAxisLayoutPanel };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/axis/cartesian-panel.js"],"names":["createElement","isNullOrUndefined","DataUtil","subtractThickness","valueToCoefficient","sum","redrawElement","isBreakLabel","ChartLocation","subArray","inside","appendChildElement","Thickness","logBase","createZoomingLabels","getElement","rotateTextSize","Size","Rect","measureText","TextOption","PathOption","textElement","textTrim","getRotatedRectangleCoordinates","isRotatedRectIntersect","isZoomSet","axisPadding","CartesianAxisLayoutPanel","chartModule","chart","padding","prototype","measureAxis","rect","crossAt","seriesClipRect","x","y","width","height","initialClipRect","leftSize","rightSize","topSize","bottomSize","measureRowAxis","measureColumnAxis","delayRedraw","calculateAxisSize","refreshAxis","row","calculateRowSize","_i","_a","rows","length","item","nearSizes","farSizes","arrangeAxis","measureDefinition","availableSize","computedHeight","column","calculateColumnSize","columns","computedWidth","definition","size","clipRect","ele","axes","axis","scrollBarHeight","scrollBarModule","zoomModule","zoomSettings","enableScrollbar","enableScrollbarOnZooming","isZoomed","zoomFactor","zoomPosition","scrollbarSettings","enable","getModule","baseModule","calculateRangeAndInterval","computeSize","nearCount","farCount","axisOffset","i","len","j","len_1","plotOffset","k","len_2","span","computedTop","plotOffsetTop","getAxisOffsetValue","plotOffsetBottom","opposedPosition","len_3","len_4","computedLeft","plotOffsetLeft","plotOffsetRight","measure","actualIndex","axisCollections","orientation","verticalAxes","push","getActualRow","pushAxis","horizontalAxes","getActualColumn","position1","position2","rangeOffset","crossesAt","crossesInAxis","requireInvertedAxis","crossInAxis","primaryXAxis","primaryYAxis","updateCrossAt","name","valueType","option","skeleton","type","dateParser","intl","getDateParser","dateFormatter","getDateFormat","Date","parse","parseJson","val","parseFloat","labels","indexOf","axisCollection","actualLength","pos","columnIndex","result","rowIndex","rowTop","remainingHeight","Math","max","min","parseInt","columnLeft","remainingWidth","renderAxes","axisElement","renderer","createGroup","id","element","axisLineElement","outsideElement","isInside","findAxisPosition","updateCrossValue","visible","internalVisibility","lineStyle","drawAxisLine","updatedRect","majorGridLines","majorTickLines","drawXAxisGridLine","tickPosition","drawXAxisLabels","labelPosition","placeNextToAxisLine","drawXAxisBorder","drawXAxisTitle","drawYAxisGridLine","drawYAxisLabels","drawYAxisBorder","drawYAxisTitle","enableCanvas","appendChild","childNodes","renderScrollbar","border","color","drawBottomLine","svgObject","redraw","zoomingScrollBar","isScrollUI","scrollElement","render","destroy","visibleRange","index","isRow","optionsLine","x1","x2","y1","y2","definitionName","htmlObject","drawLine","plotX","plotY","parent","direction","getAttribute","dashArray","themeStyle","axisLine","drawPath","isLogAxis","isCategoryAxis","tempInterval","pointY","majorGrid","majorTick","minorGridDirection","tickSize","axisLineSize","ticksbwtLabel","labelPlacement","isTickInside","ticks","visibleLabels","chartThemeStyle","minorGridLines","minorTickLines","value","interval","isBorder","renderGridLine","majorGridLine","majorTickLine","minorTicksPerInterval","renderMinorGridOnZooming","drawAxisMinorLine","minorGridLine","minorTickLine","chartArea","start","startIndex","endIndex","pointX","elementSize","labelSpace","labelPadding","options","isAxisBreakLabel","isLabelInside","isOpposed","tickSpace","defaultAnchor","isRtlEnabled","labelElement","textHeight","textPadding","maxLineWidth","pixel","originalText","breakLabelSize","stockChart","floor","text","labelStyle","textAlignment","getAxisLabelXvalue","anchor","getAnchor","edgeLabelPlacement","isInversed","axisLabel","createZoomingLabel","textWidth","lineBreakAlignment","startY","gap","delta","dateTimeInterval","endY","length_1","maxLabelSize","labelBorder","endX","createAxisBorderElement","multiLevelLabels","multiLevelLabelModule","renderYAxisMultiLevelLabels","title","labelRotation","titlePadding","multiLevelLabelHeight","titleSize","titleCollection","titleStyle","axisTitle","setAttribute","tabIndex","toString","description","minorDirection","labelIndex","isFirstLabel","coor","position","range","logStart","logEnd","logInterval","logPosition","ticksX","ticksY","minorGird","minorTick","pow","findLogNumeric","ceil","concat","tempValue","labelHeight","islabelInside","rotateSize","diffHeight","angle","anglePadding","isHorizontalAngle","yLocation","labelWidth","previousEnd","intervalLength","label","newPoints","isRotatedLabelIntersect","isLabelUnderAxisLine","isEndAnchor","labelIntersectAction","paddingForBreakLabel","getLabelText","xValue","xValue2","rect_1","xAdjustment","yAdjustment","rectCoordinates","getRectanglePoints","rectCenterX","rectCenterY","transform","index_1","point1","point2","point3","point4","str","findAxisLabel","axisRect","startX","length_2","renderXAxisMultiLevelLabels","borderElement","enableTrim","gridDirection","gridModel","gridId","gridIndex","themeColor","findParentNode","elementId","document","getElementById","contains","parentNode","zoomElement","replaceChild","getRotateText"],"mappings":"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","sourcesContent":["import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport { subtractThickness, valueToCoefficient, sum, redrawElement, isBreakLabel, ChartLocation } from '../../common/utils/helper';\nimport { subArray, inside, appendChildElement } from '../../common/utils/helper';\nimport { Thickness, logBase, createZoomingLabels, getElement, rotateTextSize } from '../../common/utils/helper';\nimport { Size, Rect, measureText, TextOption, PathOption } from '@syncfusion/ej2-svg-base';\nimport { textElement, textTrim, getRotatedRectangleCoordinates, isRotatedRectIntersect, isZoomSet } from '../../common/utils/helper';\n/**\n * Specifies the Cartesian Axis Layout.\n */\nvar axisPadding = 10;\nvar CartesianAxisLayoutPanel = /** @class */ (function () {\n    /** @private */\n    function CartesianAxisLayoutPanel(chartModule) {\n        this.chart = chartModule;\n        this.padding = 5;\n    }\n    /**\n     * Measure the axis size.\n     * @return {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureAxis = function (rect) {\n        var chart = this.chart;\n        this.crossAt(chart);\n        this.seriesClipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        this.initialClipRect = rect;\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with initial Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.initialClipRect = subtractThickness(this.initialClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            this.calculateAxisSize(this.initialClipRect);\n        }\n        this.leftSize = 0;\n        this.rightSize = 0;\n        this.topSize = 0;\n        this.bottomSize = 0;\n        //Measure Axis size with series Rect\n        this.measureRowAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(this.leftSize, this.rightSize, 0, 0));\n        this.measureColumnAxis(chart, this.initialClipRect);\n        this.seriesClipRect = subtractThickness(this.seriesClipRect, new Thickness(0, 0, this.topSize, this.bottomSize));\n        if (!this.chart.delayRedraw) {\n            chart.refreshAxis();\n            this.calculateAxisSize(this.seriesClipRect);\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureRowAxis = function (chart, rect) {\n        var row;\n        this.calculateRowSize(rect);\n        for (var _i = 0, _a = chart.rows; _i < _a.length; _i++) {\n            var item = _a[_i];\n            row = item;\n            row.nearSizes = [];\n            row.farSizes = [];\n            this.arrangeAxis(row);\n            this.measureDefinition(row, chart, new Size(chart.availableSize.width, row.computedHeight), rect);\n            if (this.leftSize < sum(row.nearSizes)) {\n                this.leftSize = sum(row.nearSizes);\n            }\n            if (this.rightSize < sum(row.farSizes)) {\n                this.rightSize = sum(row.farSizes);\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.measureColumnAxis = function (chart, rect) {\n        var column;\n        this.calculateColumnSize(rect);\n        for (var _i = 0, _a = chart.columns; _i < _a.length; _i++) {\n            var item = _a[_i];\n            column = item;\n            column.farSizes = [];\n            column.nearSizes = [];\n            this.arrangeAxis(column);\n            this.measureDefinition(column, chart, new Size(column.computedWidth, chart.availableSize.height), rect);\n            if (this.bottomSize < sum(column.nearSizes)) {\n                this.bottomSize = sum(column.nearSizes);\n            }\n            if (this.topSize < sum(column.farSizes)) {\n                this.topSize = sum(column.farSizes);\n            }\n        }\n    };\n    /**\n     * Measure the column and row in chart.\n     * @return {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measureDefinition = function (definition, chart, size, clipRect) {\n        var ele = 16; // scrollbar element height is 16.\n        for (var _i = 0, _a = definition.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.scrollBarHeight = chart.scrollBarModule && chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0) ? ele : 0;\n            axis.scrollBarHeight = chart.scrollBarModule && (chart.zoomModule && chart.zoomSettings.enableScrollbar &&\n                axis.enableScrollbarOnZooming && chart.zoomModule.isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)\n                || axis.scrollbarSettings.enable) ? ele : 0;\n            axis.getModule(chart);\n            axis.baseModule.calculateRangeAndInterval(size, axis);\n            definition.computeSize(axis, clipRect, axis.scrollBarHeight);\n        }\n        if (definition.farSizes.length > 0) {\n            definition.farSizes[definition.farSizes.length - 1] -= axisPadding;\n        }\n        if (definition.nearSizes.length > 0) {\n            definition.nearSizes[definition.nearSizes.length - 1] -= axisPadding;\n        }\n    };\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.calculateAxisSize = function (rect) {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var axis;\n        var nearCount = 0;\n        var farCount = 0;\n        var size = 0;\n        var x;\n        var y;\n        var axisOffset;\n        this.calculateRowSize(rect);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_1 = row.axes.length; j < len_1; j++) {\n                axis = row.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.height === 0) {\n                    axis.rect.height = row.computedHeight;\n                    size = 0;\n                    for (var k = i + 1, len_2 = i + axis.span; k < len_2; k++) {\n                        definition = chart.rows[k];\n                        size += definition.computedHeight;\n                    }\n                    axis.rect.y = (row.computedTop - size) + (axis.plotOffsetTop ? axis.plotOffsetTop : axisOffset);\n                    axis.rect.height = (axis.rect.height + size) -\n                        (this.getAxisOffsetValue(axis.plotOffsetTop, axis.plotOffsetBottom, axis.plotOffset));\n                    axis.rect.width = 0;\n                }\n                if (axis.opposedPosition) {\n                    x = rect.x + rect.width + sum(subArray(row.farSizes, farCount));\n                    axis.rect.x = axis.rect.x >= x ? axis.rect.x : x;\n                    farCount++;\n                }\n                else {\n                    x = rect.x - sum(subArray(row.nearSizes, nearCount));\n                    axis.rect.x = axis.rect.x <= x ? axis.rect.x : x;\n                    nearCount++;\n                }\n            }\n        }\n        this.calculateColumnSize(rect);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            nearCount = 0;\n            farCount = 0;\n            for (var j = 0, len_3 = column.axes.length; j < len_3; j++) {\n                axis = column.axes[j];\n                axisOffset = axis.plotOffset;\n                if (axis.rect.width === 0) {\n                    for (var k = i, len_4 = (i + axis.span); k < len_4; k++) {\n                        definition = chart.columns[k];\n                        axis.rect.width += definition.computedWidth;\n                    }\n                    axis.rect.x = column.computedLeft + (axis.plotOffsetLeft ? axis.plotOffsetLeft : axisOffset);\n                    axis.rect.width -= (this.getAxisOffsetValue(axis.plotOffsetLeft, axis.plotOffsetRight, axis.plotOffset));\n                    axis.rect.height = 0;\n                }\n                if (axis.opposedPosition) {\n                    y = rect.y - sum(subArray(column.farSizes, farCount));\n                    axis.rect.y = axis.rect.y <= y ? axis.rect.y : y;\n                    farCount++;\n                }\n                else {\n                    y = rect.y + rect.height + sum(subArray(column.nearSizes, nearCount));\n                    axis.rect.y = axis.rect.y >= y ? axis.rect.y : y;\n                    nearCount++;\n                }\n            }\n        }\n    };\n    /**\n     * Measure the axis.\n     * @return {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.measure = function () {\n        var chart = this.chart;\n        var row;\n        var column;\n        var definition;\n        var actualIndex;\n        var span;\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            //definition.Axes = axis;\n            if (axis.orientation === 'Vertical') {\n                chart.verticalAxes.push(axis);\n                actualIndex = this.getActualRow(axis);\n                row = chart.rows[actualIndex];\n                this.pushAxis(row, axis);\n                span = ((actualIndex + axis.span) > chart.rows.length ? chart.rows.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.rows[j];\n                    definition.axes[row.axes.length - 1] = axis;\n                    chart.rows[j] = definition;\n                }\n                chart.rows[actualIndex] = row;\n            }\n            else {\n                chart.horizontalAxes.push(axis);\n                actualIndex = this.getActualColumn(axis);\n                column = chart.columns[actualIndex];\n                this.pushAxis(column, axis);\n                span = ((actualIndex + axis.span) > chart.columns.length ? chart.columns.length : (actualIndex + axis.span));\n                for (var j = actualIndex + 1; j < span; j++) {\n                    definition = chart.columns[j];\n                    definition.axes[column.axes.length - 1] = axis;\n                    chart.columns[j] = definition;\n                }\n                chart.columns[actualIndex] = column;\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.getAxisOffsetValue = function (position1, position2, plotOffset) {\n        var rangeOffset = position1 ? (position1 + (position2 ? position2 :\n            plotOffset)) : (position2 ? position2 + plotOffset : 2 * plotOffset);\n        return rangeOffset;\n    };\n    CartesianAxisLayoutPanel.prototype.crossAt = function (chart) {\n        for (var _i = 0, _a = chart.axisCollections; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            if (axis.crossesAt === null) {\n                continue;\n            }\n            if (!axis.crossesInAxis) {\n                if (chart.requireInvertedAxis) {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryXAxis : chart.primaryYAxis;\n                }\n                else {\n                    axis.crossInAxis = ((axis.orientation === 'Horizontal')) ? chart.primaryYAxis : chart.primaryXAxis;\n                }\n                axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                continue;\n            }\n            else {\n                for (var i = 2, len = chart.axisCollections.length; i < len; i++) {\n                    if (axis.crossesInAxis === chart.axisCollections[i].name) {\n                        axis.crossInAxis = chart.axisCollections[i];\n                        axis.crossAt = this.updateCrossAt(axis.crossInAxis, axis.crossesAt);\n                        continue;\n                    }\n                }\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.updateCrossAt = function (axis, crossAt) {\n        switch (axis.valueType) {\n            case 'DateTime':\n                var option = {\n                    skeleton: 'full',\n                    type: 'dateTime'\n                };\n                var dateParser = this.chart.intl.getDateParser(option);\n                var dateFormatter = this.chart.intl.getDateFormat(option);\n                return Date.parse(dateParser(dateFormatter(new Date(DataUtil.parse.parseJson({ val: crossAt }).val))));\n            case 'Category':\n                return parseFloat(crossAt) ? parseFloat(crossAt) : axis.labels.indexOf(crossAt);\n            case 'Logarithmic':\n                return logBase(crossAt, axis.logBase);\n            default:\n                return crossAt;\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.pushAxis = function (definition, axis) {\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (!definition.axes[i]) {\n                definition.axes[i] = axis;\n                break;\n            }\n        }\n    };\n    CartesianAxisLayoutPanel.prototype.arrangeAxis = function (definition) {\n        var axisCollection = [];\n        for (var i = 0, len = definition.axes.length; i <= len; i++) {\n            if (definition.axes[i]) {\n                axisCollection.push(definition.axes[i]);\n            }\n        }\n        definition.axes = axisCollection;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualColumn = function (axis) {\n        var actualLength = this.chart.columns.length;\n        var pos = axis.columnIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    CartesianAxisLayoutPanel.prototype.getActualRow = function (axis) {\n        var actualLength = this.chart.rows.length;\n        var pos = axis.rowIndex;\n        var result = pos >= actualLength ? actualLength - 1 : (pos < 0 ? 0 : pos);\n        return result;\n    };\n    /**\n     * Measure the row size.\n     * @return {void}\n     */\n    CartesianAxisLayoutPanel.prototype.calculateRowSize = function (rect) {\n        /*! Calculate row size */\n        var chart = this.chart;\n        var row;\n        var rowTop = rect.y + rect.height;\n        var height = 0;\n        var remainingHeight = Math.max(0, rect.height);\n        for (var i = 0, len = chart.rows.length; i < len; i++) {\n            row = chart.rows[i];\n            if (row.height.indexOf('%') !== -1) {\n                height = Math.min(remainingHeight, (rect.height * parseInt(row.height, 10) / 100));\n            }\n            else {\n                height = Math.min(remainingHeight, parseInt(row.height, 10));\n            }\n            height = (i !== (len - 1)) ? height : remainingHeight;\n            row.computedHeight = height;\n            rowTop -= height;\n            row.computedTop = rowTop;\n            remainingHeight -= height;\n        }\n    };\n    /**\n     * Measure the row size.\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.calculateColumnSize = function (rect) {\n        /*! Calculate column size */\n        var chart = this.chart;\n        var column;\n        var columnLeft = rect.x;\n        var width = 0;\n        var remainingWidth = Math.max(0, rect.width);\n        for (var i = 0, len = chart.columns.length; i < len; i++) {\n            column = chart.columns[i];\n            if (column.width.indexOf('%') !== -1) {\n                width = Math.min(remainingWidth, (rect.width * parseInt(column.width, 10) / 100));\n            }\n            else {\n                width = Math.min(remainingWidth, parseInt(column.width, 10));\n            }\n            width = (i !== (len - 1)) ? width : remainingWidth;\n            column.computedWidth = width;\n            column.computedLeft = columnLeft;\n            columnLeft += width;\n            remainingWidth -= width;\n        }\n    };\n    /**\n     * To render the axis element.\n     * @return {void}\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.renderAxes = function () {\n        var chart = this.chart;\n        var axis;\n        var axisElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisInsideCollection' });\n        var axisLineElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisOutsideCollection' });\n        var outsideElement;\n        var isInside;\n        for (var i = 0, len = chart.axisCollections.length; i < len; i++) {\n            axis = chart.axisCollections[i];\n            this.element = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Inside' });\n            outsideElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisGroup' + i + 'Outside' });\n            isInside = this.findAxisPosition(axis);\n            if (axis.orientation === 'Horizontal') {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, axis.plotOffset, 0, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawXAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawXAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawXAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            else {\n                axis.updateCrossValue(chart);\n                if (axis.visible && axis.internalVisibility && axis.lineStyle.width > 0) {\n                    this.drawAxisLine(axis, i, 0, axis.plotOffset, isInside ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.majorGridLines.width > 0 || axis.majorTickLines.width > 0) {\n                    this.drawYAxisGridLine(axis, i, (isInside || axis.tickPosition === 'Inside') ? outsideElement : this.element, axis.updatedRect);\n                }\n                if (axis.visible && axis.internalVisibility) {\n                    this.drawYAxisLabels(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisBorder(axis, i, (isInside || axis.labelPosition === 'Inside') ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                    this.drawYAxisTitle(axis, i, isInside ? outsideElement : this.element, (axis.placeNextToAxisLine ? axis.updatedRect : axis.rect));\n                }\n            }\n            if (!this.chart.enableCanvas) {\n                axisElement.appendChild(this.element);\n                if (outsideElement && outsideElement.childNodes.length > 0) {\n                    axisLineElement.appendChild(outsideElement);\n                }\n            }\n            if (chart.scrollBarModule && ((chart.zoomSettings.enableScrollbar && axis.enableScrollbarOnZooming) ||\n                axis.scrollbarSettings.enable)) {\n                this.renderScrollbar(chart, axis);\n            }\n        }\n        this.element = chart.renderer.createGroup({ id: chart.element.id + 'DefinitionLine' });\n        for (var j = 0, len = chart.rows.length; j < len; j++) {\n            var row = chart.rows[j];\n            if (row.border.color) {\n                this.drawBottomLine(row, j, true);\n            }\n        }\n        for (var j = 0, len = chart.columns.length; j < len; j++) {\n            var column = chart.columns[j];\n            if (column.border.color) {\n                this.drawBottomLine(column, j, false);\n            }\n        }\n        if (!this.chart.enableCanvas) {\n            axisElement.appendChild(this.element);\n        }\n        appendChildElement(chart.enableCanvas, chart.svgObject, axisElement, chart.redraw);\n        return axisLineElement;\n    };\n    /**\n     * To render the axis scrollbar\n     * @param chart\n     * @param axis\n     */\n    CartesianAxisLayoutPanel.prototype.renderScrollbar = function (chart, axis) {\n        var isZoomed = isNullOrUndefined(chart.zoomModule) ? false : chart.zoomModule.isZoomed;\n        if (((isZoomed && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) || (axis.scrollbarSettings.enable &&\n            (axis.zoomFactor <= 1 || axis.zoomPosition >= 0))) && !axis.zoomingScrollBar.isScrollUI) {\n            if (!chart.scrollElement) {\n                chart.scrollElement = redrawElement(chart.redraw, chart.element.id + '_scrollElement') || createElement('div', { id: chart.element.id + '_scrollElement' });\n            }\n            appendChildElement(false, chart.scrollElement, axis.zoomingScrollBar.render(true), true);\n        }\n        else if (axis.zoomFactor === 1 && axis.zoomPosition === 0 && axis.zoomingScrollBar.svgObject && !axis.scrollbarSettings.enable) {\n            axis.zoomingScrollBar.destroy();\n        }\n        if (axis.zoomingScrollBar.isScrollUI) {\n            axis.zoomingScrollBar.isScrollUI = false;\n        }\n    };\n    /**\n     * To find the axis position\n     * @param axis\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisPosition = function (axis) {\n        return axis.crossAt !== null && axis.isInside(axis.crossInAxis.visibleRange);\n    };\n    /**\n     * To render the bootom line of the columns and rows\n     * @param definition\n     * @param index\n     * @param isRow\n     */\n    CartesianAxisLayoutPanel.prototype.drawBottomLine = function (definition, index, isRow) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var x1;\n        var x2;\n        var y1;\n        var y2;\n        var definitionName;\n        if (isRow) {\n            definition = definition;\n            y1 = y2 = definition.computedTop + definition.computedHeight;\n            x1 = this.seriesClipRect.x;\n            x2 = x1 + this.seriesClipRect.width;\n            definitionName = 'Row';\n        }\n        else {\n            definition = definition;\n            x1 = x2 = definition.computedLeft;\n            y1 = this.seriesClipRect.y;\n            y2 = y1 + this.seriesClipRect.height;\n            definitionName = 'Column';\n        }\n        optionsLine = {\n            'id': chart.element.id + '_AxisBottom_' + definitionName + index,\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            'stroke-width': definition.border.width,\n            'stroke': definition.border.color,\n        };\n        this.htmlObject = chart.renderer.drawLine(optionsLine);\n        this.element.appendChild(this.htmlObject);\n    };\n    /**\n     * To render the axis line\n     * @param axis\n     * @param index\n     * @param plotX\n     * @param plotY\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisLine = function (axis, index, plotX, plotY, parent, rect) {\n        var chart = this.chart;\n        var optionsLine = {};\n        var element = getElement(chart.element.id + 'AxisLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        element = null;\n        optionsLine = {\n            'id': chart.element.id + 'AxisLine_' + index,\n            'd': 'M ' + (rect.x - plotX) + ' ' + (rect.y - plotY) +\n                ' L ' + (rect.x + rect.width + plotX) + ' ' + (rect.y + rect.height + plotY),\n            'stroke-dasharray': axis.lineStyle.dashArray,\n            'stroke-width': axis.lineStyle.width,\n            'stroke': axis.lineStyle.color || chart.themeStyle.axisLine\n        };\n        this.htmlObject = chart.renderer.drawPath(optionsLine);\n        appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction);\n    };\n    /**\n     * To render the yAxis grid line\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointY = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorGridDirection;\n        var tickSize = axis.opposedPosition ? axis.majorTickLines.height : -axis.majorTickLines.height;\n        var axisLineSize = (axis.opposedPosition) ? axis.lineStyle.width * 0.5 : -axis.lineStyle.width * 0.5;\n        var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.opposedPosition ? axis.scrollBarHeight :\n            -axis.scrollBarHeight : 0;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.x - tickSize - axisLineSize) : (rect.x + tickSize + axisLineSize + scrollBarHeight);\n        var length = axis.visibleLabels.length;\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks' && length > 0) {\n            length += 1;\n        }\n        var minorGridLines = axis.minorGridLines;\n        var minorTickLines = axis.minorTickLines;\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            tempInterval = !axis.visibleLabels[i] ? (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel\n                : axis.visibleLabels[i].value - ticksbwtLabel;\n            pointY = valueToCoefficient(tempInterval, axis) * rect.height;\n            pointY = (pointY * -1) + (rect.y + rect.height);\n            if (pointY >= rect.y && (rect.y + rect.height) >= pointY) {\n                if ((inside(tempInterval, axis.visibleRange)) || this.isBorder(axis, i, pointY)) {\n                    majorGrid = 'M ' + this.seriesClipRect.x + ' ' + (pointY) +\n                        ' L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + pointY;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (rect.x + axisLineSize + (isTickInside ? scrollBarHeight : 0)) + ' ' + pointY +\n                    ' L ' + (ticks) + ' ' + pointY;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if ((minorGridLines.width > 0 || minorTickLines.width > 0) && axis.minorTicksPerInterval > 0) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorGridDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorGridDirection[0], minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorGridDirection[1], minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To check the border of the axis\n     * @param axis\n     * @param index\n     * @param value\n     */\n    CartesianAxisLayoutPanel.prototype.isBorder = function (axis, index, value) {\n        var border = this.chart.chartArea.border;\n        var rect = this.seriesClipRect;\n        var orientation = axis.orientation;\n        var start = (orientation === 'Horizontal') ? rect.x : rect.y;\n        var size = (orientation === 'Horizontal') ? rect.width : rect.height;\n        var startIndex = (orientation === 'Horizontal') ? 0 : axis.visibleLabels.length - 1;\n        var endIndex = (orientation === 'Horizontal') ? axis.visibleLabels.length - 1 : 0;\n        if (axis.plotOffset > 0) {\n            return true;\n        }\n        else if ((value === start || value === (start + size)) && (border.width <= 0 || border.color === 'transparent')) {\n            return true;\n        }\n        else if ((value !== start && index === startIndex) || (value !== (start + size) && index === endIndex)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * To render the yAxis label\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     * @private\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var elementSize;\n        var labelSpace = axis.labelPadding;\n        var options;\n        var isAxisBreakLabel;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.opposedPosition;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        padding = (axis.opposedPosition) ? padding : -padding;\n        var defaultAnchor = ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) ? 'end' : 'start';\n        defaultAnchor = chart.isRtlEnabled ? ((axis.opposedPosition) ? 'end' : 'start') : defaultAnchor;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight * (isOpposed ? 1 : -1) : 0;\n        var textHeight;\n        var textPadding;\n        var maxLineWidth;\n        var pixel = 10;\n        for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n            isAxisBreakLabel = isBreakLabel(axis.visibleLabels[i].originalText);\n            pointX = isLabelInside ? (rect.x - padding) : (rect.x + padding + scrollBarHeight);\n            elementSize = isAxisBreakLabel ? axis.visibleLabels[i].breakLabelSize : axis.visibleLabels[i].size;\n            pointY = (valueToCoefficient(axis.visibleLabels[i].value, axis) * rect.height) + (chart.stockChart ? 7 : 0);\n            pointY = Math.floor((pointY * -1) + (rect.y + rect.height));\n            textHeight = ((elementSize.height / 8) * axis.visibleLabels[i].text.length / 2);\n            textPadding = ((elementSize.height / 4) * 3) + 3;\n            pointY = (isAxisBreakLabel ? (axis.labelPosition === 'Inside' ? (pointY - (elementSize.height / 2) - textHeight + textPadding)\n                : (pointY - textHeight)) : (axis.labelPosition === 'Inside' ? (pointY + textPadding) : pointY + (elementSize.height / 4)));\n            if (axis.majorGridLines.width > axis.majorTickLines.width) {\n                maxLineWidth = axis.majorGridLines.width;\n            }\n            else {\n                maxLineWidth = axis.majorTickLines.width;\n            }\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointY = pointY - maxLineWidth - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointY = pointY + maxLineWidth + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                pointY = pointY;\n            }\n            pointX = isAxisBreakLabel ? this.getAxisLabelXvalue(pointX, axis, elementSize.width) : pointX;\n            var anchor = isAxisBreakLabel ? this.getAnchor(axis) : defaultAnchor;\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor, axis.visibleLabels[i].text);\n            if (axis.edgeLabelPlacement) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) ||\n                            (((i === len - 1) || (axis.isInversed && i === 0)) && options.y - elementSize.height * 0.5 < rect.y)) {\n                            options.text = '';\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.y > rect.y + rect.height) {\n                            options.y = pointY = rect.y + rect.height;\n                        }\n                        else if (((i === len - 1) || (axis.isInversed && i === 0)) && (options.y - elementSize.height * 0.5 < rect.y)) {\n                            options.y = pointY = rect.y + elementSize.height * 0.5;\n                        }\n                        break;\n                }\n            }\n            textElement(chart.renderer, options, axis.labelStyle, axis.labelStyle.color || chart.themeStyle.axisLabel, labelElement, false, chart.redraw, true, true);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                appendChildElement(chart.enableCanvas, parent, labelElement, chart.redraw);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    /**\n     * To get X value based on lineBreakAlignment for Y axis line break labels only.\n     * @param x\n     * @param axis\n     * @param textWidth\n     */\n    CartesianAxisLayoutPanel.prototype.getAxisLabelXvalue = function (x, axis, textWidth) {\n        var anchor = axis.lineBreakAlignment;\n        var isLabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.opposedPosition;\n        if ((isOpposed && isLabelInside) || (!isOpposed && !isLabelInside)) {\n            return (anchor === 'Right' ? x : (anchor === 'Center' ? (x - textWidth / 2) : (x - textWidth)));\n        }\n        else {\n            return (anchor === 'Left' ? x : (anchor === 'Center' ? (x + textWidth / 2) : (x + textWidth)));\n        }\n    };\n    /**\n     * To render the yAxis label border.\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisBorder = function (axis, index, parent, rect) {\n        if (axis.border.width > 0) {\n            var startY = void 0;\n            var pointY = void 0;\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            scrollBarHeight = (axis.opposedPosition ? 1 : -1) * scrollBarHeight;\n            var gap = (rect.height / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endY = void 0;\n            var length_1 = axis.maxLabelSize.width + 10 + ((axis.tickPosition === axis.labelPosition) ?\n                axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endX = ((axis.opposedPosition && axis.labelPosition === 'Inside') || (!axis.opposedPosition\n                && axis.labelPosition === 'Outside')) ? rect.x - length_1 + scrollBarHeight : rect.x + length_1 + scrollBarHeight;\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointY = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointY = (axis.isInversed ? (1 - pointY) : pointY) * rect.height;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startY = (pointY * -1) + (rect.y + rect.height);\n                    endY = (pointY * -1) - (gap) + (rect.y + rect.height);\n                }\n                else {\n                    startY = (pointY * -1) + gap / 2 + (rect.y + rect.height);\n                    endY = (pointY * -1) - gap / 2 + (rect.y + rect.height);\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startY > (rect.y + rect.height)) {\n                            labelBorder += ('M' + ' ' + endX + ' ' + (rect.y + rect.height) + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(rect.y) > (endY)) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX\n                                + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + (rect.y) + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY + ' ' + 'L' + ' ' +\n                                    endX + ' ' + endY + ' ');\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startY > rect.y + rect.height) && !((endY) < Math.floor(rect.y))) {\n                            labelBorder += ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + startY + ' ' + 'L' + ' ' + endX +\n                                ' ' + startY + ' ' + 'M' + ' ' + endX + ' ' + endY + ' ' +\n                                'L' + ' ' + (rect.x + scrollBarHeight) + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle') ? ('M' + ' ' + (rect.x + scrollBarHeight) + ' ' + rect.y + ' ' + 'L' + ' ' +\n                (rect.x + scrollBarHeight) + ' ' + (rect.y + rect.height) + ' ') : '';\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (axis.multiLevelLabels.length > 0 && this.chart.multiLevelLabelModule) {\n            this.chart.multiLevelLabelModule.renderYAxisMultiLevelLabels(axis, index, parent, rect);\n        }\n    };\n    /**\n     * To render the yAxis title\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawYAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var labelRotation = (axis.opposedPosition) ? 90 : -90;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    (axis.maxLabelSize.width + axis.multiLevelLabelHeight + this.padding));\n            padding = axis.opposedPosition ? padding + axis.scrollBarHeight : -padding - axis.scrollBarHeight;\n            var x = rect.x + padding;\n            var y = rect.y + rect.height * 0.5;\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, x, y - axis.labelPadding - titleSize, 'middle', axis.titleCollection, 'rotate(' + labelRotation + ',' + (x) + ',' + (y) + ')', null, labelRotation);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n            element.setAttribute('tabindex', axis.tabIndex.toString());\n            element.setAttribute('aria-label', axis.description || axis.title);\n        }\n    };\n    /**\n     * xAxis grid line calculation performed here\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisGridLine = function (axis, index, parent, rect) {\n        var isLogAxis = axis.valueType === 'Logarithmic';\n        var isCategoryAxis = axis.valueType.indexOf('Category') > -1;\n        var tempInterval;\n        var pointX = 0;\n        var majorGrid = '';\n        var majorTick = '';\n        var minorDirection;\n        var tickSize = (axis.opposedPosition) ? -axis.majorTickLines.height : axis.majorTickLines.height;\n        var axisLineSize = (axis.opposedPosition) ? -axis.lineStyle.width * 0.5 : axis.lineStyle.width * 0.5;\n        var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.opposedPosition ? -axis.scrollBarHeight :\n            axis.scrollBarHeight : 0;\n        var ticksbwtLabel = (axis.valueType.indexOf('Category') > -1 && axis.labelPlacement === 'BetweenTicks') ?\n            0.5 : 0;\n        var length = axis.visibleLabels.length;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var ticks = isTickInside ? (rect.y - tickSize - axisLineSize) : (rect.y + tickSize + axisLineSize + scrollBarHeight);\n        var chartThemeStyle = this.chart.themeStyle;\n        if (axis.valueType.indexOf('Category') > -1 && length > 0 && axis.labelPlacement === 'BetweenTicks') {\n            length += 1;\n        }\n        //Gridlines\n        for (var i = 0; i < length; i++) {\n            if (axis.valueType !== 'DateTimeCategory') {\n                tempInterval = axis.visibleLabels[i] ? axis.visibleLabels[i].value - ticksbwtLabel\n                    : (axis.visibleLabels[i - 1].value + axis.visibleRange.interval) - ticksbwtLabel;\n            }\n            else {\n                tempInterval = axis.visibleLabels[i] ?\n                    axis.visibleLabels[i].value - ticksbwtLabel : axis.visibleRange.max;\n            }\n            pointX = (valueToCoefficient(tempInterval, axis) * rect.width) + rect.x;\n            if (pointX >= rect.x && (rect.x + rect.width) >= pointX) {\n                if (inside(tempInterval, axis.visibleRange) || this.isBorder(axis, i, pointX)) {\n                    majorGrid = 'M ' + pointX + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height) +\n                        ' L ' + pointX + ' ' + this.seriesClipRect.y;\n                    this.renderGridLine(axis, index, majorGrid, axis.majorGridLines, '_MajorGridLine_', i, this.element, chartThemeStyle.majorGridLine, axis.majorGridLines.dashArray);\n                }\n                majorTick = 'M ' + (pointX) + ' ' + (rect.y + axisLineSize + (isTickInside ? scrollBarHeight : 0))\n                    + ' L ' + (pointX) + ' ' + ticks;\n                this.renderGridLine(axis, index, majorTick, axis.majorTickLines, '_MajorTickLine_', i, parent, chartThemeStyle.majorTickLine);\n                if (axis.minorTicksPerInterval > 0 && (axis.minorGridLines.width > 0 || axis.minorTickLines.width > 0)) {\n                    if (i === 0 && isZoomSet(axis) && !isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, tempInterval, rect, i, index, chartThemeStyle, parent);\n                    }\n                    minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i);\n                    this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', i, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n                    this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', i, parent, chartThemeStyle.minorTickLine);\n                    if (i === length - 1 && isZoomSet(axis) && isLogAxis && !isCategoryAxis) {\n                        this.renderMinorGridOnZooming(axis, (tempInterval + axis.visibleRange.interval), rect, i, index, chartThemeStyle, parent);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To render missing minor grid lines while zooming\n     * @param axis\n     * @param tempInterval\n     * @param rect\n     * @param i\n     * @param index\n     * @param chartThemeStyle\n     * @param parent\n     */\n    CartesianAxisLayoutPanel.prototype.renderMinorGridOnZooming = function (axis, tempInterval, rect, i, index, chartThemeStyle, parent) {\n        var minorDirection = this.drawAxisMinorLine(axis, tempInterval, rect, i, true);\n        this.renderGridLine(axis, index, minorDirection[0], axis.minorGridLines, '_MinorGridLine_', -1, this.element, chartThemeStyle.minorGridLine, axis.minorGridLines.dashArray);\n        this.renderGridLine(axis, index, minorDirection[1], axis.minorTickLines, '_MinorTickLine_', -1, parent, chartThemeStyle.minorTickLine);\n    };\n    /**\n     * To calcualte the axis minor line\n     * @param axis\n     * @param tempInterval\n     * @param rect\n     * @param labelIndex\n     */\n    CartesianAxisLayoutPanel.prototype.drawAxisMinorLine = function (axis, tempInterval, rect, labelIndex, isFirstLabel) {\n        var value = tempInterval;\n        var coor = 0;\n        var position = 0;\n        var range = axis.visibleRange;\n        var isTickInside = axis.tickPosition === 'Inside';\n        var direction = [];\n        var tickSize = axis.opposedPosition ? -axis.minorTickLines.height : axis.minorTickLines.height;\n        var logStart;\n        var logEnd;\n        var logInterval = 1;\n        var logPosition = 1;\n        var ticksX = isTickInside ? (rect.y - tickSize) : (rect.y + tickSize);\n        var ticksY = isTickInside ? (rect.x + tickSize) : (rect.x - tickSize);\n        var minorGird = '';\n        var minorTick = '';\n        if (axis.valueType === 'Logarithmic') {\n            logStart = Math.pow(axis.logBase, value - range.interval);\n            logEnd = Math.pow(axis.logBase, value);\n            logInterval = (logEnd - logStart) / (axis.minorTicksPerInterval + 1);\n            logPosition = logStart + logInterval;\n        }\n        if (axis.orientation === 'Horizontal') {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                logPosition += logInterval;\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil((axis.isInversed ? (1 - position) : position) * rect.width);\n                    coor = (Math.floor(position + rect.x));\n                    minorGird = minorGird.concat('M' + ' ' + coor + ' ' + (this.seriesClipRect.y)\n                        + 'L ' + coor + ' ' + (this.seriesClipRect.y + this.seriesClipRect.height));\n                    coor = (Math.floor(position + rect.x));\n                    minorTick = minorTick.concat('M' + ' ' + coor + ' ' + (rect.y)\n                        + 'L ' + coor + ' ' + (ticksX + axis.scrollBarHeight));\n                }\n            }\n        }\n        else {\n            for (var j = 0; j < axis.minorTicksPerInterval; j++) {\n                value = this.findLogNumeric(axis, logPosition, value, labelIndex, isFirstLabel);\n                if (inside(value, range)) {\n                    position = ((value - range.min) / (range.max - range.min));\n                    position = Math.ceil(((axis.isInversed ? (1 - position) : position)) * rect.height) * -1; // For inversed axis\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorGird = minorGird.concat('M' + ' ' + (this.seriesClipRect.x) + ' ' + coor\n                        + 'L ' + (this.seriesClipRect.x + this.seriesClipRect.width) + ' ' + coor + ' ');\n                    coor = (Math.floor(position + rect.y + rect.height));\n                    minorTick = minorTick.concat('M' + ' ' + rect.x + ' ' + coor + 'L ' + (ticksY - axis.scrollBarHeight) +\n                        ' ' + coor + ' ');\n                }\n                logPosition += logInterval;\n            }\n        }\n        direction.push(minorGird);\n        direction.push(minorTick);\n        return direction;\n    };\n    /**\n     * To find the numeric value of the log\n     * @param axis\n     * @param logPosition\n     * @param logInterval\n     * @param value\n     * @param labelIndex\n     */\n    CartesianAxisLayoutPanel.prototype.findLogNumeric = function (axis, logPosition, value, labelIndex, isFirstLabel) {\n        var range = axis.visibleRange;\n        var tempValue;\n        if (axis.valueType === 'Logarithmic') {\n            value = logBase(logPosition, axis.logBase);\n        }\n        else if (axis.valueType === 'DateTime') {\n            tempValue = axis.dateTimeInterval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        else if (axis.valueType === 'DateTimeCategory') {\n            var padding = axis.labelPlacement === 'BetweenTicks' ? 0.5 : 0;\n            value += ((axis.visibleLabels[labelIndex + 1] ?\n                axis.visibleLabels[labelIndex + 1].value - padding : axis.visibleRange.max) -\n                (axis.visibleLabels[labelIndex] ?\n                    axis.visibleLabels[labelIndex].value - padding : axis.visibleRange.min)) /\n                (axis.minorTicksPerInterval + 1);\n        }\n        else {\n            tempValue = range.interval / (axis.minorTicksPerInterval + 1);\n            value = isFirstLabel ? (value - tempValue) : (value + tempValue);\n        }\n        return value;\n    };\n    /**\n     * To render the xAxis Labels\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     * @private\n     */\n    // tslint:disable-next-line:max-func-body-length\n    CartesianAxisLayoutPanel.prototype.drawXAxisLabels = function (axis, index, parent, rect) {\n        var chart = this.chart;\n        var pointX = 0;\n        var pointY = 0;\n        var labelSpace = axis.labelPadding;\n        var labelHeight;\n        var elementSize;\n        var labelPadding;\n        var anchor;\n        var pixel = 10;\n        var labelElement = chart.renderer.createGroup({ id: chart.element.id + 'AxisLabels' + index });\n        var islabelInside = axis.labelPosition === 'Inside';\n        var isOpposed = axis.opposedPosition;\n        var tickSpace = axis.labelPosition === axis.tickPosition ? axis.majorTickLines.height : 0;\n        var padding = tickSpace + labelSpace + axis.lineStyle.width * 0.5;\n        var rotateSize;\n        var diffHeight;\n        var angle = axis.angle % 360;\n        //I264474: Fix for X axis labels are not rendered in center of tick marks when angle is 270\n        var anglePadding = ((angle === 90 || angle === -270) ? -4 : (angle === -90 || angle === 270) ? 4 : 0);\n        var isHorizontalAngle = (angle === 0 || angle === -180 || angle === 180);\n        var options;\n        var yLocation;\n        var labelWidth;\n        var previousEnd = axis.isInversed ? (rect.x + rect.width) : rect.x;\n        var width = 0;\n        var length = axis.visibleLabels.length;\n        var intervalLength;\n        var label;\n        var isAxisBreakLabel;\n        var scrollBarHeight = axis.scrollbarSettings.enable || (!islabelInside && isNullOrUndefined(axis.crossesAt)\n            && (axis.zoomFactor < 1 || axis.zoomPosition > 0)) ? axis.scrollBarHeight : 0;\n        var newPoints = [];\n        var isRotatedLabelIntersect = false;\n        padding += (angle === 90 || angle === 270 || angle === -90 || angle === -270) ? (islabelInside ? 5 : -5) : 0;\n        var isLabelUnderAxisLine = ((!isOpposed && !islabelInside) || (isOpposed && islabelInside));\n        var isEndAnchor = isLabelUnderAxisLine ?\n            ((360 >= angle && angle >= 180) || (-1 >= angle && angle >= -180)) :\n            ((1 <= angle && angle <= 180) || (-181 >= angle && angle >= -360));\n        for (var i = 0, len = length; i < len; i++) {\n            label = axis.visibleLabels[i];\n            isAxisBreakLabel = isBreakLabel(label.originalText);\n            pointX = (valueToCoefficient(label.value, axis) * rect.width) + rect.x;\n            elementSize = label.size;\n            intervalLength = rect.width / length;\n            labelWidth = isAxisBreakLabel ? label.breakLabelSize.width : elementSize.width;\n            width = ((axis.labelIntersectAction === 'Trim' || axis.labelIntersectAction === 'Wrap') && angle === 0 &&\n                labelWidth > intervalLength) ? intervalLength : labelWidth;\n            labelHeight = elementSize.height / 4;\n            pointX -= (isAxisBreakLabel || angle !== 0) ? 0 : (width / 2);\n            // label X value adjustment for label rotation (Start)\n            if (angle !== 0) {\n                if (isAxisBreakLabel) {\n                    pointX -= axis.lineBreakAlignment === 'Left' ? (label.breakLabelSize.width / 2) : axis.lineBreakAlignment === 'Right' ?\n                        -(label.breakLabelSize.width / 2) : 0;\n                }\n                else {\n                    pointX -= (angle === -90 || angle === 270 ? -labelHeight : (angle === 90 || angle === -270) ? labelHeight : 0);\n                }\n            }\n            // label X value adjustment for label rotation (End)\n            if (axis.labelStyle.textAlignment === 'Far') {\n                pointX = pointX + width - pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Near') {\n                pointX = pointX - width + pixel;\n            }\n            else if (axis.labelStyle.textAlignment === 'Center') {\n                pointX = pointX;\n            }\n            // For line break label alignment like left, right & center in angle 0\n            if (isAxisBreakLabel && axis.lineBreakAlignment !== 'Center' && angle === 0) {\n                pointX += axis.lineBreakAlignment === 'Left' ? -(width / 2) : (width / 2);\n            }\n            var paddingForBreakLabel = isAxisBreakLabel ?\n                (isHorizontalAngle ? (elementSize.height) : (label.breakLabelSize.width / 2)) : 0;\n            padding = isAxisBreakLabel ? (tickSpace + labelSpace + axis.lineStyle.width * 0.5) : padding;\n            // label Y value adjustment (Start)\n            if (islabelInside && angle) {\n                if (isAxisBreakLabel) {\n                    pointY = isOpposed ? (rect.y + padding + (paddingForBreakLabel)) : (rect.y - padding - (paddingForBreakLabel));\n                }\n                else {\n                    pointY = isOpposed ? (rect.y + padding + labelHeight) : (rect.y - padding - labelHeight);\n                }\n            }\n            else {\n                if (isAxisBreakLabel) {\n                    labelPadding = !isLabelUnderAxisLine ? -(padding + scrollBarHeight + (paddingForBreakLabel)) :\n                        padding + scrollBarHeight + (angle ? paddingForBreakLabel : (3 * labelHeight));\n                }\n                else {\n                    labelPadding = !isLabelUnderAxisLine ?\n                        -(padding + scrollBarHeight + (angle ? labelHeight : (label.index > 1 ? (2 * labelHeight) : 0))) :\n                        padding + scrollBarHeight + ((angle ? 1 : 3) * labelHeight);\n                }\n                pointY = (rect.y + (labelPadding * label.index));\n            }\n            // label Y value adjustment (End)\n            if (isAxisBreakLabel) {\n                anchor = this.getAnchor(axis); // for break label self alignment\n            }\n            else {\n                anchor = (chart.isRtlEnabled || isEndAnchor) ? 'end' : '';\n            }\n            options = new TextOption(chart.element.id + index + '_AxisLabel_' + i, pointX, pointY, anchor);\n            if (axis.edgeLabelPlacement && (angle === 0)) {\n                switch (axis.edgeLabelPlacement) {\n                    case 'None':\n                        break;\n                    case 'Hide':\n                        if (((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) ||\n                            ((i === len - 1 || (axis.isInversed && i === 0)) && (options.x + width > rect.x + rect.width))) {\n                            continue;\n                        }\n                        break;\n                    case 'Shift':\n                        if ((i === 0 || (axis.isInversed && i === len - 1)) && options.x < rect.x) {\n                            intervalLength -= (rect.x - options.x);\n                            options.x = pointX = rect.x;\n                        }\n                        else if ((i === len - 1 || (axis.isInversed && i === 0)) && ((options.x + width) > rect.x + rect.width)) {\n                            if (elementSize.width > intervalLength && axis.labelIntersectAction === 'Trim') {\n                                intervalLength -= (options.x + width - (rect.x + rect.width));\n                            }\n                            else {\n                                intervalLength = width;\n                            }\n                            options.x = pointX = rect.x + rect.width - intervalLength;\n                        }\n                        break;\n                }\n            }\n            options.text = this.getLabelText(label, axis, intervalLength);\n            // ------- Hide Calculation (Start) -------------    \n            // Currect label actual start value (Start)\n            var xValue = void 0;\n            var xValue2 = void 0;\n            if (isAxisBreakLabel && angle === 0) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    xValue = (options.x - width);\n                    xValue2 = options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    xValue = (options.x - (width / 2));\n                    xValue2 = options.x + (width / 2);\n                }\n                else {\n                    xValue = options.x;\n                    xValue2 = options.x + width;\n                }\n            }\n            else {\n                xValue = options.x;\n                xValue2 = options.x + width;\n            }\n            // Currect label actual start value (End)\n            if (angle === 0 && axis.labelIntersectAction === 'Hide' && i !== 0 &&\n                (!axis.isInversed ? xValue <= previousEnd : xValue2 >= previousEnd)) {\n                continue;\n            }\n            // Previous label actual end value (Start)\n            if (isAxisBreakLabel) {\n                if (axis.lineBreakAlignment === 'Right') {\n                    previousEnd = axis.isInversed ? (options.x - width) : options.x;\n                }\n                else if (axis.lineBreakAlignment === 'Center') {\n                    previousEnd = axis.isInversed ? (options.x - (width / 2)) : options.x + (width / 2);\n                }\n                else {\n                    previousEnd = axis.isInversed ? options.x : options.x + width;\n                }\n            }\n            else {\n                previousEnd = axis.isInversed ? options.x : options.x + width;\n            }\n            // Previous label actual end value (End)\n            // ------- Hide Calculation (End) -------------\n            // label Rotataion calculation (Start)\n            if (angle !== 0) {\n                var height = void 0;\n                var rect_1 = void 0;\n                if (isAxisBreakLabel) {\n                    var xAdjustment = 0;\n                    var yAdjustment = 0;\n                    height = (label.breakLabelSize.height);\n                    yAdjustment = (label.breakLabelSize.height) - 4; // 4 for label bound correction\n                    // xAdjustment (Start)\n                    if (axis.lineBreakAlignment === 'Center') {\n                        xAdjustment = -(label.breakLabelSize.width / 2);\n                    }\n                    else if (axis.lineBreakAlignment === 'Right') {\n                        xAdjustment = -label.breakLabelSize.width;\n                    }\n                    // xAdjustment (End)\n                    if (isLabelUnderAxisLine) {\n                        yAdjustment = (label.breakLabelSize.height) / (options.text.length + 1);\n                    }\n                    rect_1 = new Rect(options.x + xAdjustment, options.y - (yAdjustment), label.breakLabelSize.width, height);\n                }\n                else {\n                    height = (pointY) - (options.y - ((label.size.height / 2) + 10));\n                    rect_1 = new Rect(options.x, options.y - ((label.size.height / 2) - 5), label.size.width, height);\n                }\n                var rectCoordinates = this.getRectanglePoints(rect_1);\n                var rectCenterX = isAxisBreakLabel ? rect_1.x + (rect_1.width / 2) : pointX;\n                var rectCenterY = isAxisBreakLabel ? rect_1.y + (rect_1.height / 2) : (pointY - (height / 2));\n                if (isAxisBreakLabel) {\n                    options.transform = 'rotate(' + angle + ',' + rectCenterX + ',' + rectCenterY + ')';\n                }\n                else {\n                    options.transform = 'rotate(' + angle + ',' + pointX + ',' + pointY + ')';\n                }\n                newPoints.push(getRotatedRectangleCoordinates(rectCoordinates, rectCenterX, rectCenterY, angle));\n                isRotatedLabelIntersect = false;\n                for (var index_1 = i; index_1 > 0; index_1--) {\n                    if (newPoints[i] && newPoints[index_1 - 1] && isRotatedRectIntersect(newPoints[i], newPoints[index_1 - 1])) {\n                        isRotatedLabelIntersect = true;\n                        newPoints[i] = null;\n                        break;\n                    }\n                }\n            }\n            // label Rotataion calculation (End)\n            textElement(chart.renderer, options, label.labelStyle, label.labelStyle.color || chart.themeStyle.axisLabel, labelElement, (axis.opposedPosition !== (axis.labelPosition === 'Inside')), chart.redraw, true, null, null, null, label.size, isRotatedLabelIntersect);\n        }\n        if (!this.chart.enableCanvas) {\n            if (!chart.delayRedraw) {\n                parent.appendChild(labelElement);\n            }\n            else if (axis.visible && axis.internalVisibility) {\n                this.createZoomingLabel(this.chart, labelElement, axis, index, rect);\n            }\n        }\n    };\n    /**\n     * To get text anchor value for line break labels.\n     * @param axis\n     */\n    CartesianAxisLayoutPanel.prototype.getAnchor = function (axis) {\n        return (axis.lineBreakAlignment === 'Center' ? 'middle' : (axis.lineBreakAlignment === 'Left' ? 'start' : 'end'));\n    };\n    /**\n     * Get rect coordinates\n     * @param label\n     * @param axis\n     * @param intervalLength\n     */\n    CartesianAxisLayoutPanel.prototype.getRectanglePoints = function (rect) {\n        var point1 = new ChartLocation(rect.x, rect.y);\n        var point2 = new ChartLocation(rect.x + rect.width, rect.y);\n        var point3 = new ChartLocation(rect.x + rect.width, rect.y + rect.height);\n        var point4 = new ChartLocation(rect.x, rect.y + rect.height);\n        return [point1, point2, point3, point4];\n    };\n    /**\n     * To get axis label text\n     * @param breakLabels\n     * @param label\n     * @param axis\n     * @param intervalLength\n     */\n    CartesianAxisLayoutPanel.prototype.getLabelText = function (label, axis, intervalLength) {\n        if (isBreakLabel(label.originalText)) {\n            var result = [];\n            var str = void 0;\n            for (var index = 0; index < label.text.length; index++) {\n                str = this.findAxisLabel(axis, label.text[index], intervalLength);\n                result.push(str);\n            }\n            return result;\n        }\n        else {\n            return this.findAxisLabel(axis, label.text, intervalLength);\n        }\n    };\n    /**\n     * To render the x-axis label border.\n     * @param axis\n     * @param index\n     * @param parent\n     * @param axisRect\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisBorder = function (axis, index, parent, axisRect) {\n        if (axis.border.width > 0) {\n            var scrollBarHeight = axis.labelPosition === 'Outside' ? axis.scrollBarHeight : 0;\n            var startX = void 0;\n            var startY = axisRect.y + ((axis.opposedPosition ? -1 : 1) * scrollBarHeight);\n            var padding = 10;\n            var pointX = void 0;\n            var gap = (axisRect.width / axis.visibleRange.delta) * (axis.valueType === 'DateTime' ? axis.dateTimeInterval\n                : axis.visibleRange.interval);\n            var endX = void 0;\n            var length_2 = axis.maxLabelSize.height +\n                ((axis.tickPosition === axis.labelPosition) ? axis.majorTickLines.height : 0);\n            var labelBorder = '';\n            var ticksbwtLabel = (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') ? -0.5 : 0;\n            var endY = ((axis.opposedPosition && axis.labelPosition === 'Inside') ||\n                (!axis.opposedPosition && axis.labelPosition === 'Outside')) ?\n                (axisRect.y + length_2 + padding + scrollBarHeight) : (axisRect.y - length_2 - padding - scrollBarHeight);\n            for (var i = 0, len = axis.visibleLabels.length; i < len; i++) {\n                pointX = valueToCoefficient(axis.visibleLabels[i].value + ticksbwtLabel, axis);\n                pointX = (axis.isInversed ? (1 - pointX) : pointX) * axisRect.width;\n                if (axis.valueType === 'Category' && axis.labelPlacement === 'BetweenTicks') {\n                    startX = pointX + axisRect.x;\n                    endX = pointX + (gap) + axisRect.x;\n                }\n                else {\n                    startX = pointX - gap * 0.5 + axisRect.x;\n                    endX = pointX + gap * 0.5 + axisRect.x;\n                }\n                switch (axis.border.type) {\n                    case 'Rectangle':\n                    case 'WithoutTopBorder':\n                        if (startX < axisRect.x) {\n                            labelBorder += ('M' + ' ' + axisRect.x + ' ' + endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                        }\n                        else if (Math.floor(endX) > axisRect.width + axisRect.x && !(axis.visibleLabels.length === 1)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'L' + ' ' + (axisRect.width + axisRect.x) + ' ' + endY + ' ');\n                        }\n                        else {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' +\n                                endY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ');\n                            if (i === 0) {\n                                labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                    'M ' + startX + ' ' + endY + ' L ' + (axisRect.x) + ' ' + endY);\n                            }\n                            if (i === axis.visibleLabels.length - 1) {\n                                labelBorder += ('M' + ' ' + endX + ' ' + startY + ' ' + 'L' + ' ' + endX + ' ' + endY + ' ' +\n                                    'M ' + endX + ' ' + endY + ' L ' + (axisRect.width + axisRect.x) + ' ' + endY);\n                            }\n                        }\n                        break;\n                    case 'WithoutTopandBottomBorder':\n                        if (!(startX < axisRect.x) && !(Math.floor(endX) > axisRect.width + axisRect.x)) {\n                            labelBorder += ('M' + ' ' + startX + ' ' + startY + ' ' + 'L' + ' ' + startX + ' ' + endY + ' ' +\n                                'M ' + endX + ' ' + startY + ' L ' + endX + ' ' + endY);\n                        }\n                        break;\n                }\n            }\n            labelBorder += (axis.border.type === 'Rectangle' ? ('M ' + ' ' + axisRect.x + ' ' + startY + 'L' + ' ' +\n                (axisRect.x + axisRect.width) + ' ' + startY) : '');\n            if (labelBorder !== '') {\n                this.createAxisBorderElement(axis, index, labelBorder, parent);\n            }\n        }\n        if (this.chart.multiLevelLabelModule && axis.multiLevelLabels.length > 0) {\n            this.chart.multiLevelLabelModule.renderXAxisMultiLevelLabels(axis, index, parent, axisRect);\n        }\n    };\n    /**\n     * To create border element of the axis\n     * @param axis\n     * @param index\n     * @param labelBorder\n     * @param parent\n     */\n    CartesianAxisLayoutPanel.prototype.createAxisBorderElement = function (axis, index, labelBorder, parent) {\n        var element = getElement(this.chart.element.id + '_BorderLine_' + index);\n        var direction = element ? element.getAttribute('d') : '';\n        var borderElement = this.chart.renderer.drawPath(new PathOption(this.chart.element.id + '_BorderLine_' + index, 'transparent', axis.border.width, axis.border.color || this.chart.themeStyle.axisLine, 1, '', labelBorder));\n        borderElement.setAttribute('style', 'pointer-events: none');\n        appendChildElement(this.chart.enableCanvas, parent, borderElement, this.chart.redraw, true, 'x', 'y', null, direction, true);\n    };\n    /**\n     * To find the axis label of the intersect action\n     * @param axis\n     * @param label\n     * @param width\n     */\n    CartesianAxisLayoutPanel.prototype.findAxisLabel = function (axis, label, width) {\n        return (axis.labelIntersectAction === 'Trim' ?\n            ((axis.angle % 360 === 0 && !axis.enableTrim) ? textTrim(width, label, axis.labelStyle) : label) : label);\n    };\n    /**\n     * X-Axis Title function performed\n     * @param axis\n     * @param index\n     * @param parent\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.drawXAxisTitle = function (axis, index, parent, rect) {\n        if (axis.title) {\n            var chart = this.chart;\n            var elementSize = measureText(axis.title, axis.titleStyle);\n            var scrollBarHeight = isNullOrUndefined(axis.crossesAt) ? axis.scrollBarHeight : 0;\n            var padding = (axis.tickPosition === 'Inside' ? 0 : axis.majorTickLines.height + axis.titlePadding) +\n                (axis.labelPosition === 'Inside' ? 0 :\n                    axis.maxLabelSize.height + axis.multiLevelLabelHeight + axis.labelPadding);\n            var titleSize = (axis.titleSize.height * (axis.titleCollection.length - 1));\n            padding = axis.opposedPosition ? -(padding + elementSize.height / 4 + scrollBarHeight + titleSize) : (padding + (3 *\n                elementSize.height / 4) + scrollBarHeight);\n            var options = new TextOption(chart.element.id + '_AxisTitle_' + index, rect.x + rect.width * 0.5, rect.y + padding, 'middle', axis.titleCollection);\n            var element = textElement(chart.renderer, options, axis.titleStyle, axis.titleStyle.color || chart.themeStyle.axisTitle, parent);\n            element.setAttribute('aria-label', axis.description || axis.title);\n            element.setAttribute('tabindex', axis.tabIndex.toString());\n        }\n    };\n    /**\n     * To render the axis grid and tick lines(Both Major and Minor)\n     * @param axis\n     * @param index\n     * @param gridDirection\n     * @param gridModel\n     * @param gridId\n     * @param gridIndex\n     * @param parent\n     * @param themeColor\n     * @param dashArray\n     */\n    CartesianAxisLayoutPanel.prototype.renderGridLine = function (axis, index, gridDirection, gridModel, gridId, gridIndex, parent, themeColor, dashArray) {\n        if (dashArray === void 0) { dashArray = null; }\n        var chart = this.chart;\n        var direction;\n        var element;\n        if (gridModel.width > 0 && axis.visible && axis.internalVisibility && gridDirection) {\n            element = getElement(chart.element.id + gridId + index + '_' + gridIndex);\n            direction = element ? element.getAttribute('d') : null;\n            element = null;\n            this.htmlObject = chart.renderer.drawPath(new PathOption(chart.element.id + gridId + index + '_' + gridIndex, 'transparent', gridModel.width, gridModel.color || themeColor, null, dashArray, gridDirection));\n            appendChildElement(chart.enableCanvas, parent, this.htmlObject, chart.redraw, true, 'x', 'y', null, direction, true);\n        }\n    };\n    /**\n     * To Find the parent node of the axis\n     * @param chart\n     * @param label\n     * @param axis\n     * @param index\n     */\n    CartesianAxisLayoutPanel.prototype.findParentNode = function (elementId, label, axis, index) {\n        if (document.getElementById(elementId + 'AxisGroup' + index + 'Inside').contains(document.getElementById(label.id))) {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Inside');\n        }\n        else {\n            return document.getElementById(elementId + 'AxisGroup' + index + 'Outside');\n        }\n    };\n    /**\n     * Create Zooming Labels Function Called here\n     * @param chart\n     * @param labelElement\n     * @param axis\n     * @param index\n     * @param rect\n     */\n    CartesianAxisLayoutPanel.prototype.createZoomingLabel = function (chart, labelElement, axis, index, rect) {\n        var parentNode = this.findParentNode(chart.element.id, labelElement, axis, index);\n        labelElement.setAttribute('opacity', '0.3');\n        var zoomElement = chart.renderer.createGroup({\n            id: chart.element.id + 'AxisLabels_Zoom' + index\n        });\n        zoomElement = createZoomingLabels(chart, axis, zoomElement, index, axis.orientation === 'Vertical', rect);\n        parentNode.replaceChild(labelElement, document.getElementById(labelElement.id));\n        if (getElement(chart.element.id + 'AxisLabels_Zoom' + index)) {\n            parentNode.replaceChild(zoomElement, document.getElementById(zoomElement.id));\n        }\n        else {\n            parentNode.appendChild(zoomElement);\n        }\n    };\n    /**\n     * To get Rotate text size\n     * @param isBreakLabel\n     * @param axis\n     * @param label\n     * @param angle\n     * @param chart\n     */\n    CartesianAxisLayoutPanel.prototype.getRotateText = function (isBreakLabel, axis, label, angle, chart) {\n        if (isBreakLabel) {\n            return new Size(measureText(label.originalText, axis.labelStyle).height, measureText(label.originalText, axis.labelStyle).width);\n        }\n        else {\n            return rotateTextSize(axis.labelStyle, label.text, angle, chart);\n        }\n    };\n    return CartesianAxisLayoutPanel;\n}());\nexport { CartesianAxisLayoutPanel };\n"]},"metadata":{},"sourceType":"module"}