{"ast":null,"code":"/**\n * Methods for calculating coefficient.\n */\n\n/** @private */\nexport function rangeValueToCoefficient(value, range, inversed) {\n  var result = (value - range.min) / range.delta;\n  return inversed ? 1 - result : result;\n}\n/** @private */\n\nexport function getXLocation(x, range, size, inversed) {\n  x = rangeValueToCoefficient(x, range, inversed);\n  return x * size;\n}\n/** @private */\n\nexport function getRangeValueXByPoint(value, size, range, inversed) {\n  var actualValue = !inversed ? value / size : 1 - value / size;\n  return actualValue * range.delta + range.min;\n}\n/** @private */\n\nexport function getExactData(points, start, end) {\n  var selectedData = [];\n  points.map(function (point) {\n    if (point.xValue >= start && point.xValue <= end) {\n      selectedData.push({\n        'x': point.x,\n        'y': point.y\n      });\n    }\n  });\n  return selectedData;\n}\n/** @private */\n\nexport function getNearestValue(values, point) {\n  return values.reduce(function (prev, curr) {\n    return Math.abs(curr - point) < Math.abs(prev - point) ? curr : prev;\n  });\n}\n/**\n * Data point\n * @public\n */\n\nvar DataPoint =\n/** @class */\nfunction () {\n  function DataPoint(x, y, xValue, yValue, visible) {\n    if (visible === void 0) {\n      visible = true;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.xValue = xValue;\n    this.visible = visible;\n  }\n\n  return DataPoint;\n}();\n\nexport { DataPoint };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/range-navigator/utils/helper.js"],"names":["rangeValueToCoefficient","value","range","inversed","result","min","delta","getXLocation","x","size","getRangeValueXByPoint","actualValue","getExactData","points","start","end","selectedData","map","point","xValue","push","y","getNearestValue","values","reduce","prev","curr","Math","abs","DataPoint","yValue","visible"],"mappings":"AAAA;AACA;AACA;;AACA;AACA,OAAO,SAASA,uBAAT,CAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,QAA/C,EAAyD;AAC5D,MAAIC,MAAM,GAAG,CAACH,KAAK,GAAGC,KAAK,CAACG,GAAf,IAAuBH,KAAK,CAACI,KAA1C;AACA,SAAOH,QAAQ,GAAI,IAAIC,MAAR,GAAkBA,MAAjC;AACH;AACD;;AACA,OAAO,SAASG,YAAT,CAAsBC,CAAtB,EAAyBN,KAAzB,EAAgCO,IAAhC,EAAsCN,QAAtC,EAAgD;AACnDK,EAAAA,CAAC,GAAGR,uBAAuB,CAACQ,CAAD,EAAIN,KAAJ,EAAWC,QAAX,CAA3B;AACA,SAAOK,CAAC,GAAGC,IAAX;AACH;AACD;;AACA,OAAO,SAASC,qBAAT,CAA+BT,KAA/B,EAAsCQ,IAAtC,EAA4CP,KAA5C,EAAmDC,QAAnD,EAA6D;AAChE,MAAIQ,WAAW,GAAG,CAACR,QAAD,GAAYF,KAAK,GAAGQ,IAApB,GAA4B,IAAKR,KAAK,GAAGQ,IAA3D;AACA,SAAOE,WAAW,GAAIT,KAAK,CAACI,KAArB,GAA8BJ,KAAK,CAACG,GAA3C;AACH;AACD;;AACA,OAAO,SAASO,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0C;AAC7C,MAAIC,YAAY,GAAG,EAAnB;AACAH,EAAAA,MAAM,CAACI,GAAP,CAAW,UAAUC,KAAV,EAAiB;AACxB,QAAIA,KAAK,CAACC,MAAN,IAAgBL,KAAhB,IAAyBI,KAAK,CAACC,MAAN,IAAgBJ,GAA7C,EAAkD;AAC9CC,MAAAA,YAAY,CAACI,IAAb,CAAkB;AACd,aAAKF,KAAK,CAACV,CADG;AAEd,aAAKU,KAAK,CAACG;AAFG,OAAlB;AAIH;AACJ,GAPD;AAQA,SAAOL,YAAP;AACH;AACD;;AACA,OAAO,SAASM,eAAT,CAAyBC,MAAzB,EAAiCL,KAAjC,EAAwC;AAC3C,SAAOK,MAAM,CAACC,MAAP,CAAc,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACvC,WAAQC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAGR,KAAhB,IAAyBS,IAAI,CAACC,GAAL,CAASH,IAAI,GAAGP,KAAhB,CAAzB,GAAkDQ,IAAlD,GAAyDD,IAAjE;AACH,GAFM,CAAP;AAGH;AACD;AACA;AACA;AACA;;AACA,IAAII,SAAS;AAAG;AAAe,YAAY;AACvC,WAASA,SAAT,CAAmBrB,CAAnB,EAAsBa,CAAtB,EAAyBF,MAAzB,EAAiCW,MAAjC,EAAyCC,OAAzC,EAAkD;AAC9C,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,MAAAA,OAAO,GAAG,IAAV;AAAiB;;AAC3C,SAAKvB,CAAL,GAASA,CAAT;AACA,SAAKa,CAAL,GAASA,CAAT;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKY,OAAL,GAAeA,OAAf;AACH;;AACD,SAAOF,SAAP;AACH,CAT8B,EAA/B;;AAUA,SAASA,SAAT","sourcesContent":["/**\n * Methods for calculating coefficient.\n */\n/** @private */\nexport function rangeValueToCoefficient(value, range, inversed) {\n    var result = (value - range.min) / (range.delta);\n    return inversed ? (1 - result) : result;\n}\n/** @private */\nexport function getXLocation(x, range, size, inversed) {\n    x = rangeValueToCoefficient(x, range, inversed);\n    return x * size;\n}\n/** @private */\nexport function getRangeValueXByPoint(value, size, range, inversed) {\n    var actualValue = !inversed ? value / size : (1 - (value / size));\n    return actualValue * (range.delta) + range.min;\n}\n/** @private */\nexport function getExactData(points, start, end) {\n    var selectedData = [];\n    points.map(function (point) {\n        if (point.xValue >= start && point.xValue <= end) {\n            selectedData.push({\n                'x': point.x,\n                'y': point.y\n            });\n        }\n    });\n    return selectedData;\n}\n/** @private */\nexport function getNearestValue(values, point) {\n    return values.reduce(function (prev, curr) {\n        return (Math.abs(curr - point) < Math.abs(prev - point) ? curr : prev);\n    });\n}\n/**\n * Data point\n * @public\n */\nvar DataPoint = /** @class */ (function () {\n    function DataPoint(x, y, xValue, yValue, visible) {\n        if (visible === void 0) { visible = true; }\n        this.x = x;\n        this.y = y;\n        this.xValue = xValue;\n        this.visible = visible;\n    }\n    return DataPoint;\n}());\nexport { DataPoint };\n"]},"metadata":{},"sourceType":"module"}