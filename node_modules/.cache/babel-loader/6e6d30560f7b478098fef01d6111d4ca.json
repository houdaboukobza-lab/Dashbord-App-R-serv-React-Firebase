{"ast":null,"code":"import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\n\nvar ErrorBar =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the error bar module.\n   * @private\n   */\n  function ErrorBar(chart) {\n    this.chart = chart;\n  }\n  /**\n   * Render the error bar for series.\n   * @return {void}\n   */\n\n\n  ErrorBar.prototype.render = function (series) {\n    if (this.chart.chartAreaType === 'PolarRadar') {\n      return null;\n    }\n\n    this.createElement(series, this.chart);\n    this.renderErrorBar(series);\n  };\n\n  ErrorBar.prototype.renderErrorBar = function (series) {\n    var seriesIndex = series.index;\n    var symbolId;\n    var capId;\n    var errorbar = series.errorBar;\n    var errorBarCap = series.errorBar.errorBarCap;\n    var errorDirection = ['', ''];\n    var redraw = series.chart.redraw;\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      if (point.visible && point.symbolLocations[0]) {\n        var errorX = 0;\n        var errorY = 0;\n\n        switch (errorbar.mode) {\n          case 'Vertical':\n            errorY = errorbar.verticalError;\n            break;\n\n          case 'Horizontal':\n            errorX = errorbar.horizontalError;\n            break;\n\n          case 'Both':\n            errorX = errorbar.horizontalError;\n            errorY = errorbar.verticalError;\n            break;\n        }\n\n        errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n        symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n        capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n        var shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n        var element = getElement(shapeOption.id);\n        var previousDirection = element ? element.getAttribute('d') : null;\n        series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n        pathAnimation(element, errorDirection[0], redraw, previousDirection);\n        var capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n        element = getElement(capOption.id);\n        previousDirection = element ? element.getAttribute('d') : null;\n        appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n        pathAnimation(element, errorDirection[1], redraw, previousDirection);\n      }\n    }\n  }; // path calculation for error bar\n\n\n  ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n    var errorbar = series.errorBar;\n    var direction = errorbar.direction;\n    var location = [];\n    var stackedValue = series.stackedValues;\n    var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] : series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose' ? series.points[point.index].high : point.yValue;\n    var startPoint = getPoint(point.xValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + (direction === 'Plus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(startPoint);\n\n    if (series.isRectSeries) {\n      var midPoint = point.symbolLocations[0];\n      location.push(midPoint);\n    } else {\n      var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n      location.push(midPoint);\n    }\n\n    var endPoint = getPoint(point.xValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both') ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - (direction === 'Minus' || direction === 'Both' ? errorbar.type === 'Custom' && (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n    location.push(endPoint); // calculate error height for datalabel position alignment\n\n    point.error = errorbar.mode === 'Vertical' ? errorbar.verticalError : errorbar.horizontalError;\n    this.negativeHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[1].x - location[2].x : location[2].y - location[1].y : 0;\n    this.positiveHeight = errorbar.mode === 'Vertical' || errorbar.mode === 'Both' ? isInverted ? location[0].x - location[1].x : location[1].y - location[0].y : 0;\n    return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n  }; // calculations for eror bar types\n\n\n  ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var errorbar = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    errorX = errorX / 100 * point.xValue;\n    errorY = errorY / 100 * point.yValue;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n    errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var length = series.points.length;\n    var getMean = this.meanCalculation(series, series.errorBar.mode);\n    errorX = errorX * getMean.horizontalSquareRoot / Math.sqrt(length);\n    errorY = errorY * getMean.verticalSquareRoot / Math.sqrt(length);\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n    var errorbar = series.errorBar;\n    return this.findLocation(point, series, isInverted, errorX, errorY);\n  };\n\n  ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + start.x + ' ' + (mid.y - capLength) + ' L ' + start.x + ' ' + (mid.y + capLength) : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + end.x + ' ' + (mid.y - capLength) + ' L ' + end.x + ' ' + (mid.y + capLength) : ' ';\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var path = '';\n    var capDirection = '';\n    path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n    capDirection += direction === 'Plus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L ' + (mid.x + capLength) + ' ' + start.y : '';\n    capDirection += direction === 'Minus' || direction === 'Both' ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L ' + (mid.x + capLength) + ' ' + end.y : '';\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n    var capDirection = '';\n    var path = '';\n    var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n    var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n    path = pathH[0].concat(pathV[0]);\n    capDirection = pathH[1].concat(pathV[1]);\n    return [path, capDirection];\n  };\n\n  ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n    var direction = series.errorBar.direction;\n    var mode = series.errorBar.mode;\n    var capLength = series.errorBar.errorBarCap.length;\n    var path = '';\n    var paths;\n    var capDirection = '';\n    var errorMode = mode;\n\n    switch (mode) {\n      case 'Both':\n        errorMode = mode;\n        break;\n\n      case 'Horizontal':\n        errorMode = isInverted ? 'Vertical' : mode;\n        break;\n\n      case 'Vertical':\n        errorMode = isInverted ? 'Horizontal' : mode;\n        break;\n    }\n\n    switch (errorMode) {\n      case 'Horizontal':\n        paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n\n      case 'Vertical':\n        paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n\n      case 'Both':\n        paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n        break;\n    }\n\n    return [paths[0], paths[1]];\n  }; // mean calculation for standard deviation and standard error\n\n\n  ErrorBar.prototype.meanCalculation = function (series, mode) {\n    var sumOfX = 0;\n    var sumOfY = 0;\n    var verticalMean = 0;\n    var horizontalMean = 0;\n    var verStandardMean;\n    var horStandardMean;\n    var verSquareRoot;\n    var horSquareRoot;\n    var length = series.points.length;\n\n    switch (mode) {\n      case 'Vertical':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        break;\n\n      case 'Horizontal':\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n        break;\n\n      case 'Both':\n        sumOfY = sum(series.yData);\n        verticalMean = sumOfY / length;\n        sumOfX = sum(series.xData);\n        horizontalMean = sumOfX / length;\n    }\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      if (mode === 'Vertical') {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n      } else if (mode === 'Horizontal') {\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      } else {\n        sumOfY = sumOfY + Math.pow(point.yValue - verticalMean, 2);\n        sumOfX = sumOfX + Math.pow(point.xValue - horizontalMean, 2);\n      }\n    }\n\n    verStandardMean = sumOfY / (length - 1);\n    verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n    horStandardMean = sumOfX / (length - 1);\n    horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n    return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n  };\n\n  ErrorBar.prototype.createElement = function (series, chart) {\n    var explodeValue = 5;\n    var transform = chart.chartAreaType === 'Cartesian' ? 'translate(' + series.clipRect.x + ',' + series.clipRect.y + ')' : '';\n    var markerHeight = (series.marker.height + explodeValue) / 2;\n    var markerWidth = (series.marker.width + explodeValue) / 2;\n\n    if (chart.chartAreaType === 'Cartesian') {\n      var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', {\n        width: 1,\n        color: 'Gray'\n      }, 1, {\n        x: -markerWidth,\n        y: -markerHeight,\n        width: series.clipRect.width + markerWidth * 2,\n        height: series.clipRect.height + markerHeight * 2\n      });\n      series.errorBarElement = chart.renderer.createGroup({\n        'id': chart.element.id + 'ErrorBarGroup' + series.index,\n        'transform': transform,\n        'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n      });\n      series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n    }\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  ErrorBar.prototype.doErrorBarAnimation = function (series) {\n    var errorBarElements = series.errorBarElement.childNodes;\n\n    if (!errorBarElements) {\n      return null;\n    }\n\n    var delay = series.animation.delay + series.animation.duration;\n    var j = 1;\n\n    while (j < errorBarElements.length) {\n      for (var i = 0; i < series.points.length; i++) {\n        if (!series.points[i].symbolLocations[0]) {\n          continue;\n        }\n\n        errorBarElements[j].style.visibility = 'hidden';\n        templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n      }\n\n      j++;\n    }\n  };\n  /**\n   * Get module name.\n   */\n\n\n  ErrorBar.prototype.getModuleName = function () {\n    // Returns the module name\n    return 'ErrorBar';\n  };\n  /**\n   * To destroy the errorBar for series.\n   * @return {void}\n   * @private\n   */\n\n\n  ErrorBar.prototype.destroy = function (chart) {// Destroy method performed here\n  };\n\n  return ErrorBar;\n}();\n\nexport { ErrorBar };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/error-bar.js"],"names":["Mean","RectOption","pathAnimation","getElement","appendChildElement","appendClipElement","getPoint","sum","templateAnimate","PathOption","ErrorBar","chart","prototype","render","series","chartAreaType","createElement","renderErrorBar","seriesIndex","index","symbolId","capId","errorbar","errorBar","errorBarCap","errorDirection","redraw","_i","_a","points","length","point","visible","symbolLocations","errorX","errorY","mode","verticalError","horizontalError","type","requireInvertedAxis","element","id","shapeOption","width","color","themeStyle","previousDirection","getAttribute","errorBarElement","appendChild","renderer","drawPath","capOption","enableCanvas","findLocation","isInverted","x1","y1","direction","location","stackedValue","stackedValues","yValue","indexOf","endValues","seriesType","high","startPoint","xValue","horizontalPositiveError","verticalPositiveError","xAxis","yAxis","push","isRectSeries","midPoint","endPoint","horizontalNegativeError","verticalNegativeError","error","negativeHeight","x","y","positiveHeight","getErrorDirection","calculateFixedValue","calculatePercentageValue","calculateStandardDeviationValue","getMean","meanCalculation","horizontalSquareRoot","horizontalMean","verticalSquareRoot","verticalMean","calculateStandardErrorValue","Math","sqrt","calculateCustomValue","getHorizontalDirection","start","mid","end","errorMode","capLength","path","capDirection","getVerticalDirection","getBothDirection","pathH","pathV","concat","paths","sumOfX","sumOfY","verStandardMean","horStandardMean","verSquareRoot","horSquareRoot","yData","xData","pow","explodeValue","transform","clipRect","markerHeight","marker","height","markerWidth","options","createGroup","doErrorBarAnimation","errorBarElements","childNodes","delay","animation","duration","j","i","style","visibility","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { Mean, RectOption, pathAnimation, getElement, appendChildElement, appendClipElement } from '../../common/utils/helper';\nimport { getPoint, sum, templateAnimate } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\n/**\n * `ErrorBar` module is used to render the error bar for series.\n */\nvar ErrorBar = /** @class */ (function () {\n    /**\n     * Constructor for the error bar module.\n     * @private\n     */\n    function ErrorBar(chart) {\n        this.chart = chart;\n    }\n    /**\n     * Render the error bar for series.\n     * @return {void}\n     */\n    ErrorBar.prototype.render = function (series) {\n        if (this.chart.chartAreaType === 'PolarRadar') {\n            return null;\n        }\n        this.createElement(series, this.chart);\n        this.renderErrorBar(series);\n    };\n    ErrorBar.prototype.renderErrorBar = function (series) {\n        var seriesIndex = series.index;\n        var symbolId;\n        var capId;\n        var errorbar = series.errorBar;\n        var errorBarCap = series.errorBar.errorBarCap;\n        var errorDirection = ['', ''];\n        var redraw = series.chart.redraw;\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (point.visible && point.symbolLocations[0]) {\n                var errorX = 0;\n                var errorY = 0;\n                switch (errorbar.mode) {\n                    case 'Vertical':\n                        errorY = errorbar.verticalError;\n                        break;\n                    case 'Horizontal':\n                        errorX = errorbar.horizontalError;\n                        break;\n                    case 'Both':\n                        errorX = errorbar.horizontalError;\n                        errorY = errorbar.verticalError;\n                        break;\n                }\n                errorDirection = this['calculate' + errorbar.type + 'Value'](point, series, this.chart.requireInvertedAxis, errorX, errorY);\n                symbolId = this.chart.element.id + '_Series_' + '_ErrorBarGroup_' + seriesIndex + '_Point_' + point.index;\n                capId = this.chart.element.id + '_Series_' + '_ErrorBarCap_' + seriesIndex + '_Point_' + point.index;\n                var shapeOption = new PathOption(symbolId, '', errorbar.width, errorbar.color || this.chart.themeStyle.errorBar, null, '', errorDirection[0]);\n                var element = getElement(shapeOption.id);\n                var previousDirection = element ? element.getAttribute('d') : null;\n                series.errorBarElement.appendChild(this.chart.renderer.drawPath(shapeOption));\n                pathAnimation(element, errorDirection[0], redraw, previousDirection);\n                var capOption = new PathOption(capId, '', errorBarCap.width, errorBarCap.color || this.chart.themeStyle.errorBar, null, '', errorDirection[1]);\n                element = getElement(capOption.id);\n                previousDirection = element ? element.getAttribute('d') : null;\n                appendChildElement(this.chart.enableCanvas, series.errorBarElement, this.chart.renderer.drawPath(capOption), redraw);\n                pathAnimation(element, errorDirection[1], redraw, previousDirection);\n            }\n        }\n    };\n    // path calculation for error bar\n    ErrorBar.prototype.findLocation = function (point, series, isInverted, x1, y1) {\n        var errorbar = series.errorBar;\n        var direction = errorbar.direction;\n        var location = [];\n        var stackedValue = series.stackedValues;\n        var yValue = series.type.indexOf('Stacking') > -1 ? series.stackedValues.endValues[point.index] :\n            (series.seriesType === 'HighLow' || series.seriesType === 'HighLowOpenClose') ? (series.points[point.index].high) :\n                point.yValue;\n        var startPoint = getPoint(point.xValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalPositiveError : x1 : 0), yValue + ((direction === 'Plus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalPositiveError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(startPoint);\n        if (series.isRectSeries) {\n            var midPoint = point.symbolLocations[0];\n            location.push(midPoint);\n        }\n        else {\n            var midPoint = getPoint(point.xValue, point.yValue, series.xAxis, series.yAxis, isInverted);\n            location.push(midPoint);\n        }\n        var endPoint = getPoint(point.xValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Horizontal' || errorbar.mode === 'Both')) ? x1 = errorbar.horizontalNegativeError : x1 : 0), yValue - ((direction === 'Minus' || direction === 'Both') ? (errorbar.type === 'Custom' &&\n            (errorbar.mode === 'Vertical' || errorbar.mode === 'Both')) ? y1 = errorbar.verticalNegativeError : y1 : 0), series.xAxis, series.yAxis, isInverted);\n        location.push(endPoint);\n        // calculate error height for datalabel position alignment\n        point.error = (errorbar.mode === 'Vertical') ? errorbar.verticalError : errorbar.horizontalError;\n        this.negativeHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[1].x - location[2].x) :\n            (location[2].y - location[1].y)) : 0;\n        this.positiveHeight = (errorbar.mode === 'Vertical' || errorbar.mode === 'Both') ? (isInverted ? (location[0].x - location[1].x) :\n            (location[1].y - location[0].y)) : 0;\n        return this.getErrorDirection(location[0], location[1], location[2], series, isInverted);\n    };\n    // calculations for eror bar types\n    ErrorBar.prototype.calculateFixedValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculatePercentageValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        errorX = (errorX / 100) * point.xValue;\n        errorY = (errorY / 100) * point.yValue;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardDeviationValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = errorX * (getMean.horizontalSquareRoot + getMean.horizontalMean);\n        errorY = errorY * (getMean.verticalSquareRoot + getMean.verticalMean);\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateStandardErrorValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var length = series.points.length;\n        var getMean = this.meanCalculation(series, series.errorBar.mode);\n        errorX = ((errorX * getMean.horizontalSquareRoot) / Math.sqrt(length));\n        errorY = ((errorY * getMean.verticalSquareRoot) / Math.sqrt(length));\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.calculateCustomValue = function (point, series, isInverted, errorX, errorY, xAxis, yAxis) {\n        var errorbar = series.errorBar;\n        return this.findLocation(point, series, isInverted, errorX, errorY);\n    };\n    ErrorBar.prototype.getHorizontalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + start.x + ' ' + mid.y + ' L ' + end.x + ' ' + mid.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (start.x) + ' ' + (mid.y - capLength) + ' L '\n            + (start.x) + ' ' + (mid.y + capLength) : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (end.x) + ' ' + (mid.y - capLength) + ' L '\n            + (end.x) + ' ' + (mid.y + capLength) : ' ';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getVerticalDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var path = '';\n        var capDirection = '';\n        path += 'M ' + mid.x + ' ' + start.y + ' L ' + mid.x + ' ' + end.y;\n        capDirection += (direction === 'Plus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + start.y + ' L '\n            + (mid.x + capLength) + ' ' + start.y : '';\n        capDirection += (direction === 'Minus' || direction === 'Both') ? 'M ' + (mid.x - capLength) + ' ' + end.y + ' L '\n            + (mid.x + capLength) + ' ' + end.y : '';\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getBothDirection = function (start, mid, end, direction, errorMode, capLength) {\n        var capDirection = '';\n        var path = '';\n        var pathH = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n        var pathV = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n        path = pathH[0].concat(pathV[0]);\n        capDirection = pathH[1].concat(pathV[1]);\n        return [path, capDirection];\n    };\n    ErrorBar.prototype.getErrorDirection = function (start, mid, end, series, isInverted) {\n        var direction = series.errorBar.direction;\n        var mode = series.errorBar.mode;\n        var capLength = series.errorBar.errorBarCap.length;\n        var path = '';\n        var paths;\n        var capDirection = '';\n        var errorMode = mode;\n        switch (mode) {\n            case 'Both':\n                errorMode = mode;\n                break;\n            case 'Horizontal':\n                errorMode = (isInverted) ? 'Vertical' : mode;\n                break;\n            case 'Vertical':\n                errorMode = (isInverted) ? 'Horizontal' : mode;\n                break;\n        }\n        switch (errorMode) {\n            case 'Horizontal':\n                paths = this.getHorizontalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Vertical':\n                paths = this.getVerticalDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n            case 'Both':\n                paths = this.getBothDirection(start, mid, end, direction, errorMode, capLength);\n                break;\n        }\n        return [paths[0], paths[1]];\n    };\n    // mean calculation for standard deviation and standard error\n    ErrorBar.prototype.meanCalculation = function (series, mode) {\n        var sumOfX = 0;\n        var sumOfY = 0;\n        var verticalMean = 0;\n        var horizontalMean = 0;\n        var verStandardMean;\n        var horStandardMean;\n        var verSquareRoot;\n        var horSquareRoot;\n        var length = series.points.length;\n        switch (mode) {\n            case 'Vertical':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                break;\n            case 'Horizontal':\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n                break;\n            case 'Both':\n                sumOfY = sum(series.yData);\n                verticalMean = sumOfY / length;\n                sumOfX = sum(series.xData);\n                horizontalMean = sumOfX / length;\n        }\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (mode === 'Vertical') {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n            }\n            else if (mode === 'Horizontal') {\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n            else {\n                sumOfY = sumOfY + Math.pow((point.yValue - verticalMean), 2);\n                sumOfX = sumOfX + Math.pow((point.xValue - horizontalMean), 2);\n            }\n        }\n        verStandardMean = sumOfY / (length - 1);\n        verSquareRoot = Math.sqrt(sumOfY / (length - 1));\n        horStandardMean = sumOfX / (length - 1);\n        horSquareRoot = Math.sqrt(sumOfX / (length - 1));\n        return new Mean(verStandardMean, verSquareRoot, horStandardMean, horSquareRoot, verticalMean, horizontalMean);\n    };\n    ErrorBar.prototype.createElement = function (series, chart) {\n        var explodeValue = 5;\n        var transform = chart.chartAreaType === 'Cartesian' ?\n            'translate(' + series.clipRect.x + ',' + (series.clipRect.y) + ')' : '';\n        var markerHeight = (series.marker.height + explodeValue) / 2;\n        var markerWidth = (series.marker.width + explodeValue) / 2;\n        if (chart.chartAreaType === 'Cartesian') {\n            var options = new RectOption(chart.element.id + '_ChartErrorBarClipRect_' + series.index, 'transparent', { width: 1, color: 'Gray' }, 1, {\n                x: -markerWidth, y: -markerHeight,\n                width: series.clipRect.width + markerWidth * 2, height: series.clipRect.height + markerHeight * 2\n            });\n            series.errorBarElement = chart.renderer.createGroup({\n                'id': chart.element.id + 'ErrorBarGroup' + series.index,\n                'transform': transform,\n                'clip-path': 'url(#' + chart.element.id + '_ChartErrorBarClipRect_' + series.index + ')'\n            });\n            series.errorBarElement.appendChild(appendClipElement(chart.redraw, options, chart.renderer));\n        }\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    ErrorBar.prototype.doErrorBarAnimation = function (series) {\n        var errorBarElements = series.errorBarElement.childNodes;\n        if (!errorBarElements) {\n            return null;\n        }\n        var delay = series.animation.delay + series.animation.duration;\n        var j = 1;\n        while (j < errorBarElements.length) {\n            for (var i = 0; i < series.points.length; i++) {\n                if (!series.points[i].symbolLocations[0]) {\n                    continue;\n                }\n                errorBarElements[j].style.visibility = 'hidden';\n                templateAnimate(errorBarElements[j], delay, 350, series.chart.requireInvertedAxis ? 'SlideLeftIn' : 'SlideBottomIn', false);\n            }\n            j++;\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ErrorBar.prototype.getModuleName = function () {\n        // Returns the module name\n        return 'ErrorBar';\n    };\n    /**\n     * To destroy the errorBar for series.\n     * @return {void}\n     * @private\n     */\n    ErrorBar.prototype.destroy = function (chart) {\n        // Destroy method performed here\n    };\n    return ErrorBar;\n}());\nexport { ErrorBar };\n"]},"metadata":{},"sourceType":"module"}