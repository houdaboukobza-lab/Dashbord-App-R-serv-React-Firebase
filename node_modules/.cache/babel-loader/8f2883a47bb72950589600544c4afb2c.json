{"ast":null,"code":"import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\nimport { stopTimer } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\n\nvar RangeTooltip =\n/** @class */\nfunction () {\n  /**\n   * Constructor for tooltip module.\n   * @private.\n   */\n  function RangeTooltip(range) {\n    this.control = range;\n    this.elementId = range.element.id;\n  }\n  /**\n   * Left tooltip method called here\n   * @param rangeSlider\n   */\n\n\n  RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentStart);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n    }\n\n    this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n  };\n  /**\n   * get the content size\n   * @param value\n   */\n\n\n  RangeTooltip.prototype.getContentSize = function (value) {\n    var width;\n    var font = this.control.tooltip.textStyle;\n\n    if (this.control.tooltip.template) {\n      width = createTemplate(createElement('div', {\n        id: 'measureElement',\n        styles: 'position: absolute;'\n      }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n    } else {\n      // 20 for tooltip padding\n      width = measureText(value[0], font).width + 20;\n    }\n\n    return width;\n  };\n  /**\n   * Right tooltip method called here\n   * @param rangeSlider\n   */\n\n\n  RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n    this.fadeOutTooltip();\n    var content = this.getTooltipContent(rangeSlider.currentEnd);\n    var contentWidth = this.getContentSize(content);\n    var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n\n    if (contentWidth > rect.width) {\n      rect = rangeSlider.midRect;\n      rect.x = !this.control.series.length ? rect.x : 0;\n    }\n\n    this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n  };\n  /**\n   * Tooltip element creation\n   * @param id\n   */\n\n\n  RangeTooltip.prototype.createElement = function (id) {\n    if (getElement(this.elementId + id)) {\n      return getElement(this.elementId + id);\n    } else {\n      var element = document.createElement('div');\n      element.id = this.elementId + id;\n      element.className = 'ejSVGTooltip';\n      element.setAttribute('style', 'pointer-events:none; position:absolute;z-index: 1');\n\n      if (!this.control.stockChart) {\n        getElement(this.elementId + '_Secondary_Element').appendChild(element);\n      } else {\n        var stockChart = this.control.stockChart;\n        getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\n        element.style.transform = 'translateY(' + (stockChart.availableSize.height - stockChart.toolbarHeight - 80 + stockChart.toolbarHeight + stockChart.titleSize.height) + 'px)';\n      }\n\n      return element;\n    }\n  };\n  /**\n   * Tooltip render called here\n   * @param bounds\n   * @param parent\n   * @param pointX\n   * @param value\n   */\n\n\n  RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var argsData = {\n      cancel: false,\n      name: 'tooltipRender',\n      text: content,\n      textStyle: tooltip.textStyle\n    };\n    this.control.trigger('tooltipRender', argsData);\n    var left = control.svgObject.getBoundingClientRect().left - control.element.getBoundingClientRect().left;\n\n    if (!argsData.cancel) {\n      return new SVGTooltip({\n        location: {\n          x: pointX,\n          y: control.rangeSlider.sliderY\n        },\n        content: argsData.text,\n        marginX: 2,\n        enableShadow: false,\n        marginY: 2,\n        arrowPadding: 8,\n        rx: 0,\n        ry: 0,\n        inverted: control.series.length > 0,\n        areaBounds: bounds,\n        fill: tooltip.fill,\n        theme: this.control.theme,\n        //enableShadow: false,\n        clipBounds: {\n          x: left\n        },\n        border: tooltip.border,\n        opacity: tooltip.opacity,\n        template: tooltip.template,\n        textStyle: argsData.textStyle,\n        availableSize: control.availableSize,\n        data: {\n          'start': this.getTooltipContent(this.control.startValue)[0],\n          'end': this.getTooltipContent(this.control.endValue)[0],\n          'value': content[0]\n        }\n      }, parent);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * Tooltip content processed here\n   * @param value\n   */\n\n\n  RangeTooltip.prototype.getTooltipContent = function (value) {\n    var control = this.control;\n    var tooltip = control.tooltip;\n    var xAxis = control.chartSeries.xAxis;\n    var text;\n    var format = tooltip.format || xAxis.labelFormat;\n    var isCustom = format.match('{value}') !== null;\n    var valueType = xAxis.valueType;\n\n    if (valueType === 'DateTime') {\n      text = control.intl.getDateFormat({\n        format: format || 'MM/dd/yyyy',\n        type: firstToLowerCase(control.skeletonType),\n        skeleton: control.dateTimeModule.getSkeleton(xAxis, null, null, control.isBlazor)\n      })(new Date(value));\n    } else {\n      xAxis.format = control.intl.getNumberFormat({\n        format: isCustom ? '' : format,\n        useGrouping: control.useGroupingSeparator\n      });\n      text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n    }\n\n    return [text];\n  };\n  /**\n   * Fadeout animation performed here\n   */\n\n\n  RangeTooltip.prototype.fadeOutTooltip = function () {\n    var _this = this;\n\n    var tooltip = this.control.tooltip;\n\n    if (tooltip.displayMode === 'OnDemand') {\n      stopTimer(this.toolTipInterval);\n\n      if (this.rightTooltip) {\n        this.toolTipInterval = setTimeout(function () {\n          _this.leftTooltip.fadeOut();\n\n          _this.rightTooltip.fadeOut();\n        }, 1000);\n      }\n    }\n  };\n  /**\n   * Get module name.\n   */\n\n\n  RangeTooltip.prototype.getModuleName = function () {\n    return 'RangeTooltip';\n  };\n  /**\n   * To destroy the tooltip.\n   * @return {void}\n   * @private\n   */\n\n\n  RangeTooltip.prototype.destroy = function (chart) {// Destroy method called here\n  };\n\n  return RangeTooltip;\n}();\n\nexport { RangeTooltip };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/range-navigator/user-interaction/tooltip.js"],"names":["Tooltip","SVGTooltip","getElement","createTemplate","firstToLowerCase","stopTimer","measureText","createElement","RangeTooltip","range","control","elementId","element","id","prototype","renderLeftTooltip","rangeSlider","fadeOutTooltip","content","getTooltipContent","currentStart","contentWidth","getContentSize","rect","enableRtl","rightRect","leftRect","width","midRect","leftTooltip","renderTooltip","startX","value","font","tooltip","textStyle","template","styles","getBoundingClientRect","renderRightTooltip","currentEnd","x","series","length","rightTooltip","endX","document","className","setAttribute","stockChart","appendChild","style","transform","availableSize","height","toolbarHeight","titleSize","bounds","parent","pointX","argsData","cancel","name","text","trigger","left","svgObject","location","y","sliderY","marginX","enableShadow","marginY","arrowPadding","rx","ry","inverted","areaBounds","fill","theme","clipBounds","border","opacity","data","startValue","endValue","xAxis","chartSeries","format","labelFormat","isCustom","match","valueType","intl","getDateFormat","type","skeletonType","skeleton","dateTimeModule","getSkeleton","isBlazor","Date","getNumberFormat","useGrouping","useGroupingSeparator","doubleModule","formatValue","Math","pow","logBase","_this","displayMode","toolTipInterval","setTimeout","fadeOut","getModuleName","destroy","chart"],"mappings":"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","sourcesContent":["import { Tooltip as SVGTooltip } from '@syncfusion/ej2-svg-base';\nimport { getElement, createTemplate, firstToLowerCase } from '../../common/utils/helper';\nimport { stopTimer } from '../../common/utils/helper';\nimport { measureText } from '@syncfusion/ej2-svg-base';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * `Tooltip` module is used to render the tooltip for chart series.\n */\nvar RangeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for tooltip module.\n     * @private.\n     */\n    function RangeTooltip(range) {\n        this.control = range;\n        this.elementId = range.element.id;\n    }\n    /**\n     * Left tooltip method called here\n     * @param rangeSlider\n     */\n    RangeTooltip.prototype.renderLeftTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentStart);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.rightRect : rangeSlider.leftRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n        }\n        this.leftTooltip = this.renderTooltip(rect, this.createElement('_leftTooltip'), rangeSlider.startX, content);\n    };\n    /**\n     * get the content size\n     * @param value\n     */\n    RangeTooltip.prototype.getContentSize = function (value) {\n        var width;\n        var font = this.control.tooltip.textStyle;\n        if (this.control.tooltip.template) {\n            width = createTemplate(createElement('div', {\n                id: 'measureElement',\n                styles: 'position: absolute;'\n            }), 0, this.control.tooltip.template, this.control).getBoundingClientRect().width;\n        }\n        else {\n            // 20 for tooltip padding\n            width = measureText(value[0], font).width + 20;\n        }\n        return width;\n    };\n    /**\n     * Right tooltip method called here\n     * @param rangeSlider\n     */\n    RangeTooltip.prototype.renderRightTooltip = function (rangeSlider) {\n        this.fadeOutTooltip();\n        var content = this.getTooltipContent(rangeSlider.currentEnd);\n        var contentWidth = this.getContentSize(content);\n        var rect = this.control.enableRtl ? rangeSlider.leftRect : rangeSlider.rightRect;\n        if (contentWidth > rect.width) {\n            rect = rangeSlider.midRect;\n            rect.x = !this.control.series.length ? rect.x : 0;\n        }\n        this.rightTooltip = this.renderTooltip(rect, this.createElement('_rightTooltip'), rangeSlider.endX, content);\n    };\n    /**\n     * Tooltip element creation\n     * @param id\n     */\n    RangeTooltip.prototype.createElement = function (id) {\n        if (getElement(this.elementId + id)) {\n            return getElement(this.elementId + id);\n        }\n        else {\n            var element = document.createElement('div');\n            element.id = this.elementId + id;\n            element.className = 'ejSVGTooltip';\n            element.setAttribute('style', 'pointer-events:none; position:absolute;z-index: 1');\n            if (!this.control.stockChart) {\n                getElement(this.elementId + '_Secondary_Element').appendChild(element);\n            }\n            else {\n                var stockChart = this.control.stockChart;\n                getElement(stockChart.element.id + '_Secondary_Element').appendChild(element);\n                element.style.transform = 'translateY(' + (((stockChart.availableSize.height - stockChart.toolbarHeight - 80) +\n                    stockChart.toolbarHeight) + stockChart.titleSize.height) + 'px)';\n            }\n            return element;\n        }\n    };\n    /**\n     * Tooltip render called here\n     * @param bounds\n     * @param parent\n     * @param pointX\n     * @param value\n     */\n    RangeTooltip.prototype.renderTooltip = function (bounds, parent, pointX, content) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var argsData = {\n            cancel: false, name: 'tooltipRender', text: content,\n            textStyle: tooltip.textStyle\n        };\n        this.control.trigger('tooltipRender', argsData);\n        var left = control.svgObject.getBoundingClientRect().left -\n            control.element.getBoundingClientRect().left;\n        if (!argsData.cancel) {\n            return new SVGTooltip({\n                location: { x: pointX, y: control.rangeSlider.sliderY },\n                content: argsData.text, marginX: 2,\n                enableShadow: false,\n                marginY: 2, arrowPadding: 8, rx: 0, ry: 0,\n                inverted: control.series.length > 0,\n                areaBounds: bounds, fill: tooltip.fill,\n                theme: this.control.theme,\n                //enableShadow: false,\n                clipBounds: { x: left },\n                border: tooltip.border, opacity: tooltip.opacity,\n                template: tooltip.template,\n                textStyle: argsData.textStyle,\n                availableSize: control.availableSize,\n                data: {\n                    'start': this.getTooltipContent(this.control.startValue)[0],\n                    'end': this.getTooltipContent(this.control.endValue)[0],\n                    'value': content[0]\n                }\n            }, parent);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Tooltip content processed here\n     * @param value\n     */\n    RangeTooltip.prototype.getTooltipContent = function (value) {\n        var control = this.control;\n        var tooltip = control.tooltip;\n        var xAxis = control.chartSeries.xAxis;\n        var text;\n        var format = tooltip.format || xAxis.labelFormat;\n        var isCustom = format.match('{value}') !== null;\n        var valueType = xAxis.valueType;\n        if (valueType === 'DateTime') {\n            text = (control.intl.getDateFormat({\n                format: format || 'MM/dd/yyyy',\n                type: firstToLowerCase(control.skeletonType),\n                skeleton: control.dateTimeModule.getSkeleton(xAxis, null, null, control.isBlazor)\n            }))(new Date(value));\n        }\n        else {\n            xAxis.format = control.intl.getNumberFormat({\n                format: isCustom ? '' : format,\n                useGrouping: control.useGroupingSeparator\n            });\n            text = control.doubleModule.formatValue(xAxis, isCustom, format, valueType === 'Logarithmic' ? Math.pow(xAxis.logBase, value) : value);\n        }\n        return [text];\n    };\n    /**\n     * Fadeout animation performed here\n     */\n    RangeTooltip.prototype.fadeOutTooltip = function () {\n        var _this = this;\n        var tooltip = this.control.tooltip;\n        if (tooltip.displayMode === 'OnDemand') {\n            stopTimer(this.toolTipInterval);\n            if (this.rightTooltip) {\n                this.toolTipInterval = setTimeout(function () {\n                    _this.leftTooltip.fadeOut();\n                    _this.rightTooltip.fadeOut();\n                }, 1000);\n            }\n        }\n    };\n    /**\n     * Get module name.\n     */\n    RangeTooltip.prototype.getModuleName = function () {\n        return 'RangeTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    RangeTooltip.prototype.destroy = function (chart) {\n        // Destroy method called here\n    };\n    return RangeTooltip;\n}());\nexport { RangeTooltip };\n"]},"metadata":{},"sourceType":"module"}