{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\n\n\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\n\nvar TextLayouter =\n/** @class */\nfunction (_super) {\n  __extends(TextLayouter, _super); // Constructors\n\n  /**\n   * Initializes a new instance of the `TextLayouter` class.\n   * @private\n   */\n\n\n  function TextLayouter(element) {\n    return _super.call(this, element) || this;\n  }\n\n  Object.defineProperty(TextLayouter.prototype, \"element\", {\n    /**\n     * Gets the layout `element`.\n     * @private\n     */\n    get: function () {\n      return _super.prototype.getElement.call(this);\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * `Layouts` the element.\n   * @private\n   */\n\n  TextLayouter.prototype.layoutInternal = function (param) {\n    /* tslint:disable */\n    this.format = this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined' ? this.element.stringFormat : null;\n    var currentPage = param.page;\n    var currentBounds = param.bounds;\n    var text = this.element.value;\n    var result = null;\n    var pageResult = new TextPageLayoutResult();\n    pageResult.page = currentPage;\n    pageResult.remainder = text;\n\n    for (;;) {\n      pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n      result = this.getLayoutResult(pageResult);\n      break;\n    }\n    /* tslint:enable */\n\n\n    return result;\n  };\n  /**\n   * Raises `PageLayout` event if needed.\n   * @private\n   */\n\n\n  TextLayouter.prototype.getLayoutResult = function (pageResult) {\n    var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n    return result;\n  };\n  /* tslint:disable */\n\n  /**\n   * `Layouts` the text on the page.\n   * @private\n   */\n\n\n  TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n    var result = new TextPageLayoutResult();\n    result.remainder = text;\n    result.page = currentPage;\n    currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n    var layouter = new PdfStringLayouter();\n    var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n    var textFinished = stringResult.remainder == null;\n    var doesntFit = param.format.break === PdfLayoutBreakType.FitElement;\n    var canDraw = !(doesntFit || stringResult.empty); // Draw the text.\n\n    var graphics = currentPage.graphics;\n    var brush = this.element.getBrush();\n\n    if (this.element instanceof PdfTextWebLink) {\n      brush.color = new PdfColor(0, 0, 255);\n    }\n\n    graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n    var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n    result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n    result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n    result.remainder = stringResult.remainder;\n    result.end = textFinished;\n    return result;\n  };\n  /* tslint:enable */\n\n  /**\n   * `Corrects current bounds` on the page.\n   * @private\n   */\n\n\n  TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n    var pageSize = currentPage.graphics.clientSize;\n    currentBounds.height = currentBounds.height > 0 ? currentBounds.height : pageSize.height - currentBounds.y;\n    return currentBounds;\n  };\n  /**\n   * Returns a `rectangle` where the text was printed on the page.\n   * @private\n   */\n\n  /* tslint:disable */\n\n\n  TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n    var textSize = stringResult.actualSize;\n    var x = currentBounds.x;\n    var y = currentBounds.y;\n    var width = currentBounds.width > 0 ? currentBounds.width : textSize.width;\n    var height = textSize.height;\n    var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format); // if (currentBounds.width <= 0) {\n\n    x = shiftedRect.x; // }\n\n    var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n    y += verticalShift;\n    var bounds = new RectangleF(x, y, width, height);\n    return bounds;\n  };\n\n  return TextLayouter;\n}(ElementLayouter);\n\nexport { TextLayouter };\n\nvar TextPageLayoutResult =\n/** @class */\nfunction () {\n  function TextPageLayoutResult() {}\n\n  return TextPageLayoutResult;\n}();\n\nexport { TextPageLayoutResult };\n\nvar PdfTextLayoutResult =\n/** @class */\nfunction (_super) {\n  __extends(PdfTextLayoutResult, _super); // Constructors\n\n  /**\n   * Initializes the new instance of `PdfTextLayoutResult` class.\n   * @private\n   */\n\n\n  function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n    var _this = _super.call(this, page, bounds) || this;\n\n    _this.remainderText = remainder;\n    _this.lastLineTextBounds = lastLineBounds;\n    return _this;\n  }\n\n  Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n    // Properties\n\n    /**\n     * Gets a value that contains the `text` that was not printed.\n     * @private\n     */\n    get: function () {\n      return this.remainderText;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n    /**\n     * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n     * @private\n     */\n    get: function () {\n      return this.lastLineTextBounds;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTextLayoutResult;\n}(PdfLayoutResult);\n\nexport { PdfTextLayoutResult };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/text-layouter.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ElementLayouter","PdfLayoutResult","RectangleF","SizeF","PdfStringLayouter","PdfLayoutBreakType","PdfColor","PdfTextWebLink","TextLayouter","_super","element","call","defineProperty","get","getElement","enumerable","configurable","layoutInternal","param","format","stringFormat","currentPage","page","currentBounds","bounds","text","value","result","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","layouter","stringResult","layout","font","getClientSize","height","textFinished","doesntFit","break","FitElement","canDraw","empty","graphics","brush","getBrush","color","drawStringLayoutResult","pen","lineInfo","lines","lineCount","getLineBounds","getTextPageBounds","end","pageSize","clientSize","y","textSize","actualSize","x","width","shiftedRect","checkCorrectLayoutRectangle","verticalShift","getTextVerticalAlignShift","_this","remainderText","lastLineTextBounds"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n"]},"metadata":{},"sourceType":"module"}