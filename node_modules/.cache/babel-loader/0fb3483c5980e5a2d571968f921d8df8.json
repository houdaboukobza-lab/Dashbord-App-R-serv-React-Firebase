{"ast":null,"code":"import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { getElement, removeElement } from '../utils/helper';\nimport { beforePrint, afterExport } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap, SizeF, PdfStandardFont, PdfPageTemplateElement, PdfSolidBrush, PdfColor } from '@syncfusion/ej2-pdf-export';\n\nvar ExportUtils =\n/** @class */\nfunction () {\n  /**\n   * Constructor for chart and accumulation annotation\n   * @param control\n   */\n  function ExportUtils(control) {\n    this.control = control;\n  }\n  /**\n   * To print the accumulation and chart elements\n   * @param elements\n   */\n\n\n  ExportUtils.prototype.print = function (elements) {\n    this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n    this.printWindow.moveTo(0, 0);\n    this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n    var argsData = {\n      cancel: false,\n      htmlContent: this.getHTMLContent(elements),\n      name: beforePrint\n    };\n    this.control.trigger(beforePrint, argsData);\n\n    if (!argsData.cancel) {\n      printWindow(argsData.htmlContent, this.printWindow);\n    }\n  };\n  /**\n   * To get the html string of the chart and accumulation\n   * @param elements\n   * @private\n   */\n\n\n  ExportUtils.prototype.getHTMLContent = function (elements) {\n    var div = createElement('div');\n\n    if (elements) {\n      if (elements instanceof Array) {\n        for (var j = 0; j < elements.length; j++) {\n          var value = elements[j];\n          div.appendChild(getElement(value).cloneNode(true));\n        }\n      } else if (elements instanceof Element) {\n        div.appendChild(elements.cloneNode(true));\n      } else {\n        div.appendChild(getElement(elements).cloneNode(true));\n      }\n    } else {\n      div.appendChild(this.control.element.cloneNode(true));\n    }\n\n    return div;\n  };\n  /**\n   * To export the file as image/svg format\n   * @param type\n   * @param fileName\n   */\n\n\n  ExportUtils.prototype.export = function (type, fileName, orientation, controls, width, height, isVertical, header, footer) {\n    var _this = this;\n\n    var controlValue = this.getControlsValue(controls, isVertical);\n    width = width ? width : controlValue.width;\n    height = height ? height : controlValue.height;\n    var element = this.control.svgObject;\n    var isCanvas = this.control.enableCanvas;\n    var image;\n\n    if (!isCanvas) {\n      element = createElement('canvas', {\n        id: 'ej2-canvas',\n        attrs: {\n          'width': width.toString(),\n          'height': height.toString()\n        }\n      });\n    }\n\n    var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n    orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n    var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' + controlValue.svg.outerHTML + '</svg>';\n    var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] : [new XMLSerializer().serializeToString(controlValue.svg)], {\n      type: 'image/svg+xml'\n    }));\n\n    if (type === 'SVG') {\n      if (Browser.info.name === 'msie') {\n        var svg = new Blob([new XMLSerializer().serializeToString(controlValue.svg)], {\n          type: 'application/octet-stream'\n        });\n        window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n      } else {\n        this.triggerDownload(fileName, type, url, isDownload);\n      }\n    } else if (Browser.info.name === 'msie') {\n      var canvas = element;\n\n      if (!isCanvas) {\n        canvas = this.createCanvas();\n      }\n\n      image = canvas.toDataURL();\n\n      if (type === 'PDF') {\n        this.exportPdf(canvas, orientation, width, height, isDownload, fileName, header, footer);\n      } else {\n        this.doexport(type, image, fileName);\n      }\n    } else {\n      var image_1 = new Image();\n      var ctx_1 = element.getContext('2d');\n\n      image_1.onload = function () {\n        ctx_1.drawImage(image_1, 0, 0);\n        window.URL.revokeObjectURL(url);\n\n        if (type === 'PDF') {\n          _this.exportPdf(element, orientation, width, height, isDownload, fileName, header, footer);\n        } else {\n          if (window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n          } else {\n            _this.triggerDownload(fileName, type, element.toDataURL('image/' + type.toLowerCase()), isDownload);\n          }\n        }\n      };\n\n      image_1.src = url;\n    }\n\n    if (!isCanvas) {\n      removeElement(document.getElementById(this.control.element.id + '_canvas'));\n    }\n  };\n  /**\n   * To get data url for charts.\n   */\n\n\n  ExportUtils.prototype.getDataUrl = function (chart) {\n    var controlValue = this.getControlsValue([chart]);\n    var element = this.control.svgObject;\n    var isCanvas = this.control.enableCanvas;\n\n    if (!isCanvas) {\n      element = createElement('canvas', {\n        id: 'ej2-canvas',\n        attrs: {\n          'width': controlValue.width.toString(),\n          'height': controlValue.height.toString()\n        }\n      });\n    }\n\n    var url = window.URL.createObjectURL(new Blob([new XMLSerializer().serializeToString(controlValue.svg)], {\n      type: 'image/svg+xml'\n    }));\n\n    if (Browser.info.name === 'msie') {\n      var canvas = element;\n\n      if (!isCanvas) {\n        canvas = this.createCanvas();\n      }\n\n      var argsData = {\n        name: afterExport,\n        cancel: false,\n        dataUrl: element.toDataURL('image/png')\n      };\n      chart.trigger(afterExport, argsData);\n      return {\n        element: canvas,\n        dataUrl: canvas.toDataURL()\n      };\n    } else {\n      var image_2 = new Image();\n      var ctx_2 = element.getContext('2d');\n\n      image_2.onload = function () {\n        ctx_2.drawImage(image_2, 0, 0);\n        window.URL.revokeObjectURL(url);\n        var argsData = {\n          name: afterExport,\n          cancel: false,\n          dataUrl: element.toDataURL('image/png')\n        };\n        chart.trigger(afterExport, argsData);\n        return argsData.dataUrl;\n      };\n\n      image_2.src = url;\n      return {\n        element: element,\n        blobUrl: url\n      };\n    }\n  };\n  /**\n   * To trigger the download element\n   * @param fileName\n   * @param type\n   * @param url\n   */\n\n\n  ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n    createElement('a', {\n      attrs: {\n        'download': fileName + '.' + type.toLocaleLowerCase(),\n        'href': url\n      }\n    }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    }));\n  };\n  /**\n   * To get the maximum size value\n   * @param controls\n   * @param name\n   */\n  // tslint:disable-next-line:max-line-length\n\n\n  ExportUtils.prototype.getControlsValue = function (controls, isVertical) {\n    var width = 0;\n    var height = 0;\n    var content = '';\n    var isCanvas = this.control.enableCanvas;\n    var svgObject = new SvgRenderer('').createSvg({\n      id: 'Svg_Export_Element',\n      width: 200,\n      height: 200\n    });\n    controls.map(function (control) {\n      var svg = control.svgObject.cloneNode(true);\n      var groupEle = control.renderer.createGroup({\n        style: isNullOrUndefined(isVertical) || isVertical ? 'transform: translateY(' + height + 'px)' : 'transform: translateX(' + width + 'px)'\n      });\n\n      if (!isCanvas) {\n        groupEle.appendChild(svg);\n      }\n\n      width = isNullOrUndefined(isVertical) || isVertical ? Math.max(control.availableSize.width, width) : width + control.availableSize.width;\n      height = isNullOrUndefined(isVertical) || isVertical ? height + control.availableSize.height : Math.max(control.availableSize.height, height);\n      content += control.svgObject.outerHTML;\n\n      if (!isCanvas) {\n        svgObject.appendChild(groupEle);\n      }\n    });\n\n    if (!isCanvas) {\n      svgObject.setAttribute('width', width + '');\n      svgObject.setAttribute('height', height + '');\n    }\n\n    return {\n      'width': width,\n      'height': height,\n      'svg': svgObject\n    };\n  };\n\n  ExportUtils.prototype.createCanvas = function () {\n    var chart = this.control;\n    this.canvasRender(true, chart);\n    var canvas = chart.svgObject;\n    this.canvasRender(false, chart);\n    return canvas;\n  };\n  /**\n   * To convert svg chart into canvas chart to fix export issue in IE\n   * We cant export svg to other formats in IE\n   */\n  // tslint:disable:no-string-literal\n\n\n  ExportUtils.prototype.canvasRender = function (enableCanvas, chart) {\n    chart.enableCanvas = enableCanvas;\n    chart['preRender']();\n    chart['render']();\n  }; // tslint:disable-next-line:max-line-length\n\n\n  ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName, header, footer) {\n    var document = new PdfDocument();\n    var margin = document.pageSettings.margins;\n    var pdfDefaultWidth = document.pageSettings.width;\n    var pdfDefaultHeight = document.pageSettings.height;\n    var exactWidth;\n    var exactHeight;\n    var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n    document.pageSettings.orientation = orientation;\n    exactWidth = pdfDefaultWidth < width ? width + margin.left + margin.right : pdfDefaultWidth;\n    exactHeight = pdfDefaultHeight < height ? height + margin.top + margin.bottom : pdfDefaultHeight;\n\n    if (header !== undefined) {\n      var font = new PdfStandardFont(1, header.fontSize || 15);\n      var pdfHeader = new PdfPageTemplateElement(exactWidth, 40); // tslint:disable-next-line:max-line-length\n\n      pdfHeader.graphics.drawString(header.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), header.x, header.y, null);\n      document.template.top = pdfHeader;\n    }\n\n    if (footer !== undefined) {\n      var font = new PdfStandardFont(1, footer.fontSize || 15);\n      var pdfFooter = new PdfPageTemplateElement(exactWidth, 40); // tslint:disable-next-line:max-line-length\n\n      pdfFooter.graphics.drawString(footer.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), footer.x, footer.y, null);\n      document.template.bottom = pdfFooter;\n    }\n\n    document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n    imageString = imageString.slice(imageString.indexOf(',') + 1);\n    document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width, height);\n\n    if (isDownload) {\n      document.save(fileName + '.pdf');\n      document.destroy();\n    }\n  };\n\n  ExportUtils.prototype.doexport = function (type, image, fileName) {\n    var images = [];\n    var fileType = type || 'JPG';\n    images = [image];\n    this.exportImage(images, fileName, fileType, image);\n  };\n\n  ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n    var buffers = [];\n    var length = !(images instanceof HTMLElement) ? images.length : 0;\n\n    for (var g = 0; g < length; g++) {\n      image = images[g];\n      image = image.replace(/^data:[a-z]*;,/, '');\n      var image1 = image.split(',');\n      var byteString = atob(image1[1]);\n      var buffer = new ArrayBuffer(byteString.length);\n      var intArray = new Uint8Array(buffer);\n\n      for (var i = 0; i < byteString.length; i++) {\n        intArray[i] = byteString.charCodeAt(i);\n      }\n\n      buffers.push(buffer);\n    }\n\n    for (var j = 0; j < buffers.length; j++) {\n      var b = new Blob([buffers[j]], {\n        type: 'application/octet-stream'\n      });\n\n      if (Browser.info.name === 'msie') {\n        window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n      }\n    }\n  };\n\n  return ExportUtils;\n}();\n\nexport { ExportUtils };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/common/utils/export.js"],"names":["print","printWindow","createElement","isNullOrUndefined","Browser","SvgRenderer","getElement","removeElement","beforePrint","afterExport","PdfPageOrientation","PdfDocument","PdfBitmap","SizeF","PdfStandardFont","PdfPageTemplateElement","PdfSolidBrush","PdfColor","ExportUtils","control","prototype","elements","window","open","outerHeight","outerWidth","moveTo","resizeTo","screen","availWidth","availHeight","argsData","cancel","htmlContent","getHTMLContent","name","trigger","div","Array","j","length","value","appendChild","cloneNode","Element","element","export","type","fileName","orientation","controls","width","height","isVertical","header","footer","_this","controlValue","getControlsValue","svgObject","isCanvas","enableCanvas","image","id","attrs","toString","isDownload","userAgent","indexOf","Landscape","svgData","svg","outerHTML","url","URL","createObjectURL","Blob","XMLSerializer","serializeToString","info","navigator","msSaveOrOpenBlob","toLocaleLowerCase","triggerDownload","canvas","createCanvas","toDataURL","exportPdf","doexport","image_1","Image","ctx_1","getContext","onload","drawImage","revokeObjectURL","msToBlob","toLowerCase","src","document","getElementById","getDataUrl","chart","dataUrl","image_2","ctx_2","blobUrl","dispatchEvent","MouseEvent","view","bubbles","cancelable","content","createSvg","map","groupEle","renderer","createGroup","style","Math","max","availableSize","setAttribute","canvasRender","margin","pageSettings","margins","pdfDefaultWidth","pdfDefaultHeight","exactWidth","exactHeight","imageString","replace","left","right","top","bottom","undefined","font","fontSize","pdfHeader","graphics","drawString","x","y","template","pdfFooter","size","slice","pages","add","save","destroy","images","fileType","exportImage","buffers","HTMLElement","g","image1","split","byteString","atob","buffer","ArrayBuffer","intArray","Uint8Array","i","charCodeAt","push","b"],"mappings":"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","sourcesContent":["import { print as printWindow, createElement, isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { getElement, removeElement } from '../utils/helper';\nimport { beforePrint, afterExport } from '../model/constants';\nimport { PdfPageOrientation, PdfDocument, PdfBitmap, SizeF, PdfStandardFont, PdfPageTemplateElement, PdfSolidBrush, PdfColor } from '@syncfusion/ej2-pdf-export';\nvar ExportUtils = /** @class */ (function () {\n    /**\n     * Constructor for chart and accumulation annotation\n     * @param control\n     */\n    function ExportUtils(control) {\n        this.control = control;\n    }\n    /**\n     * To print the accumulation and chart elements\n     * @param elements\n     */\n    ExportUtils.prototype.print = function (elements) {\n        this.printWindow = window.open('', 'print', 'height=' + window.outerHeight + ',width=' + window.outerWidth + ',tabbar=no');\n        this.printWindow.moveTo(0, 0);\n        this.printWindow.resizeTo(screen.availWidth, screen.availHeight);\n        var argsData = {\n            cancel: false, htmlContent: this.getHTMLContent(elements), name: beforePrint\n        };\n        this.control.trigger(beforePrint, argsData);\n        if (!argsData.cancel) {\n            printWindow(argsData.htmlContent, this.printWindow);\n        }\n    };\n    /**\n     * To get the html string of the chart and accumulation\n     * @param elements\n     * @private\n     */\n    ExportUtils.prototype.getHTMLContent = function (elements) {\n        var div = createElement('div');\n        if (elements) {\n            if (elements instanceof Array) {\n                for (var j = 0; j < elements.length; j++) {\n                    var value = elements[j];\n                    div.appendChild(getElement(value).cloneNode(true));\n                }\n            }\n            else if (elements instanceof Element) {\n                div.appendChild(elements.cloneNode(true));\n            }\n            else {\n                div.appendChild(getElement(elements).cloneNode(true));\n            }\n        }\n        else {\n            div.appendChild(this.control.element.cloneNode(true));\n        }\n        return div;\n    };\n    /**\n     * To export the file as image/svg format\n     * @param type\n     * @param fileName\n     */\n    ExportUtils.prototype.export = function (type, fileName, orientation, controls, width, height, isVertical, header, footer) {\n        var _this = this;\n        var controlValue = this.getControlsValue(controls, isVertical);\n        width = width ? width : controlValue.width;\n        height = height ? height : controlValue.height;\n        var element = this.control.svgObject;\n        var isCanvas = this.control.enableCanvas;\n        var image;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': width.toString(),\n                    'height': height.toString()\n                }\n            });\n        }\n        var isDownload = !(Browser.userAgent.toString().indexOf('HeadlessChrome') > -1);\n        orientation = isNullOrUndefined(orientation) ? PdfPageOrientation.Landscape : orientation;\n        var svgData = '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">' +\n            controlValue.svg.outerHTML +\n            '</svg>';\n        var url = window.URL.createObjectURL(new Blob(type === 'SVG' ? [svgData] :\n            [(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'image/svg+xml' }));\n        if (type === 'SVG') {\n            if (Browser.info.name === 'msie') {\n                var svg = new Blob([(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'application/octet-stream' });\n                window.navigator.msSaveOrOpenBlob(svg, fileName + '.' + type.toLocaleLowerCase());\n            }\n            else {\n                this.triggerDownload(fileName, type, url, isDownload);\n            }\n        }\n        else if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            image = canvas.toDataURL();\n            if (type === 'PDF') {\n                this.exportPdf(canvas, orientation, width, height, isDownload, fileName, header, footer);\n            }\n            else {\n                this.doexport(type, image, fileName);\n            }\n        }\n        else {\n            var image_1 = new Image();\n            var ctx_1 = element.getContext('2d');\n            image_1.onload = (function () {\n                ctx_1.drawImage(image_1, 0, 0);\n                window.URL.revokeObjectURL(url);\n                if (type === 'PDF') {\n                    _this.exportPdf(element, orientation, width, height, isDownload, fileName, header, footer);\n                }\n                else {\n                    if (window.navigator.msSaveOrOpenBlob) {\n                        window.navigator.msSaveOrOpenBlob(element.msToBlob(), fileName + '.' + type.toLocaleLowerCase());\n                    }\n                    else {\n                        _this.triggerDownload(fileName, type, element.toDataURL('image/' + type.toLowerCase()), isDownload);\n                    }\n                }\n            });\n            image_1.src = url;\n        }\n        if (!isCanvas) {\n            removeElement(document.getElementById(this.control.element.id + '_canvas'));\n        }\n    };\n    /**\n     * To get data url for charts.\n     */\n    ExportUtils.prototype.getDataUrl = function (chart) {\n        var controlValue = this.getControlsValue([chart]);\n        var element = this.control.svgObject;\n        var isCanvas = this.control.enableCanvas;\n        if (!isCanvas) {\n            element = createElement('canvas', {\n                id: 'ej2-canvas',\n                attrs: {\n                    'width': controlValue.width.toString(),\n                    'height': controlValue.height.toString()\n                }\n            });\n        }\n        var url = window.URL.createObjectURL(new Blob([(new XMLSerializer()).serializeToString(controlValue.svg)], { type: 'image/svg+xml' }));\n        if (Browser.info.name === 'msie') {\n            var canvas = element;\n            if (!isCanvas) {\n                canvas = this.createCanvas();\n            }\n            var argsData = {\n                name: afterExport, cancel: false, dataUrl: element.toDataURL('image/png')\n            };\n            chart.trigger(afterExport, argsData);\n            return { element: canvas, dataUrl: canvas.toDataURL() };\n        }\n        else {\n            var image_2 = new Image();\n            var ctx_2 = element.getContext('2d');\n            image_2.onload = (function () {\n                ctx_2.drawImage(image_2, 0, 0);\n                window.URL.revokeObjectURL(url);\n                var argsData = {\n                    name: afterExport, cancel: false, dataUrl: element.toDataURL('image/png')\n                };\n                chart.trigger(afterExport, argsData);\n                return argsData.dataUrl;\n            });\n            image_2.src = url;\n            return { element: element, blobUrl: url };\n        }\n    };\n    /**\n     * To trigger the download element\n     * @param fileName\n     * @param type\n     * @param url\n     */\n    ExportUtils.prototype.triggerDownload = function (fileName, type, url, isDownload) {\n        createElement('a', {\n            attrs: {\n                'download': fileName + '.' + type.toLocaleLowerCase(),\n                'href': url\n            }\n        }).dispatchEvent(new MouseEvent(isDownload ? 'click' : 'move', {\n            view: window,\n            bubbles: false,\n            cancelable: true\n        }));\n    };\n    /**\n     * To get the maximum size value\n     * @param controls\n     * @param name\n     */\n    // tslint:disable-next-line:max-line-length\n    ExportUtils.prototype.getControlsValue = function (controls, isVertical) {\n        var width = 0;\n        var height = 0;\n        var content = '';\n        var isCanvas = this.control.enableCanvas;\n        var svgObject = new SvgRenderer('').createSvg({\n            id: 'Svg_Export_Element',\n            width: 200, height: 200\n        });\n        controls.map(function (control) {\n            var svg = control.svgObject.cloneNode(true);\n            var groupEle = control.renderer.createGroup({\n                style: (isNullOrUndefined(isVertical) || isVertical) ? 'transform: translateY(' + height + 'px)' :\n                    'transform: translateX(' + width + 'px)'\n            });\n            if (!isCanvas) {\n                groupEle.appendChild(svg);\n            }\n            width = (isNullOrUndefined(isVertical) || isVertical) ? Math.max(control.availableSize.width, width) :\n                width + control.availableSize.width;\n            height = (isNullOrUndefined(isVertical) || isVertical) ? height + control.availableSize.height :\n                Math.max(control.availableSize.height, height);\n            content += control.svgObject.outerHTML;\n            if (!isCanvas) {\n                svgObject.appendChild(groupEle);\n            }\n        });\n        if (!isCanvas) {\n            svgObject.setAttribute('width', width + '');\n            svgObject.setAttribute('height', height + '');\n        }\n        return {\n            'width': width,\n            'height': height,\n            'svg': svgObject\n        };\n    };\n    ExportUtils.prototype.createCanvas = function () {\n        var chart = this.control;\n        this.canvasRender(true, chart);\n        var canvas = chart.svgObject;\n        this.canvasRender(false, chart);\n        return canvas;\n    };\n    /**\n     * To convert svg chart into canvas chart to fix export issue in IE\n     * We cant export svg to other formats in IE\n     */\n    // tslint:disable:no-string-literal\n    ExportUtils.prototype.canvasRender = function (enableCanvas, chart) {\n        chart.enableCanvas = enableCanvas;\n        chart['preRender']();\n        chart['render']();\n    };\n    // tslint:disable-next-line:max-line-length\n    ExportUtils.prototype.exportPdf = function (element, orientation, width, height, isDownload, fileName, header, footer) {\n        var document = new PdfDocument();\n        var margin = document.pageSettings.margins;\n        var pdfDefaultWidth = document.pageSettings.width;\n        var pdfDefaultHeight = document.pageSettings.height;\n        var exactWidth;\n        var exactHeight;\n        var imageString = element.toDataURL('image/jpeg').replace('image/jpeg', 'image/octet-stream');\n        document.pageSettings.orientation = orientation;\n        exactWidth = (pdfDefaultWidth < width) ? (width + margin.left + margin.right) : pdfDefaultWidth;\n        exactHeight = (pdfDefaultHeight < height) ? (height + margin.top + margin.bottom) : pdfDefaultHeight;\n        if (header !== undefined) {\n            var font = new PdfStandardFont(1, header.fontSize || 15);\n            var pdfHeader = new PdfPageTemplateElement(exactWidth, 40);\n            // tslint:disable-next-line:max-line-length\n            pdfHeader.graphics.drawString(header.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), header.x, header.y, null);\n            document.template.top = pdfHeader;\n        }\n        if (footer !== undefined) {\n            var font = new PdfStandardFont(1, footer.fontSize || 15);\n            var pdfFooter = new PdfPageTemplateElement(exactWidth, 40);\n            // tslint:disable-next-line:max-line-length\n            pdfFooter.graphics.drawString(footer.content + '', font, null, new PdfSolidBrush(new PdfColor(0, 0, 0)), footer.x, footer.y, null);\n            document.template.bottom = pdfFooter;\n        }\n        document.pageSettings.size = new SizeF(exactWidth, exactHeight);\n        imageString = imageString.slice(imageString.indexOf(',') + 1);\n        document.pages.add().graphics.drawImage(new PdfBitmap(imageString), 0, 0, width, height);\n        if (isDownload) {\n            document.save(fileName + '.pdf');\n            document.destroy();\n        }\n    };\n    ExportUtils.prototype.doexport = function (type, image, fileName) {\n        var images = [];\n        var fileType = type || 'JPG';\n        images = [image];\n        this.exportImage(images, fileName, fileType, image);\n    };\n    ExportUtils.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        for (var j = 0; j < buffers.length; j++) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType.toLocaleLowerCase());\n            }\n        }\n    };\n    return ExportUtils;\n}());\nexport { ExportUtils };\n"]},"metadata":{},"sourceType":"module"}