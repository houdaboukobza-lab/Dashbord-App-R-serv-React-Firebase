{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\n\nvar PdfPage =\n/** @class */\nfunction (_super) {\n  __extends(PdfPage, _super); //constructors\n\n  /**\n   * Initialize the new instance for `PdfPage` class.\n   * @private\n   */\n\n\n  function PdfPage() {\n    var _this = _super.call(this, new PdfDictionary()) || this;\n    /**\n     * Stores the instance of `PdfAnnotationCollection` class.\n     * @hidden\n     * @default null\n     * @private\n     */\n\n\n    _this.annotationCollection = null;\n    /**\n     * Stores the instance of `PageBeginSave` event for Page Number Field.\n     * @default null\n     * @private\n     */\n\n    _this.beginSave = null;\n\n    _this.initialize();\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfPage.prototype, \"document\", {\n    //Properties\n\n    /**\n     * Gets current `document`.\n     * @private\n     */\n    get: function () {\n      if (this.section !== null && this.section.parent !== null) {\n        return this.section.parent.document;\n      } else {\n        return null;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"graphics\", {\n    /**\n     * Get the current `graphics`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * //\n     * // get graphics\n     * let graphics : PdfGraphics = page1.graphics;\n     * //\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      var result = this.defaultLayer.graphics;\n      result.currentPage = this;\n      return result;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n    /**\n     * Gets the `cross table`.\n     * @private\n     */\n    get: function () {\n      if (this.section === null) {\n        throw new Error('PdfDocumentException : Page is not created');\n      }\n\n      return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"size\", {\n    /**\n     * Gets the size of the PDF page- Read only.\n     * @public\n     */\n    get: function () {\n      return this.section.pageSettings.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"origin\", {\n    /**\n     * Gets the `origin` of the page.\n     * @private\n     */\n    get: function () {\n      return this.section.pageSettings.origin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPage.prototype, \"annotations\", {\n    /**\n     * Gets a collection of the `annotations` of the page- Read only.\n     * @private\n     */\n    get: function () {\n      if (this.annotationCollection == null) {\n        this.annotationCollection = new PdfAnnotationCollection(this); // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n\n        this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element); // }\n\n        this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n      }\n\n      return this.annotationCollection;\n    },\n    enumerable: true,\n    configurable: true\n  }); //Implementation\n\n  /**\n   * `Initializes` a page.\n   * @private\n   */\n\n  PdfPage.prototype.initialize = function () {\n    this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n    this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n  };\n  /**\n   * Sets parent `section` to the page.\n   * @private\n   */\n\n\n  PdfPage.prototype.setSection = function (section) {\n    this.section = section;\n    this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n  };\n  /**\n   * `Resets the progress`.\n   * @private\n   */\n\n\n  PdfPage.prototype.resetProgress = function () {\n    this.isProgressOn = false;\n  };\n  /**\n   * Get the page size reduced by page margins and page template dimensions.\n   * ```typescript\n   * // create a new PDF document\n   * let document : PdfDocument = new PdfDocument();\n   * // add a pages to the document\n   * let page1 : PdfPage = document.pages.add();\n   * // create new standard font\n   * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n   * // set brush\n   * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n   * //\n   * // set the specified point using `getClientSize` method\n   * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n   * // draw the text\n   * page1.graphics.drawString('Hello World', font, blackBrush, point);\n   * //\n   * // save the document\n   * document.save('output.pdf');\n   * // destroy the document\n   * document.destroy();\n   * ```\n   */\n\n\n  PdfPage.prototype.getClientSize = function () {\n    var returnValue = this.section.getActualBounds(this, true);\n    return new SizeF(returnValue.width, returnValue.height);\n  };\n  /**\n   * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n   * @private\n   */\n\n\n  PdfPage.prototype.pageBeginSave = function () {\n    var doc = this.document;\n\n    if (typeof doc !== undefined && doc != null) {\n      this.drawPageTemplates(doc);\n    }\n\n    if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n      this.beginSave(this);\n    }\n  };\n  /**\n   * Helper method to draw template elements.\n   * @private\n   */\n\n\n  PdfPage.prototype.drawPageTemplates = function (document) {\n    // Draw Background templates.\n    var hasBackTemplates = this.section.containsTemplates(document, this, false);\n\n    if (hasBackTemplates) {\n      var backLayer = new PdfPageLayer(this, false);\n      this.layers.insert(0, backLayer);\n      this.section.drawTemplates(this, backLayer, document, false);\n\n      if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n        for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n          var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n          fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n        }\n      }\n    } // Draw Foreground templates.\n\n\n    var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n\n    if (hasFrontTemplates) {\n      var frontLayer = new PdfPageLayer(this, false);\n      this.layers.add(frontLayer);\n      this.section.drawTemplates(this, frontLayer, document, true);\n    }\n  };\n\n  return PdfPage;\n}(PdfPageBase);\n\nexport { PdfPage };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfPageBase","PdfDictionary","SaveTemplateEventHandler","PdfName","PdfReferenceHolder","SizeF","PdfAnnotationCollection","PdfPageLayer","PdfPage","_super","_this","call","annotationCollection","beginSave","initialize","defineProperty","get","section","parent","document","enumerable","configurable","result","defaultLayer","graphics","currentPage","Error","parentDocument","crossTable","pageSettings","size","origin","dictionary","items","setValue","dictionaryProperties","annots","element","annotations","getValue","type","pageBeginDrawTemplate","setSection","resetProgress","isProgressOn","getClientSize","returnValue","getActualBounds","width","height","pageBeginSave","doc","undefined","drawPageTemplates","hasBackTemplates","containsTemplates","backLayer","layers","insert","drawTemplates","i","automaticFields","length","fieldInfo","field","performDraw","location","scalingX","scalingY","hasFrontTemplates","frontLayer","add"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n"]},"metadata":{},"sourceType":"module"}