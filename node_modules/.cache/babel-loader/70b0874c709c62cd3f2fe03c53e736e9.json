{"ast":null,"code":"import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\n\nvar PdfPageLayer =\n/** @class */\nfunction () {\n  function PdfPageLayer(page, streamClipPageTemplates) {\n    // private bSaved : boolean;\n\n    /**\n     * Local Variable to store the `color space` of the document.\n     * @private\n     */\n    this.pdfColorSpace = PdfColorSpace.Rgb;\n    /**\n     * Local Variable to set `visibility`.\n     * @default true\n     * @private\n     */\n\n    this.isVisible = true;\n    /**\n     * Indicates if `Sublayer` is present.\n     * @default false\n     * @private\n     */\n\n    this.sublayer = false;\n    /**\n     * Local variable to store `length` of the graphics.\n     * @default 0\n     * @private\n     */\n\n    this.contentLength = 0;\n    /**\n     * Instance for `PdfDictionaryProperties` Class.\n     * @private\n     */\n\n    this.dictionaryProperties = new DictionaryProperties();\n\n    if (page === null) {\n      throw new Error('ArgumentNullException:page');\n    }\n\n    this.pdfPage = page;\n    this.clipPageTemplates = true;\n\n    if (typeof streamClipPageTemplates === 'undefined') {\n      this.content = new PdfStream();\n    } else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n      if (streamClipPageTemplates === null) {\n        throw new Error('ArgumentNullException:stream');\n      }\n\n      this.content = streamClipPageTemplates;\n    } else {\n      this.content = new PdfStream();\n      this.clipPageTemplates = streamClipPageTemplates;\n    }\n  }\n\n  Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n    // Properties\n\n    /**\n     * Get or set the `color space`.\n     * @private\n     */\n    get: function () {\n      return this.pdfColorSpace;\n    },\n    set: function (value) {\n      this.pdfColorSpace = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n    /**\n     * Gets parent `page` of the layer.\n     * @private\n     */\n    get: function () {\n      return this.pdfPage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n    /**\n     * Gets and Sets the `id of the layer`.\n     * @private\n     */\n    get: function () {\n      return this.layerid;\n    },\n    set: function (value) {\n      this.layerid = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n    /**\n     * Gets or sets the `name` of the layer.\n     * @private\n     */\n    get: function () {\n      return this.layerName;\n    },\n    set: function (value) {\n      this.layerName = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n    /**\n     * Gets or sets the `visibility` of the layer.\n     * @private\n     */\n    get: function () {\n      return this.isVisible;\n    },\n    set: function (value) {\n      this.isVisible = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n    /**\n     * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n     * @private\n     */\n    get: function () {\n      if (this.pdfGraphics == null) {\n        this.initializeGraphics(this.page);\n      }\n\n      return this.pdfGraphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n    /**\n     * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n     * @private\n     */\n    get: function () {\n      if (this.layer == null) {\n        this.layer = new PdfPageLayerCollection(this.page);\n        this.layer.sublayer = true;\n        return this.layer;\n      } else {\n        return this.layer;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * `Adds` a new PDF Page layer.\n   * @private\n   */\n\n  PdfPageLayer.prototype.add = function () {\n    var layer = new PdfPageLayer(this.pdfPage);\n    layer.name = '';\n    return layer;\n  };\n  /**\n   * Returns a value indicating the `sign` of a single-precision floating-point number.\n   * @private\n   */\n\n\n  PdfPageLayer.prototype.sign = function (number) {\n    if (number === 0) {\n      return 0;\n    } else if (number > 0) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n  /**\n   * `Initializes Graphics context` of the layer.\n   * @private\n   */\n\n\n  PdfPageLayer.prototype.initializeGraphics = function (page) {\n    var oPage = page;\n    var gr = new GetResourceEventHandler(this.page);\n    var cropBox = null;\n    this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n    this.pdfGraphics.mediaBoxUpperRightBound = 0;\n\n    if (oPage != null) {\n      var sc = oPage.section.parent;\n\n      if (sc != null) {\n        this.pdfGraphics.colorSpace = sc.document.colorSpace;\n        this.colorSpace = sc.document.colorSpace;\n      }\n    } // Transform coordinates to the left/top and activate margins.\n\n\n    var isSame = this.sign(page.origin.y) === this.sign(page.origin.x); // if (page != null) {\n\n    if (page.origin.x >= 0 && page.origin.y >= 0 || !isSame) {\n      this.pdfGraphics.initializeCoordinates();\n    } else {// this.m_graphics.InitializeCoordinates(page);\n    }\n\n    var clipRect = oPage.section.getActualBounds(oPage, true);\n    var margins = oPage.section.pageSettings.margins;\n\n    if (this.clipPageTemplates) {\n      if (page.origin.x >= 0 && page.origin.y >= 0) {\n        this.pdfGraphics.clipTranslateMargins(clipRect);\n      }\n    } else {\n      this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n    }\n\n    this.pdfGraphics.setLayer(this); // this.bSaved = false;\n  };\n\n  Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n    // IPdfWrapper Members\n\n    /**\n     * Gets the wrapped `element`.\n     * @private\n     */\n    get: function () {\n      return this.content;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfPageLayer;\n}();\n\nexport { PdfPageLayer };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-page-layer.js"],"names":["PdfStream","PdfGraphics","GetResourceEventHandler","PdfPageLayerCollection","DictionaryProperties","PdfColorSpace","PdfPageLayer","page","streamClipPageTemplates","pdfColorSpace","Rgb","isVisible","sublayer","contentLength","dictionaryProperties","Error","pdfPage","clipPageTemplates","content","Object","defineProperty","prototype","get","set","value","enumerable","configurable","layerid","layerName","pdfGraphics","initializeGraphics","layer","add","name","sign","number","oPage","gr","cropBox","size","mediaBoxUpperRightBound","sc","section","parent","colorSpace","document","isSame","origin","y","x","initializeCoordinates","clipRect","getActualBounds","margins","pageSettings","clipTranslateMargins","graphics","left","top","right","bottom","setLayer"],"mappings":"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","sourcesContent":["import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n"]},"metadata":{},"sourceType":"module"}