{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { getPoint, withInRange, ChartLocation, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `AreaSeries` module is used to render the area series.\n */\n\nvar AreaSeries =\n/** @class */\nfunction (_super) {\n  __extends(AreaSeries, _super);\n\n  function AreaSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render Area series.\n   * @return {void}\n   * @private\n   */\n\n\n  AreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    var startPoint = null;\n    var direction = '';\n    var isPolar = series.chart && series.chart.chartAreaType === 'PolarRadar';\n    var origin = Math.max(series.yAxis.visibleRange.min, 0);\n\n    if (isPolar) {\n      var connectPoints = this.getFirstLastVisiblePoint(series.points);\n      origin = connectPoints.first.yValue;\n    }\n\n    var currentXValue;\n    var isDropMode = series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop';\n    var borderWidth = series.border ? series.border.width : 0;\n    var borderColor = series.border ? series.border.color : 'transparent';\n    var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n    var visiblePoints = this.enableComplexProperty(series);\n    var point;\n\n    for (var i = 0; i < visiblePoints.length; i++) {\n      point = visiblePoints[i];\n      currentXValue = point.xValue;\n      point.symbolLocations = [];\n      point.regions = [];\n\n      if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n        direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n        startPoint = startPoint || new ChartLocation(currentXValue, origin); // First Point to draw the area path\n\n        direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n\n        if (visiblePoints[i + 1] && !visiblePoints[i + 1].visible && (!isPolar || isPolar && this.withinYRange(visiblePoints[i + 1], yAxis)) && !isDropMode) {\n          direction += this.getAreaEmptyDirection({\n            'x': currentXValue,\n            'y': origin\n          }, startPoint, series, isInverted, getCoordinate);\n          startPoint = null;\n        }\n\n        this.storePointLocation(point, series, isInverted, getCoordinate);\n      }\n    }\n\n    if (isPolar && direction !== '') {\n      var endPoint = '';\n      var chart = this.chart;\n      endPoint += this.getAreaPathDirection(0, origin, series, isInverted, getCoordinate, null, 'L');\n\n      if (xAxis.isInversed || yAxis.isInversed) {\n        direction += series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, endPoint) : chart.radarSeriesModule.getRadarIsInversedPath(xAxis, endPoint);\n      }\n\n      direction = direction.concat(direction + ' ' + 'Z');\n    }\n\n    this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, borderWidth, borderColor, series.opacity, series.dashArray, series.points.length > 1 && direction !== '' ? direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ? series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L') : ''), series, '');\n    this.renderMarker(series);\n  };\n  /**\n   * To destroy the area series.\n   * @return {void}\n   * @private\n   */\n\n\n  AreaSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method calling here\n     */\n  };\n  /**\n   * Get module name\n   */\n\n\n  AreaSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'AreaSeries';\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  AreaSeries.prototype.doAnimation = function (series) {\n    var option = series.animation;\n    this.doLinearAnimation(series, option);\n  };\n\n  return AreaSeries;\n}(MultiColoredSeries);\n\nexport { AreaSeries };","map":{"version":3,"sources":["C:/Users/Power GSM/Desktop/React-Fito-v1.0-9-April-2021V/React-Fito-v1.0-9-April-2021V/react-fito/node_modules/@syncfusion/ej2-charts/src/chart/series/area-series.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getPoint","withInRange","ChartLocation","TransformToVisible","PathOption","MultiColoredSeries","AreaSeries","_super","apply","arguments","render","series","xAxis","yAxis","isInverted","startPoint","direction","isPolar","chart","chartAreaType","origin","Math","max","visibleRange","min","connectPoints","getFirstLastVisiblePoint","points","first","yValue","currentXValue","isDropMode","emptyPointSettings","mode","borderWidth","border","width","borderColor","color","getCoordinate","visiblePoints","enableComplexProperty","point","i","length","xValue","symbolLocations","regions","visible","getAreaPathDirection","withinYRange","getAreaEmptyDirection","storePointLocation","endPoint","isInversed","type","polarSeriesModule","getPolarIsInversedPath","radarSeriesModule","getRadarIsInversedPath","concat","appendLinePath","element","id","index","interior","opacity","dashArray","renderMarker","destroy","getModuleName","doAnimation","option","animation","doLinearAnimation"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getPoint, withInRange, ChartLocation, TransformToVisible } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { MultiColoredSeries } from './multi-colored-base';\n/**\n * `AreaSeries` module is used to render the area series.\n */\nvar AreaSeries = /** @class */ (function (_super) {\n    __extends(AreaSeries, _super);\n    function AreaSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render Area series.\n     * @return {void}\n     * @private\n     */\n    AreaSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        var startPoint = null;\n        var direction = '';\n        var isPolar = (series.chart && series.chart.chartAreaType === 'PolarRadar');\n        var origin = Math.max(series.yAxis.visibleRange.min, 0);\n        if (isPolar) {\n            var connectPoints = this.getFirstLastVisiblePoint(series.points);\n            origin = connectPoints.first.yValue;\n        }\n        var currentXValue;\n        var isDropMode = (series.emptyPointSettings && series.emptyPointSettings.mode === 'Drop');\n        var borderWidth = series.border ? series.border.width : 0;\n        var borderColor = series.border ? series.border.color : 'transparent';\n        var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        var visiblePoints = this.enableComplexProperty(series);\n        var point;\n        for (var i = 0; i < visiblePoints.length; i++) {\n            point = visiblePoints[i];\n            currentXValue = point.xValue;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[i - 1], point, visiblePoints[i + 1], series)) {\n                direction += this.getAreaPathDirection(currentXValue, origin, series, isInverted, getCoordinate, startPoint, 'M');\n                startPoint = startPoint || new ChartLocation(currentXValue, origin);\n                // First Point to draw the area path\n                direction += this.getAreaPathDirection(currentXValue, point.yValue, series, isInverted, getCoordinate, null, 'L');\n                if (visiblePoints[i + 1] && (!visiblePoints[i + 1].visible &&\n                    (!isPolar || (isPolar && this.withinYRange(visiblePoints[i + 1], yAxis)))) && !isDropMode) {\n                    direction += this.getAreaEmptyDirection({ 'x': currentXValue, 'y': origin }, startPoint, series, isInverted, getCoordinate);\n                    startPoint = null;\n                }\n                this.storePointLocation(point, series, isInverted, getCoordinate);\n            }\n        }\n        if (isPolar && direction !== '') {\n            var endPoint = '';\n            var chart = this.chart;\n            endPoint += this.getAreaPathDirection(0, origin, series, isInverted, getCoordinate, null, 'L');\n            if (xAxis.isInversed || yAxis.isInversed) {\n                direction += (series.type === 'Polar' ? chart.polarSeriesModule.getPolarIsInversedPath(xAxis, endPoint) :\n                    chart.radarSeriesModule.getRadarIsInversedPath(xAxis, endPoint));\n            }\n            direction = direction.concat(direction + ' ' + 'Z');\n        }\n        this.appendLinePath(new PathOption(series.chart.element.id + '_Series_' + series.index, series.interior, borderWidth, borderColor, series.opacity, series.dashArray, ((series.points.length > 1 && direction !== '') ? (direction + this.getAreaPathDirection(series.points[series.points.length - 1].xValue, series.chart.chartAreaType === 'PolarRadar' ?\n            series.points[series.points.length - 1].yValue : origin, series, isInverted, getCoordinate, null, 'L')) : '')), series, '');\n        this.renderMarker(series);\n    };\n    /**\n     * To destroy the area series.\n     * @return {void}\n     * @private\n     */\n    AreaSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroy method calling here\n         */\n    };\n    /**\n     * Get module name\n     */\n    AreaSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'AreaSeries';\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    AreaSeries.prototype.doAnimation = function (series) {\n        var option = series.animation;\n        this.doLinearAnimation(series, option);\n    };\n    return AreaSeries;\n}(MultiColoredSeries));\nexport { AreaSeries };\n"]},"metadata":{},"sourceType":"module"}